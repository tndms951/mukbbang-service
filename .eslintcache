[{"/Users/songjisu/Desktop/bread_service/src/index.js":"1","/Users/songjisu/Desktop/bread_service/src/reportWebVitals.js":"2","/Users/songjisu/Desktop/bread_service/src/components/redux/store.js":"3","/Users/songjisu/Desktop/bread_service/src/App.jsx":"4","/Users/songjisu/Desktop/bread_service/src/components/redux/root-reducer.js":"5","/Users/songjisu/Desktop/bread_service/src/layout.js":"6","/Users/songjisu/Desktop/bread_service/src/utils/common.js":"7","/Users/songjisu/Desktop/bread_service/src/utils/axios.js":"8","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.actions.js":"9","/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content.jsx":"10","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content.jsx":"11","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content.jsx":"12","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/breadhouse_rangking.jsx":"13","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread.jsx":"14","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/popular/popular_component.jsx":"15","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.reducer.js":"16","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.reducer.js":"17","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.reducer.js":"18","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.types.js":"19","/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer.jsx":"20","/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header.jsx":"21","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.selectors.js":"22","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.actions.js":"23","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.selectors.js":"24","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.actions.js":"25","/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content_style.jsx":"26","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content_style.jsx":"27","/Users/songjisu/Desktop/bread_service/src/components/common-component/social.jsx":"28","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content_style.jsx":"29","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/breadhouse_rangking_style.jsx":"30","/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_component.jsx":"31","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/popular/popular_style.jsx":"32","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread_style.jsx":"33","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.types.js":"34","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.types.js":"35","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.selectors.js":"36","/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer_style.jsx":"37","/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header_style.jsx":"38","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/detaile/breadhouse_detaile.jsx":"39","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/breadhouse_router.jsx":"40","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/detaile/breadhouse_detaile_style.jsx":"41"},{"size":590,"mtime":1617448058601,"results":"42","hashOfConfig":"43"},{"size":364,"mtime":1612334723393,"results":"44","hashOfConfig":"43"},{"size":382,"mtime":1616310023501,"results":"45","hashOfConfig":"43"},{"size":2278,"mtime":1617450045013,"results":"46","hashOfConfig":"43"},{"size":355,"mtime":1617448058595,"results":"47","hashOfConfig":"43"},{"size":446,"mtime":1616310023510,"results":"48","hashOfConfig":"43"},{"size":1016,"mtime":1616310023511,"results":"49","hashOfConfig":"43"},{"size":277,"mtime":1616310023510,"results":"50","hashOfConfig":"43"},{"size":264,"mtime":1616310023501,"results":"51","hashOfConfig":"43"},{"size":3180,"mtime":1616310023506,"results":"52","hashOfConfig":"43"},{"size":4050,"mtime":1616310023507,"results":"53","hashOfConfig":"43"},{"size":3713,"mtime":1617448058597,"results":"54","hashOfConfig":"43"},{"size":7268,"mtime":1617450617654,"results":"55","hashOfConfig":"43"},{"size":3708,"mtime":1616310023504,"results":"56","hashOfConfig":"43"},{"size":1878,"mtime":1617448058599,"results":"57","hashOfConfig":"43"},{"size":674,"mtime":1616310023501,"results":"58","hashOfConfig":"43"},{"size":429,"mtime":1617448058593,"results":"59","hashOfConfig":"43"},{"size":570,"mtime":1617448058591,"results":"60","hashOfConfig":"43"},{"size":118,"mtime":1616310023501,"results":"61","hashOfConfig":"43"},{"size":2074,"mtime":1616310023504,"results":"62","hashOfConfig":"43"},{"size":3256,"mtime":1617451611633,"results":"63","hashOfConfig":"43"},{"size":202,"mtime":1617448058594,"results":"64","hashOfConfig":"43"},{"size":181,"mtime":1617448058593,"results":"65","hashOfConfig":"43"},{"size":179,"mtime":1616520068965,"results":"66","hashOfConfig":"43"},{"size":291,"mtime":1617448058590,"results":"67","hashOfConfig":"43"},{"size":3029,"mtime":1616310023506,"results":"68","hashOfConfig":"43"},{"size":3675,"mtime":1616310023508,"results":"69","hashOfConfig":"43"},{"size":5091,"mtime":1616310023498,"results":"70","hashOfConfig":"43"},{"size":2037,"mtime":1617448058598,"results":"71","hashOfConfig":"43"},{"size":4677,"mtime":1617448058597,"results":"72","hashOfConfig":"43"},{"size":869,"mtime":1617448058589,"results":"73","hashOfConfig":"43"},{"size":1473,"mtime":1616310023503,"results":"74","hashOfConfig":"43"},{"size":2706,"mtime":1616310023504,"results":"75","hashOfConfig":"43"},{"size":119,"mtime":1617448058592,"results":"76","hashOfConfig":"43"},{"size":105,"mtime":1617448058595,"results":"77","hashOfConfig":"43"},{"size":178,"mtime":1616310023501,"results":"78","hashOfConfig":"43"},{"size":1322,"mtime":1616310023505,"results":"79","hashOfConfig":"43"},{"size":3348,"mtime":1617448058600,"results":"80","hashOfConfig":"43"},{"size":778,"mtime":1617453189136,"results":"81","hashOfConfig":"43"},{"size":492,"mtime":1617450409138,"results":"82","hashOfConfig":"43"},{"size":1137,"mtime":1617454000228,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1tayil7",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/songjisu/Desktop/bread_service/src/index.js",[],["174","175","176","177","178","179"],"/Users/songjisu/Desktop/bread_service/src/reportWebVitals.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/store.js",[],"/Users/songjisu/Desktop/bread_service/src/App.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/root-reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/layout.js",[],"/Users/songjisu/Desktop/bread_service/src/utils/common.js",[],"/Users/songjisu/Desktop/bread_service/src/utils/axios.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content.jsx",["180"],"import React, { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from '../redux/user/user.actions';\nimport { sweetAlert, isEmailValid, errorhandler } from '../../utils/common';\nimport axios, { setAuthorization } from '../../utils/axios';\n\nimport {\n  SigninAllWrap,\n  InputEmail,\n  InputPassword,\n  LoginButton,\n  SigninLine\n} from './signin_content_style';\nimport Social from '../common-component/social';\n\nfunction Signin({ onUserSet, history }) {\n  const [LoginValue, setLoginValue] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = LoginValue;\n\n  useEffect(() => {\n    const bringUserToken = localStorage.getItem('userToken');\n    if (bringUserToken) {\n      history.replace('/');\n    }\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const signinObject = {\n        email,\n        password\n      };\n\n      if (!email) {\n        sweetAlert('이메일을 입력해주세요.');\n      } else if (isEmailValid(email)) {\n        sweetAlert('이메일 형식을 맞춰주세요.');\n      } else if (!password) {\n        sweetAlert('비밀번호를 입력해주세요.');\n      } else {\n        const { status, data } = await axios.post('/user/signin', signinObject);\n        if (status === 200) {\n          const {\n            data: { token }\n          } = data;\n          setAuthorization(token);\n\n          const { status: signinStatus, data: getData } = await axios.get('/user/current');\n          if (signinStatus === 200) {\n            onUserSet(getData.data, token);\n            history.push('/');\n          }\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    setLoginValue({\n      ...LoginValue,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <SigninAllWrap>\n      <div className=\"login-wrap\">\n        <form className=\"form_wrap\" onSubmit={handleSubmit}>\n          <h3>로그인</h3>\n\n          <InputEmail>\n            <span>이메일</span>\n            <input\n              type=\"text\"\n              placeholder=\"이메일 입력\"\n              onChange={handleChange}\n              name=\"email\"\n              value={email}\n            />\n          </InputEmail>\n\n          <InputPassword>\n            <span>비밀번호</span>\n            <input\n              type=\"password\"\n              placeholder=\"비밀번호 입력\"\n              onChange={handleChange}\n              name=\"password\"\n              value={password}\n            />\n          </InputPassword>\n\n          <LoginButton>\n            <button type=\"submit\">로그인</button>\n          </LoginButton>\n        </form>\n        <SigninLine>\n          <span>또는</span>\n          <hr />\n        </SigninLine>\n\n        <Social />\n      </div>\n    </SigninAllWrap>\n  );\n}\n\nSignin.propTypes = {\n  onUserSet: PropTypes.func.isRequired,\n  history: PropTypes.instanceOf(Object).isRequired\n};\n\nconst userToPropsDispatch = (dispatch) => ({\n  onUserSet: (user, token) => dispatch(setCurrentUser(user, token))\n});\n\nexport default connect(null, userToPropsDispatch)(Signin);\n","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content.jsx",["181","182"],"import React, { useEffect } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { errorhandler } from '../../../../utils/common';\n\nimport { selectShopList } from '../../../redux/breadshoplist/breadShop.selectors';\nimport { setCurrentBreadShop } from '../../../redux/breadshoplist/breadShop.actions';\n\nimport { selectBreadList } from '../../../redux/breadlist/bread.selectors';\nimport { setBreadRankingList, setHeartTrueData } from '../../../redux/breadlist/bread.actions';\n\nimport axios from '../../../../utils/axios';\nimport { Main, MainBackground, BreadShopRanking, BreaShopList } from './mainhome_content_style';\n\nconst MainHome = ({ breadShopList, onBreadShopList, breadList, onBreadList, onHeartFilled }) => {\n  console.log(onHeartFilled);\n\n  useEffect(() => {\n    async function fetchBreadData() {\n      try {\n        const { status, data: breadData } = await axios.get('/rank/bread');\n\n        if (status === 200) {\n          onBreadList(breadData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    async function fetchBreadShopData() {\n      try {\n        const { status, data: breadShopData } = await axios.get('/rank/bread/shop');\n        if (status === 200) {\n          onBreadShopList(breadShopData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchBreadData();\n    fetchBreadShopData();\n  }, []);\n\n  return (\n    <Main>\n      <div className=\"breadShopWrap\">\n        <MainBackground>\n          <img src=\"\" alt=\"\" />\n        </MainBackground>\n\n        <BreadShopRanking>\n          <h1>빵집 랭킹</h1>\n          <div className=\"all_show\">\n            <span>모두보기</span>\n            <span className=\"triangle\" />\n          </div>\n        </BreadShopRanking>\n\n        <BreaShopList>\n          <ul className=\"list_wrap\">\n            {breadShopList.map((breadShopData) => (\n              <li key={breadShopData.id}>\n                <img src={breadShopData.image} alt={breadShopData.title} />\n                <dl>\n                  <dt>{breadShopData.address}</dt>\n                  <dd>{breadShopData.title}</dd>\n                </dl>\n              </li>\n            ))}\n          </ul>\n        </BreaShopList>\n      </div>\n\n      <div className=\"breadRankingWrap\">\n        <BreadShopRanking>\n          <h1>요즘 인기있는 빵 랭킹</h1>\n          <div className=\"all_show\">\n            <span>모두보기</span>\n            <span className=\"triangle\" />\n          </div>\n        </BreadShopRanking>\n\n        <BreaShopList>\n          <ul className=\"list_wrap\">\n            {breadList.map((breadData) => (\n              <li key={breadData.id}>\n                <img src={breadData.image} alt=\"\" />\n                <dl>\n                  <dd>{breadData.title}</dd>\n                </dl>\n              </li>\n            ))}\n          </ul>\n        </BreaShopList>\n      </div>\n    </Main>\n  );\n};\n\nMainHome.propTypes = {\n  breadShopList: PropTypes.instanceOf(Array).isRequired,\n  onBreadShopList: PropTypes.func.isRequired,\n  breadList: PropTypes.instanceOf(Array).isRequired,\n  onBreadList: PropTypes.func.isRequired,\n  onHeartFilled: PropTypes.func.isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadShopList: selectShopList,\n  breadList: selectBreadList\n});\n\nconst breadShopDispathchToProps = (dispatch) => ({\n  onBreadShopList: (breadShop) => dispatch(setCurrentBreadShop(breadShop)),\n  onBreadList: (bread) => dispatch(setBreadRankingList(bread)),\n  onHeartFilled: (filled) => dispatch(setHeartTrueData(filled))\n});\n\nexport default connect(breadStateToProps, breadShopDispathchToProps)(MainHome);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/breadhouse_rangking.jsx",["183","184"],"import React, { useEffect } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport axios from '../../../../utils/axios';\nimport { errorhandler } from '../../../../utils/common';\n\nimport { selectShopList } from '../../../redux/breadshoplist/breadShop.selectors';\nimport { setCurrentBreadShop } from '../../../redux/breadshoplist/breadShop.actions';\n\nimport {\n  HouseRangkingWrap,\n  ShopRangking,\n  Location,\n  SelectWrap,\n  City,\n  CurrentLocation,\n  RangkingList\n} from './breadhouse_rangking_style';\n\n// 하트 액션\nimport { setHeartTrueData } from '../../../redux/breadlist/bread.actions';\n\nconst HouseRangking = ({ breadShopList, onBreadShopList, onHeartSpace }) => {\n  useEffect(() => {\n    async function fetchShopData() {\n      try {\n        const { status, data: breadShopData } = await axios.get('/bread/shop');\n        if (status === 200) {\n          onBreadShopList(breadShopData.list);\n          onHeartSpace(breadShopData.like);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchShopData();\n  }, []);\n\n  const changeHeart = () => {\n    alert('하투하투');\n  };\n\n  return (\n    <HouseRangkingWrap>\n      <ShopRangking>\n        <h1>빵집 랭킹</h1>\n      </ShopRangking>\n\n      <Location>\n        <SelectWrap>\n          <City>\n            <details className=\"custom-select\">\n              <summary className=\"radios\">\n                <input type=\"radio\" name=\"city\" id=\"default\" title=\"시.도\" checked />\n                <input type=\"radio\" name=\"city\" id=\"city1\" title=\"서울특별시\" />\n                <input type=\"radio\" name=\"city\" id=\"city2\" title=\"경기도\" />\n                <input type=\"radio\" name=\"city\" id=\"city3\" title=\"대전광역시\" />\n                <input type=\"radio\" name=\"city\" id=\"city4\" title=\"대구광역시\" />\n                <input type=\"radio\" name=\"city\" id=\"city5\" title=\"부산광역시\" />\n              </summary>\n              <ul className=\"list\">\n                <li>\n                  <label htmlFor=\"city1\">서울특별시</label>\n                </li>\n                <li>\n                  <label htmlFor=\"city2\">경기도</label>\n                </li>\n                <li>\n                  <label htmlFor=\"city3\">대전광역시</label>\n                </li>\n                <li>\n                  <label htmlFor=\"city4\">대구광역시</label>\n                </li>\n                <li>\n                  <label htmlFor=\"city5\">부산광역시</label>\n                </li>\n              </ul>\n            </details>\n          </City>\n\n          <City>\n            <details className=\"custom-select\">\n              <summary className=\"radios\">\n                <input type=\"radio\" name=\"dong\" id=\"default\" title=\"동\" checked />\n                <input type=\"radio\" name=\"dong\" id=\"dong1\" title=\"서교동\" />\n                <input type=\"radio\" name=\"dong\" id=\"dong2\" title=\"압구정동\" />\n                <input type=\"radio\" name=\"dong\" id=\"dong3\" title=\"신림동\" />\n                <input type=\"radio\" name=\"dong\" id=\"dong4\" title=\"창전동\" />\n                <input type=\"radio\" name=\"dong\" id=\"dong5\" title=\"성산동\" />\n              </summary>\n              <ul className=\"list\">\n                <li>\n                  <label htmlFor=\"dong1\">서교동</label>\n                </li>\n                <li>\n                  <label htmlFor=\"dong2\">압구정동</label>\n                </li>\n                <li>\n                  <label htmlFor=\"dong3\">신림동</label>\n                </li>\n                <li>\n                  <label htmlFor=\"dong4\">창전동</label>\n                </li>\n                <li>\n                  <label htmlFor=\"dong5\">성산동</label>\n                </li>\n              </ul>\n            </details>\n          </City>\n\n          <City>\n            <details className=\"custom-select\">\n              <summary className=\"radios\">\n                <input type=\"radio\" name=\"bread\" id=\"default\" title=\"빵 종류\" checked />\n                <input type=\"radio\" name=\"bread\" id=\"bread1\" title=\"소보루빵\" />\n                <input type=\"radio\" name=\"bread\" id=\"bread2\" title=\"식빵\" />\n                <input type=\"radio\" name=\"bread\" id=\"bread3\" title=\"단팥빵\" />\n                <input type=\"radio\" name=\"bread\" id=\"bread4\" title=\"바게트빵\" />\n                <input type=\"radio\" name=\"bread\" id=\"bread5\" title=\"샌드위치\" />\n              </summary>\n              <ul className=\"list\">\n                <li>\n                  <label htmlFor=\"bread1\">소보루빵</label>\n                </li>\n                <li>\n                  <label htmlFor=\"bread2\">식빵</label>\n                </li>\n                <li>\n                  <label htmlFor=\"bread3\">단팥빵</label>\n                </li>\n                <li>\n                  <label htmlFor=\"bread4\">바게트빵</label>\n                </li>\n                <li>\n                  <label htmlFor=\"bread5\">샌드위치</label>\n                </li>\n              </ul>\n            </details>\n          </City>\n        </SelectWrap>\n\n        <CurrentLocation>\n          <button type=\"button\">\n            <img\n              src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/search.png\"\n              alt=\"\"\n            />\n            <span>현재 위치로 설정</span>\n          </button>\n        </CurrentLocation>\n      </Location>\n\n      <RangkingList>\n        <ul className=\"list_wrap\">\n          {breadShopList.map((breadShopData) => (\n            <li\n              key={breadShopData.id}\n              style={{\n                outline: '1px solid red'\n              }}>\n              <Link to=\"/rank/bread-house/detaile\">\n                <img src={breadShopData.image} alt=\"\" />\n              </Link>\n              {breadShopList ? (\n                <img\n                  src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/spaceheart.png\"\n                  alt=\"\"\n                  className=\"heart_image\"\n                  aria-hidden=\"true\"\n                  onClick={changeHeart}\n                  active\n                />\n              ) : (\n                <img\n                  src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/heart.png\"\n                  alt=\"\"\n                />\n              )}\n\n              <dl>\n                <dt>{breadShopData.title}</dt>\n                <dd />\n              </dl>\n            </li>\n          ))}\n        </ul>\n      </RangkingList>\n    </HouseRangkingWrap>\n  );\n};\n\nHouseRangking.propTypes = {\n  breadShopList: PropTypes.instanceOf(Array).isRequired,\n  onBreadShopList: PropTypes.func.isRequired,\n  onHeartSpace: PropTypes.bool.isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadShopList: selectShopList\n});\n\nconst breadShopDispathchToProps = (dispatch) => ({\n  onBreadShopList: (breadShop) => dispatch(setCurrentBreadShop(breadShop)),\n  onHeartSpace: (heart) => dispatch(setHeartTrueData(heart))\n});\n\nexport default connect(breadStateToProps, breadShopDispathchToProps)(HouseRangking);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread.jsx",["185"],"import React, { useEffect } from 'react';\nimport Youtube from 'react-youtube';\n// import { Swiper } from 'swiper/react';\n// import 'swiper/css/swiper.scss';\n\nimport Slider from 'react-slick';\nimport axios from '../../../../utils/axios';\nimport { errorhandler } from '../../../../utils/common';\n\nimport {\n  BreadPickWrap,\n  YoutubePickEvent,\n  StyledSlider,\n  PickBreadTitle,\n  PickBreadImage\n} from './youtube_bread_style';\n\nconst PickBread = () => {\n  useEffect(() => {\n    async function fetchyoutubeData() {\n      try {\n        const { status, data } = await axios.get('/youtube');\n        if (status === 200) {\n          console.log(data);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchyoutubeData();\n  }, []);\n  const opts = {\n    width: '300',\n    height: '300',\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  const onReady = (e) => {\n    e.target.pauseVideo();\n  };\n\n  // 슬라이드\n  const settings = {\n    dots: true,\n    infinite: true,\n    autoplay: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n\n    responsive: [\n      // 반응형 웹 구현 옵션\n      {\n        breakpoint: 1200, // 화면 사이즈 1200px\n        settings: {\n          slidesToShow: 3\n        }\n      },\n      {\n        breakpoint: 1023,\n        settings: {\n          slidesToShow: 3\n        }\n      },\n      {\n        breakpoint: 767,\n        settings: {\n          slidesToShow: 1\n        }\n      }\n    ]\n  };\n\n  return (\n    <BreadPickWrap>\n      <YoutubePickEvent />\n\n      <PickBreadTitle>\n        <span>유튜버들이 선택한 빵을 즐겨보세요</span>\n      </PickBreadTitle>\n\n      {/* <Swiper\n        navigation\n        pagination={{\n          clickable: true\n        }}\n        scrollbar={{\n          draggable: true\n        }}> */}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <Slider {...settings}>\n        <StyledSlider>\n          <PickBreadImage>\n            <div className=\"VideoContainer\">\n              <Youtube\n                className=\"youtubeVideo\"\n                videoId=\"2g811Eo7K8U\"\n                opts={opts}\n                onReady={onReady}\n              />\n            </div>\n            <div className=\"pick_title\">\n              <span>Title</span>\n              <span>Description</span>\n              <button type=\"button\" className=\"show_button\">\n                리뷰 보러가기\n              </button>\n            </div>\n          </PickBreadImage>\n          <PickBreadImage>\n            <div className=\"VideoContainer\">\n              <Youtube\n                className=\"youtubeVideo\"\n                videoId=\"2g811Eo7K8U\"\n                opts={opts}\n                onReady={onReady}\n              />\n            </div>\n            <div className=\"pick_title\">\n              <span>Title</span>\n              <span>Description</span>\n              <button type=\"button\" className=\"show_button\">\n                리뷰 보러가기\n              </button>\n            </div>\n          </PickBreadImage>\n          <PickBreadImage>\n            <div className=\"VideoContainer\">\n              <Youtube\n                className=\"youtubeVideo VideoContainer\"\n                videoId=\"2g811Eo7K8U\"\n                opts={opts}\n                onReady={onReady}\n              />\n            </div>\n            <div className=\"pick_title\">\n              <span>Title</span>\n              <span>Description</span>\n              <button type=\"button\" className=\"show_button\">\n                리뷰 보러가기\n              </button>\n            </div>\n          </PickBreadImage>\n        </StyledSlider>\n      </Slider>\n      {/* </Swiper> */}\n    </BreadPickWrap>\n  );\n};\n\nexport default PickBread;\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/popular/popular_component.jsx",["186"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport BreadLi from '../../../common-component/bread_li_component';\nimport { selectBreadList } from '../../../redux/breadlist/bread.selectors';\nimport { setBreadRankingList, setHeartTrueData } from '../../../redux/breadlist/bread.actions';\nimport axios from '../../../../utils/axios';\nimport { errorhandler } from '../../../../utils/common';\nimport { PopularBreadWrap, PopularWrap, BreadList } from './popular_style';\n\nconst PopularBread = ({ breadList, onBreadList, onHeartFilled }) => {\n  useEffect(() => {\n    async function fetchbreadData() {\n      try {\n        const { status, data: breadData } = await axios.get('/bread');\n        if (status === 200) {\n          onBreadList(breadData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchbreadData();\n  }, []);\n\n  return (\n    <PopularBreadWrap>\n      <PopularWrap>\n        <h1>요즘 인기있는 빵</h1>\n      </PopularWrap>\n\n      <BreadList>\n        <ul className=\"list_wrap\">\n          {breadList.map((breadData) => (\n            <BreadLi breadData={breadData} onHeartFilled={onHeartFilled} />\n          ))}\n        </ul>\n      </BreadList>\n    </PopularBreadWrap>\n  );\n};\n\nPopularBread.propTypes = {\n  breadList: PropTypes.instanceOf(Array).isRequired,\n  onBreadList: PropTypes.func.isRequired,\n  onHeartFilled: PropTypes.func.isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadList: selectBreadList\n});\n\nconst breadDispathchToProps = (dispatch) => ({\n  onBreadList: (bread) => dispatch(setBreadRankingList(bread)),\n  onHeartFilled: (filled, heartId) => dispatch(setHeartTrueData(filled, heartId))\n});\n\nexport default connect(breadStateToProps, breadDispathchToProps)(PopularBread);\n","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/social.jsx",["187","188"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport KakaoLogin from 'react-kakao-login';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\n\nimport axios, { setAuthorization } from '../../utils/axios';\nimport { errorhandler } from '../../utils/common';\nimport { setCurrentUser } from '../redux/user/user.actions';\nimport { SosalLogin, GoogleWrap, FacebookWrap, KakaoWrap } from '../sign-in/signin_content_style';\n\n// 소셜 로그인\nconst kakaoToken = process.env.REACT_APP_KAKAO_KEY;\nconst facebookToken = process.env.REACT_APP_FACEBOOK_KEY;\nconst googleToken = process.env.REACT_APP_GOOGLE_KEY;\n\nconst Social = ({ onUserSet, history }) => {\n  // 카카오\n  const onSuccess = async (userData) => {\n    try {\n      const { access_token: accessToken } = userData.response;\n\n      const socialObject = {\n        token: accessToken,\n        type: 'kakao'\n      };\n\n      const { data } = await axios.post('/user/social/signup', socialObject);\n\n      const {\n        data: { token }\n      } = data;\n\n      setAuthorization(token);\n\n      // 서버에서 누구인지 받아오는곳\n      const { status, data: getData } = await axios.get('/user/current');\n      if (status === 201) {\n        onUserSet(getData.data, token);\n        history.push('/');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 구글\n  const responseGoogle = async (response) => {\n    try {\n      if (!response.error) {\n        const { accessToken: googleAccessToken } = response;\n\n        const socialObject = {\n          token: googleAccessToken,\n          type: 'google'\n        };\n\n        const { data } = await axios.post('/user/social/signup', socialObject);\n\n        const {\n          data: { token }\n        } = data;\n\n        setAuthorization(token);\n\n        // 서버에서 누구인지 받아오는곳\n        const { status, data: getData } = await axios.get('/user/current');\n        if (status === 201) {\n          onUserSet(getData.data, token);\n          history.push('/');\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 페이스북\n  const responseFacebook = async (response) => {\n    try {\n      const { accessToken: facebookAccessToken } = response;\n\n      const socialObject = {\n        token: facebookAccessToken,\n        type: 'facebook'\n      };\n\n      const {\n        data: {\n          data: { token }\n        }\n      } = await axios.post('/user/social/signup', socialObject);\n\n      setAuthorization(token);\n\n      // 서버에서 누구인지 받아오는곳\n      const { status, data: facebookData } = await axios.get('/user/current');\n      if (status === 201) {\n        onUserSet(facebookData.data, token);\n        history.push('/');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  return (\n    <SosalLogin className=\"clearfix\">\n      <GoogleWrap>\n        <GoogleLogin\n          clientId={googleToken}\n          render={(renderProps) => (\n            <button onClick={renderProps.onClick} disabled={renderProps.disabled} type=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/google.png\"\n                alt=\"구글 로그인\"\n              />\n              <span>구글</span>\n            </button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy=\"single_host_origin\"\n        />\n      </GoogleWrap>\n\n      <FacebookWrap>\n        <FacebookLogin\n          appId={facebookToken}\n          callback={responseFacebook}\n          fields=\"name,email,picture\"\n          render={(renderProps) => (\n            <button onClick={renderProps.onClick} type=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/socalfacebook.png\"\n                alt=\"페이스북 로그인\"\n              />\n              <span>페이스북</span>\n            </button>\n          )}\n        />\n      </FacebookWrap>\n\n      <KakaoWrap>\n        <KakaoLogin\n          token={kakaoToken}\n          onSuccess={onSuccess}\n          onFail={console.error}\n          onLogout={console.info}\n          render={({ onClick }) => (\n            <div onClick={onClick} aria-hidden=\"true\" role=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/ico_kakaotalk.png\"\n                alt=\"카카오톡 로그인\"\n              />\n              <span>카카오톡</span>\n            </div>\n          )}\n        />\n      </KakaoWrap>\n    </SosalLogin>\n  );\n};\n\nSocial.propTypes = {\n  onUserSet: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.object).isRequired\n};\n\nconst userToPropsDispatch = (dispatch) => ({\n  onUserSet: (user, token) => dispatch(setCurrentUser(user, token))\n});\n\nexport default connect(null, userToPropsDispatch)(Social);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/breadhouse_rangking_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_component.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/popular/popular_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/detaile/breadhouse_detaile.jsx",["189"],"import React from 'react';\nimport { HouseDetaile, Grade, ShopImage, Information } from './breadhouse_detaile_style';\n\nconst ShopDetaile = () => {\n  console.log('디테일');\n  return (\n    <>\n      <HouseDetaile>\n        <Grade>\n          <h1>\n            빵집 이름 <span className=\"text_color\">(평점)</span>\n          </h1>\n          <img\n            src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/spaceheart.png\"\n            alt=\"빈하트 이미지\"\n          />\n        </Grade>\n        <ShopImage>\n          <span />\n\n          <Information>\n            <div>주소</div>\n            <p>Description</p>\n          </Information>\n        </ShopImage>\n      </HouseDetaile>\n    </>\n  );\n};\n\nexport default ShopDetaile;\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/breadhouse_router.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/detaile/breadhouse_detaile_style.jsx",[],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":31,"column":6,"nodeType":"204","endLine":31,"endColumn":8,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":18,"column":3,"nodeType":"208","messageId":"209","endLine":18,"endColumn":14},{"ruleId":"202","severity":1,"message":"210","line":44,"column":6,"nodeType":"204","endLine":44,"endColumn":8,"suggestions":"211"},{"ruleId":"202","severity":1,"message":"212","line":40,"column":6,"nodeType":"204","endLine":40,"endColumn":8,"suggestions":"213"},{"ruleId":"214","severity":1,"message":"215","line":43,"column":5,"nodeType":"216","messageId":"209","endLine":43,"endColumn":18},{"ruleId":"206","severity":1,"message":"207","line":24,"column":11,"nodeType":"208","messageId":"209","endLine":24,"endColumn":22},{"ruleId":"202","severity":1,"message":"217","line":26,"column":6,"nodeType":"204","endLine":26,"endColumn":8,"suggestions":"218"},{"ruleId":"206","severity":1,"message":"207","line":150,"column":19,"nodeType":"208","messageId":"209","endLine":150,"endColumn":32},{"ruleId":"206","severity":1,"message":"207","line":151,"column":21,"nodeType":"208","messageId":"209","endLine":151,"endColumn":33},{"ruleId":"206","severity":1,"message":"207","line":5,"column":3,"nodeType":"208","messageId":"209","endLine":5,"endColumn":14},"lines-around-directive",["219"],"no-spaced-func",["220"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["221"],"no-console","Unexpected console statement.","MemberExpression","unexpected","React Hook useEffect has missing dependencies: 'onBreadList' and 'onBreadShopList'. Either include them or remove the dependency array. If 'onBreadList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["222"],"React Hook useEffect has missing dependencies: 'onBreadShopList' and 'onHeartSpace'. Either include them or remove the dependency array. If 'onBreadShopList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["223"],"no-alert","Unexpected alert.","CallExpression","React Hook useEffect has a missing dependency: 'onBreadList'. Either include it or remove the dependency array. If 'onBreadList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["224"],"padding-line-between-statements","func-call-spacing",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [history]",{"range":"233","text":"234"},"Update the dependencies array to be: [onBreadList, onBreadShopList]",{"range":"235","text":"236"},"Update the dependencies array to be: [onBreadShopList, onHeartSpace]",{"range":"237","text":"238"},"Update the dependencies array to be: [onBreadList]",{"range":"239","text":"240"},[816,818],"[history]",[1475,1477],"[onBreadList, onBreadShopList]",[1170,1172],"[onBreadShopList, onHeartSpace]",[970,972],"[onBreadList]"]