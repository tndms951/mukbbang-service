[{"/Users/songjisu/Desktop/bread_service/src/index.js":"1","/Users/songjisu/Desktop/bread_service/src/reportWebVitals.js":"2","/Users/songjisu/Desktop/bread_service/src/components/redux/store.js":"3","/Users/songjisu/Desktop/bread_service/src/App.jsx":"4","/Users/songjisu/Desktop/bread_service/src/components/redux/root-reducer.js":"5","/Users/songjisu/Desktop/bread_service/src/layout.js":"6","/Users/songjisu/Desktop/bread_service/src/utils/common.js":"7","/Users/songjisu/Desktop/bread_service/src/utils/axios.js":"8","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.actions.js":"9","/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content.jsx":"10","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content.jsx":"11","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content.jsx":"12","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread.jsx":"13","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.reducer.js":"14","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.reducer.js":"15","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.types.js":"16","/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer.jsx":"17","/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header.jsx":"18","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.selectors.js":"19","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.actions.js":"20","/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content_style.jsx":"21","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content_style.jsx":"22","/Users/songjisu/Desktop/bread_service/src/components/common-component/social.jsx":"23","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content_style.jsx":"24","/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_component.jsx":"25","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread_style.jsx":"26","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.types.js":"27","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.selectors.js":"28","/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer_style.jsx":"29","/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header_style.jsx":"30","/Users/songjisu/Desktop/bread_service/src/components/common-component/breadShop_li_component.jsx":"31","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/bread-shop-reducer.js":"32","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.reducer.js":"33","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.types.js":"34","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.selectors.js":"35","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.actions.js":"36","/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.reducer.js":"37","/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.types.js":"38","/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.actions.js":"39","/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.selectors.js":"40","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_rangking.jsx":"41","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_rangking_style.jsx":"42","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.reducer.js":"43","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.types.js":"44","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.selectors.js":"45","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.actions.js":"46","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_router.jsx":"47","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/detail/breadShop_detail.jsx":"48","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/detail/breadShop_detail_style.jsx":"49","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.reducer.js":"50","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.types.js":"51","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.selectors.js":"52","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.actions.js":"53","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/comment/breadShopComment.reducer.js":"54","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/comment/breadShopComment.types.js":"55","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/comment/breadShopComment.actions.js":"56","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/comment/breadShopComment.selectors.js":"57","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/comment.jsx":"58","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/comment_style.jsx":"59","/Users/songjisu/Desktop/bread_service/src/components/common-component/review/review.jsx":"60","/Users/songjisu/Desktop/bread_service/src/components/common-component/review/review_style.jsx":"61","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/second-recomment/second_recomment.jsx":"62","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/second-recomment/second_recomment_style.jsx":"63","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/first-commend/first_commend_style.jsx":"64","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/first-commend/first_commend.jsx":"65","/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_style.jsx":"66","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/bread_router.jsx":"67","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/popular_component.jsx":"68","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/popular_style.jsx":"69","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/detail/bread_detail.jsx":"70","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/detail/bread_detail_style.jsx":"71"},{"size":677,"mtime":1618230960491,"results":"72","hashOfConfig":"73"},{"size":364,"mtime":1612334723393,"results":"74","hashOfConfig":"73"},{"size":382,"mtime":1616310023501,"results":"75","hashOfConfig":"73"},{"size":2118,"mtime":1620879288291,"results":"76","hashOfConfig":"73"},{"size":423,"mtime":1620744509244,"results":"77","hashOfConfig":"73"},{"size":446,"mtime":1616310023510,"results":"78","hashOfConfig":"73"},{"size":1016,"mtime":1618990775795,"results":"79","hashOfConfig":"73"},{"size":277,"mtime":1618227466844,"results":"80","hashOfConfig":"73"},{"size":264,"mtime":1616310023501,"results":"81","hashOfConfig":"73"},{"size":3180,"mtime":1616310023506,"results":"82","hashOfConfig":"73"},{"size":4050,"mtime":1616310023507,"results":"83","hashOfConfig":"73"},{"size":5282,"mtime":1620879288297,"results":"84","hashOfConfig":"73"},{"size":3708,"mtime":1616310023504,"results":"85","hashOfConfig":"73"},{"size":674,"mtime":1616310023501,"results":"86","hashOfConfig":"73"},{"size":1175,"mtime":1619926059147,"results":"87","hashOfConfig":"73"},{"size":118,"mtime":1616310023501,"results":"88","hashOfConfig":"73"},{"size":2074,"mtime":1616310023504,"results":"89","hashOfConfig":"73"},{"size":3688,"mtime":1620744509252,"results":"90","hashOfConfig":"73"},{"size":179,"mtime":1616520068965,"results":"91","hashOfConfig":"73"},{"size":458,"mtime":1618229030947,"results":"92","hashOfConfig":"73"},{"size":3029,"mtime":1616310023506,"results":"93","hashOfConfig":"73"},{"size":3675,"mtime":1616310023508,"results":"94","hashOfConfig":"73"},{"size":5091,"mtime":1616310023498,"results":"95","hashOfConfig":"73"},{"size":3141,"mtime":1619926059165,"results":"96","hashOfConfig":"73"},{"size":1952,"mtime":1620891433226,"results":"97","hashOfConfig":"73"},{"size":2706,"mtime":1616310023504,"results":"98","hashOfConfig":"73"},{"size":165,"mtime":1618229030949,"results":"99","hashOfConfig":"73"},{"size":178,"mtime":1616310023501,"results":"100","hashOfConfig":"73"},{"size":1322,"mtime":1616310023505,"results":"101","hashOfConfig":"73"},{"size":3398,"mtime":1618229030956,"results":"102","hashOfConfig":"73"},{"size":1856,"mtime":1620744509222,"results":"103","hashOfConfig":"73"},{"size":469,"mtime":1620744509230,"results":"104","hashOfConfig":"73"},{"size":1860,"mtime":1620744509235,"results":"105","hashOfConfig":"73"},{"size":315,"mtime":1620744509237,"results":"106","hashOfConfig":"73"},{"size":423,"mtime":1620744509236,"results":"107","hashOfConfig":"73"},{"size":851,"mtime":1620744509233,"results":"108","hashOfConfig":"73"},{"size":406,"mtime":1618229030951,"results":"109","hashOfConfig":"73"},{"size":99,"mtime":1618229030952,"results":"110","hashOfConfig":"73"},{"size":162,"mtime":1618229030950,"results":"111","hashOfConfig":"73"},{"size":189,"mtime":1618229030952,"results":"112","hashOfConfig":"73"},{"size":10503,"mtime":1620890478909,"results":"113","hashOfConfig":"73"},{"size":4602,"mtime":1620807804748,"results":"114","hashOfConfig":"73"},{"size":1185,"mtime":1620744509232,"results":"115","hashOfConfig":"73"},{"size":311,"mtime":1620744509233,"results":"116","hashOfConfig":"73"},{"size":736,"mtime":1620744509233,"results":"117","hashOfConfig":"73"},{"size":477,"mtime":1620744509232,"results":"118","hashOfConfig":"73"},{"size":548,"mtime":1620744509246,"results":"119","hashOfConfig":"73"},{"size":5839,"mtime":1620805763891,"results":"120","hashOfConfig":"73"},{"size":2830,"mtime":1620744509248,"results":"121","hashOfConfig":"73"},{"size":1412,"mtime":1620744509239,"results":"122","hashOfConfig":"73"},{"size":269,"mtime":1620744509243,"results":"123","hashOfConfig":"73"},{"size":220,"mtime":1620744509242,"results":"124","hashOfConfig":"73"},{"size":616,"mtime":1620744509238,"results":"125","hashOfConfig":"73"},{"size":3823,"mtime":1620744509231,"results":"126","hashOfConfig":"73"},{"size":706,"mtime":1620744509232,"results":"127","hashOfConfig":"73"},{"size":1588,"mtime":1620744509230,"results":"128","hashOfConfig":"73"},{"size":393,"mtime":1620744509231,"results":"129","hashOfConfig":"73"},{"size":4582,"mtime":1620744509224,"results":"130","hashOfConfig":"73"},{"size":925,"mtime":1620744509225,"results":"131","hashOfConfig":"73"},{"size":10402,"mtime":1620744509228,"results":"132","hashOfConfig":"73"},{"size":7518,"mtime":1620744509228,"results":"133","hashOfConfig":"73"},{"size":4150,"mtime":1620744509227,"results":"134","hashOfConfig":"73"},{"size":1061,"mtime":1620744509228,"results":"135","hashOfConfig":"73"},{"size":2015,"mtime":1620744509226,"results":"136","hashOfConfig":"73"},{"size":5594,"mtime":1620744509226,"results":"137","hashOfConfig":"73"},{"size":987,"mtime":1620892279272,"results":"138","hashOfConfig":"73"},{"size":394,"mtime":1620879288294,"results":"139","hashOfConfig":"73"},{"size":3245,"mtime":1620903710801,"results":"140","hashOfConfig":"73"},{"size":658,"mtime":1620892315375,"results":"141","hashOfConfig":"73"},{"size":233,"mtime":1620879288295,"results":"142","hashOfConfig":"73"},{"size":138,"mtime":1620879288295,"results":"143","hashOfConfig":"73"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"2613yk",{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"146"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"146"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"146"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"146"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"146"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"146"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"146"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"146"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},"/Users/songjisu/Desktop/bread_service/src/index.js",[],["295","296","297","298","299","300"],"/Users/songjisu/Desktop/bread_service/src/reportWebVitals.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/store.js",[],"/Users/songjisu/Desktop/bread_service/src/App.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/root-reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/layout.js",[],"/Users/songjisu/Desktop/bread_service/src/utils/common.js",[],"/Users/songjisu/Desktop/bread_service/src/utils/axios.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content.jsx",["301"],"import React, { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from '../redux/user/user.actions';\nimport { sweetAlert, isEmailValid, errorhandler } from '../../utils/common';\nimport axios, { setAuthorization } from '../../utils/axios';\n\nimport {\n  SigninAllWrap,\n  InputEmail,\n  InputPassword,\n  LoginButton,\n  SigninLine\n} from './signin_content_style';\nimport Social from '../common-component/social';\n\nfunction Signin({ onUserSet, history }) {\n  const [LoginValue, setLoginValue] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = LoginValue;\n\n  useEffect(() => {\n    const bringUserToken = localStorage.getItem('userToken');\n    if (bringUserToken) {\n      history.replace('/');\n    }\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const signinObject = {\n        email,\n        password\n      };\n\n      if (!email) {\n        sweetAlert('이메일을 입력해주세요.');\n      } else if (isEmailValid(email)) {\n        sweetAlert('이메일 형식을 맞춰주세요.');\n      } else if (!password) {\n        sweetAlert('비밀번호를 입력해주세요.');\n      } else {\n        const { status, data } = await axios.post('/user/signin', signinObject);\n        if (status === 200) {\n          const {\n            data: { token }\n          } = data;\n          setAuthorization(token);\n\n          const { status: signinStatus, data: getData } = await axios.get('/user/current');\n          if (signinStatus === 200) {\n            onUserSet(getData.data, token);\n            history.push('/');\n          }\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    setLoginValue({\n      ...LoginValue,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <SigninAllWrap>\n      <div className=\"login-wrap\">\n        <form className=\"form_wrap\" onSubmit={handleSubmit}>\n          <h3>로그인</h3>\n\n          <InputEmail>\n            <span>이메일</span>\n            <input\n              type=\"text\"\n              placeholder=\"이메일 입력\"\n              onChange={handleChange}\n              name=\"email\"\n              value={email}\n            />\n          </InputEmail>\n\n          <InputPassword>\n            <span>비밀번호</span>\n            <input\n              type=\"password\"\n              placeholder=\"비밀번호 입력\"\n              onChange={handleChange}\n              name=\"password\"\n              value={password}\n            />\n          </InputPassword>\n\n          <LoginButton>\n            <button type=\"submit\">로그인</button>\n          </LoginButton>\n        </form>\n        <SigninLine>\n          <span>또는</span>\n          <hr />\n        </SigninLine>\n\n        <Social />\n      </div>\n    </SigninAllWrap>\n  );\n}\n\nSignin.propTypes = {\n  onUserSet: PropTypes.func.isRequired,\n  history: PropTypes.instanceOf(Object).isRequired\n};\n\nconst userToPropsDispatch = (dispatch) => ({\n  onUserSet: (user, token) => dispatch(setCurrentUser(user, token))\n});\n\nexport default connect(null, userToPropsDispatch)(Signin);\n","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content.jsx",["302"],"/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\n\nimport { errorhandler } from '../../../../utils/common';\nimport BreadLi from '../../../common-component/bread_li_component';\nimport BreadShopLi from '../../../common-component/breadShop_li_component';\n\nimport { selectShopList } from '../../../redux/breadshop/list/breadShop.selectors';\nimport { setCurrentBreadShop, setShopTrueData, setShopFalseData } from '../../../redux/breadshop/list/breadShop.actions';\n\nimport { selectBreadList } from '../../../redux/breadlist/bread.selectors';\nimport { setBreadRankingList, setHeartTrueData, setHeartFalseData } from '../../../redux/breadlist/bread.actions';\n\nimport { selectEventSwiper } from '../../../redux/main/main.selectors';\nimport { setEventSwiper } from '../../../redux/main/main.actions';\n\nimport axios from '../../../../utils/axios';\nimport { Main, MainBackground, BreadShopRanking, BreadShopList } from './mainhome_content_style';\n\nconst MainHome = ({\n  breadShopList,\n  onBreadShopList,\n  onBreadShopTrue,\n  onBreadShopFalse,\n\n  breadList,\n  onBreadList,\n  onBreadHeartTrue,\n  onBreadHeartFalse,\n\n  eventList,\n  onEventList\n}) => {\n  useEffect(() => {\n    async function fetchBreadData() {\n      try {\n        const { status, data: breadData } = await axios.get('/rank/bread');\n\n        if (status === 200) {\n          onBreadList(breadData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n\n    async function fetchEventBanner() {\n      try {\n        const { status, data: eventData } = await axios.get('/banner/event');\n\n        if (status === 200) {\n          onEventList(eventData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n\n    async function fetchBreadShopData() {\n      try {\n        const { status, data: breadShopData } = await axios.get('/rank/bread/shop');\n        if (status === 200) {\n          onBreadShopList(breadShopData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchBreadData();\n    fetchEventBanner();\n    fetchBreadShopData();\n  }, []);\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    autoplay: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return (\n    <Main>\n      <div>\n        <MainBackground>\n          <Slider {...settings}>\n            {eventList.map((listData) => (\n              <img src={listData.imageUrl} alt={listData.title} />\n            ))}\n          </Slider>\n        </MainBackground>\n\n        {/* 빵집!!! */}\n        <BreadShopRanking>\n          <h1>빵집 랭킹</h1>\n          <div className=\"all_show\">\n            <span>모두보기</span>\n            <span className=\"triangle\" />\n          </div>\n        </BreadShopRanking>\n\n        <BreadShopList>\n          <ul className=\"list_wrap\">\n            {breadShopList.map((breadShopData) => (\n              <BreadShopLi key={`breadShop_list-${breadShopData.id}`} shopList={breadShopData} shopSeverLike={breadShopData.like} shopId={breadShopData.id} likeTrue={onBreadShopTrue} likeFalse={onBreadShopFalse} />\n            ))}\n          </ul>\n        </BreadShopList>\n      </div>\n\n      {/* 빵!!!!! */}\n      <div className=\"breadRankingWrap\">\n        <BreadShopRanking>\n          <h1>요즘 인기있는 빵 랭킹</h1>\n          <div className=\"all_show\">\n            <span>모두보기</span>\n            <span className=\"triangle\" />\n          </div>\n        </BreadShopRanking>\n\n        <BreadShopList>\n          <ul className=\"list_wrap\">\n            {breadList.map((list) => (\n              <BreadLi key={`bread_li_list-${list.id}`} likeTrue={onBreadHeartTrue} likeFalse={onBreadHeartFalse} breadList={list} />\n            ))}\n          </ul>\n        </BreadShopList>\n      </div>\n    </Main>\n  );\n};\n\nMainHome.propTypes = {\n  breadShopList: PropTypes.instanceOf(Array).isRequired,\n  onBreadShopList: PropTypes.func.isRequired,\n  onBreadShopTrue: PropTypes.func.isRequired,\n  onBreadShopFalse: PropTypes.func.isRequired,\n\n  breadList: PropTypes.instanceOf(Array).isRequired,\n  onBreadList: PropTypes.func.isRequired,\n  onBreadHeartTrue: PropTypes.func.isRequired,\n  onBreadHeartFalse: PropTypes.func.isRequired,\n\n  eventList: PropTypes.instanceOf(Array).isRequired,\n  onEventList: PropTypes.func.isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadShopList: selectShopList,\n  breadList: selectBreadList,\n  eventList: selectEventSwiper\n});\n\nconst breadShopDispathchToProps = (dispatch) => ({\n  onBreadShopList: (breadShop) => dispatch(setCurrentBreadShop(breadShop)),\n  onBreadShopTrue: (trueBreadShop) => dispatch(setShopTrueData(trueBreadShop)),\n  onBreadShopFalse: (falseBreadShop) => dispatch(setShopFalseData(falseBreadShop)),\n\n  onBreadList: (bread) => dispatch(setBreadRankingList(bread)),\n  onBreadHeartTrue: (trueBreadId) => dispatch(setHeartTrueData(trueBreadId)),\n  onBreadHeartFalse: (falseBreadId) => dispatch(setHeartFalseData(falseBreadId)),\n\n  onEventList: (event) => dispatch(setEventSwiper(event))\n});\n\nexport default connect(breadStateToProps, breadShopDispathchToProps)(MainHome);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread.jsx",["303"],"import React, { useEffect } from 'react';\nimport Youtube from 'react-youtube';\n// import { Swiper } from 'swiper/react';\n// import 'swiper/css/swiper.scss';\n\nimport Slider from 'react-slick';\nimport axios from '../../../../utils/axios';\nimport { errorhandler } from '../../../../utils/common';\n\nimport {\n  BreadPickWrap,\n  YoutubePickEvent,\n  StyledSlider,\n  PickBreadTitle,\n  PickBreadImage\n} from './youtube_bread_style';\n\nconst PickBread = () => {\n  useEffect(() => {\n    async function fetchyoutubeData() {\n      try {\n        const { status, data } = await axios.get('/youtube');\n        if (status === 200) {\n          console.log(data);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchyoutubeData();\n  }, []);\n  const opts = {\n    width: '300',\n    height: '300',\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  const onReady = (e) => {\n    e.target.pauseVideo();\n  };\n\n  // 슬라이드\n  const settings = {\n    dots: true,\n    infinite: true,\n    autoplay: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n\n    responsive: [\n      // 반응형 웹 구현 옵션\n      {\n        breakpoint: 1200, // 화면 사이즈 1200px\n        settings: {\n          slidesToShow: 3\n        }\n      },\n      {\n        breakpoint: 1023,\n        settings: {\n          slidesToShow: 3\n        }\n      },\n      {\n        breakpoint: 767,\n        settings: {\n          slidesToShow: 1\n        }\n      }\n    ]\n  };\n\n  return (\n    <BreadPickWrap>\n      <YoutubePickEvent />\n\n      <PickBreadTitle>\n        <span>유튜버들이 선택한 빵을 즐겨보세요</span>\n      </PickBreadTitle>\n\n      {/* <Swiper\n        navigation\n        pagination={{\n          clickable: true\n        }}\n        scrollbar={{\n          draggable: true\n        }}> */}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <Slider {...settings}>\n        <StyledSlider>\n          <PickBreadImage>\n            <div className=\"VideoContainer\">\n              <Youtube\n                className=\"youtubeVideo\"\n                videoId=\"2g811Eo7K8U\"\n                opts={opts}\n                onReady={onReady}\n              />\n            </div>\n            <div className=\"pick_title\">\n              <span>Title</span>\n              <span>Description</span>\n              <button type=\"button\" className=\"show_button\">\n                리뷰 보러가기\n              </button>\n            </div>\n          </PickBreadImage>\n          <PickBreadImage>\n            <div className=\"VideoContainer\">\n              <Youtube\n                className=\"youtubeVideo\"\n                videoId=\"2g811Eo7K8U\"\n                opts={opts}\n                onReady={onReady}\n              />\n            </div>\n            <div className=\"pick_title\">\n              <span>Title</span>\n              <span>Description</span>\n              <button type=\"button\" className=\"show_button\">\n                리뷰 보러가기\n              </button>\n            </div>\n          </PickBreadImage>\n          <PickBreadImage>\n            <div className=\"VideoContainer\">\n              <Youtube\n                className=\"youtubeVideo VideoContainer\"\n                videoId=\"2g811Eo7K8U\"\n                opts={opts}\n                onReady={onReady}\n              />\n            </div>\n            <div className=\"pick_title\">\n              <span>Title</span>\n              <span>Description</span>\n              <button type=\"button\" className=\"show_button\">\n                리뷰 보러가기\n              </button>\n            </div>\n          </PickBreadImage>\n        </StyledSlider>\n      </Slider>\n      {/* </Swiper> */}\n    </BreadPickWrap>\n  );\n};\n\nexport default PickBread;\n","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/social.jsx",["304","305"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport KakaoLogin from 'react-kakao-login';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\n\nimport axios, { setAuthorization } from '../../utils/axios';\nimport { errorhandler } from '../../utils/common';\nimport { setCurrentUser } from '../redux/user/user.actions';\nimport { SosalLogin, GoogleWrap, FacebookWrap, KakaoWrap } from '../sign-in/signin_content_style';\n\n// 소셜 로그인\nconst kakaoToken = process.env.REACT_APP_KAKAO_KEY;\nconst facebookToken = process.env.REACT_APP_FACEBOOK_KEY;\nconst googleToken = process.env.REACT_APP_GOOGLE_KEY;\n\nconst Social = ({ onUserSet, history }) => {\n  // 카카오\n  const onSuccess = async (userData) => {\n    try {\n      const { access_token: accessToken } = userData.response;\n\n      const socialObject = {\n        token: accessToken,\n        type: 'kakao'\n      };\n\n      const { data } = await axios.post('/user/social/signup', socialObject);\n\n      const {\n        data: { token }\n      } = data;\n\n      setAuthorization(token);\n\n      // 서버에서 누구인지 받아오는곳\n      const { status, data: getData } = await axios.get('/user/current');\n      if (status === 201) {\n        onUserSet(getData.data, token);\n        history.push('/');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 구글\n  const responseGoogle = async (response) => {\n    try {\n      if (!response.error) {\n        const { accessToken: googleAccessToken } = response;\n\n        const socialObject = {\n          token: googleAccessToken,\n          type: 'google'\n        };\n\n        const { data } = await axios.post('/user/social/signup', socialObject);\n\n        const {\n          data: { token }\n        } = data;\n\n        setAuthorization(token);\n\n        // 서버에서 누구인지 받아오는곳\n        const { status, data: getData } = await axios.get('/user/current');\n        if (status === 201) {\n          onUserSet(getData.data, token);\n          history.push('/');\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 페이스북\n  const responseFacebook = async (response) => {\n    try {\n      const { accessToken: facebookAccessToken } = response;\n\n      const socialObject = {\n        token: facebookAccessToken,\n        type: 'facebook'\n      };\n\n      const {\n        data: {\n          data: { token }\n        }\n      } = await axios.post('/user/social/signup', socialObject);\n\n      setAuthorization(token);\n\n      // 서버에서 누구인지 받아오는곳\n      const { status, data: facebookData } = await axios.get('/user/current');\n      if (status === 201) {\n        onUserSet(facebookData.data, token);\n        history.push('/');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  return (\n    <SosalLogin className=\"clearfix\">\n      <GoogleWrap>\n        <GoogleLogin\n          clientId={googleToken}\n          render={(renderProps) => (\n            <button onClick={renderProps.onClick} disabled={renderProps.disabled} type=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/google.png\"\n                alt=\"구글 로그인\"\n              />\n              <span>구글</span>\n            </button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy=\"single_host_origin\"\n        />\n      </GoogleWrap>\n\n      <FacebookWrap>\n        <FacebookLogin\n          appId={facebookToken}\n          callback={responseFacebook}\n          fields=\"name,email,picture\"\n          render={(renderProps) => (\n            <button onClick={renderProps.onClick} type=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/socalfacebook.png\"\n                alt=\"페이스북 로그인\"\n              />\n              <span>페이스북</span>\n            </button>\n          )}\n        />\n      </FacebookWrap>\n\n      <KakaoWrap>\n        <KakaoLogin\n          token={kakaoToken}\n          onSuccess={onSuccess}\n          onFail={console.error}\n          onLogout={console.info}\n          render={({ onClick }) => (\n            <div onClick={onClick} aria-hidden=\"true\" role=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/ico_kakaotalk.png\"\n                alt=\"카카오톡 로그인\"\n              />\n              <span>카카오톡</span>\n            </div>\n          )}\n        />\n      </KakaoWrap>\n    </SosalLogin>\n  );\n};\n\nSocial.propTypes = {\n  onUserSet: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.object).isRequired\n};\n\nconst userToPropsDispatch = (dispatch) => ({\n  onUserSet: (user, token) => dispatch(setCurrentUser(user, token))\n});\n\nexport default connect(null, userToPropsDispatch)(Social);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_component.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/breadShop_li_component.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/bread-shop-reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_rangking.jsx",["306","307","308"],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_rangking_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_router.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/detail/breadShop_detail.jsx",["309"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Slider from 'react-slick';\n\nimport { errorhandler } from '../../../../../utils/common';\nimport { HouseDetaile, Grade, ShopImage, Information, OtherBread, BreadShopList } from './breadShop_detail_style';\nimport axios from '../../../../../utils/axios';\nimport BreadLi from '../../../../common-component/bread_li_component';\nimport Review from '../../../../common-component/review/review';\nimport Comment from '../../../../common-component/comment/comment';\nimport { selectShopBread, selectShopImages, selectShopMenuImages, selectShopHolidays, selectShopAddress, selectShopInfo } from '../../../../redux/breadshop/detail/breadShopDetail.selectors';\nimport { setCurrentBreadShopDetail, setShopDetailTrue, setShopDetailFalse } from '../../../../redux/breadshop/detail/breadShopDetail.actions';\n\nconst ShopDetail = ({ shopDetailBread, shopDetailImages, shopDetailAddress, shopDetailInfo, onShopDetailBread, match, onDetailTrue, onDetailFalse }) => {\n  const { breadShopId } = match.params;\n  useEffect(() => {\n    async function fetchDetailData() {\n      try {\n        const { status, data: detaileData } = await axios.get(`/bread/shop/${breadShopId}`);\n        if (status === 200) {\n          onShopDetailBread(detaileData.data);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n\n    fetchDetailData();\n  }, []);\n\n  const onDetailHeart = async () => {\n    try {\n      if (shopDetailInfo.like) {\n        const { status: detailStatus } = await axios.delete(`/bread/shop/favorite/${shopDetailInfo.id}`);\n        if (detailStatus === 200) {\n          onDetailFalse();\n        }\n      } else {\n        const { status } = await axios.post(`/bread/shop/favorite/${shopDetailInfo.id}`);\n        if (status === 200) {\n          onDetailTrue();\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    autoplay: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return (\n    <HouseDetaile>\n      <Grade>\n        <h1>{shopDetailInfo?.title}</h1>\n\n        <img\n          src={shopDetailInfo?.like ? 'https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/heart.png' : 'https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/spaceheart.png'}\n          alt=\"빈하트 이미지\"\n          onClick={onDetailHeart}\n          aria-hidden=\"true\"\n        />\n      </Grade>\n      <ShopImage>\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        <Slider {...settings}>\n          {shopDetailImages.map((images, index) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <img src={images} alt={`빵집사진-${index}`} key={`bread-image-${index}`} />\n          ))}\n        </Slider>\n        <Information>\n          <div>주소</div>\n          <p>{shopDetailAddress?.address || ''}</p>\n        </Information>\n        <Information>\n          <div>전화번호</div>\n          <p>{shopDetailInfo?.storeNumber || ''}</p>\n        </Information>\n        <Information>\n          <div>주차</div>\n          {/* eslint-disable-next-line no-nested-ternary */}\n          <p>{shopDetailInfo ? (shopDetailInfo.parkongEnabled ? '가능' : '불가능') : ''}</p>\n        </Information>\n        <Information>\n          <div>영업시간</div>\n          <p>{shopDetailInfo?.openTime || ''}</p>\n        </Information>\n        <Information>\n          <div>홈페이지</div>\n          <p>\n            <a href={shopDetailInfo?.link} target=\"_blank\" rel=\"noreferrer\">\n              {shopDetailInfo?.link || ''}\n            </a>\n          </p>\n        </Information>\n      </ShopImage>\n      <Review match={match.params} />\n      <Comment match={match.params} />\n\n      <OtherBread>\n        <h1>빵</h1>\n        <div className=\"all_show\">\n          <Link to=\"/rank/bread\">\n            <span>모두보기</span>\n          </Link>\n          <span className=\"triangle\" />\n        </div>\n      </OtherBread>\n      <BreadShopList>\n        <ul className=\"list_wrap\">\n          {shopDetailBread.map((breadShopData) => (\n            // <Link to=\"\"> 빵 디테일 컴포넌트로 이동 해야됨\n            <BreadLi key={`bread_shop_list${breadShopData.id}`} dataList={breadShopData} breadLike={breadShopData.like} />\n            // </Link>\n          ))}\n        </ul>\n      </BreadShopList>\n    </HouseDetaile>\n  );\n};\n\nShopDetail.propTypes = {\n  shopDetailBread: PropTypes.instanceOf(Array).isRequired,\n  onShopDetailBread: PropTypes.func.isRequired,\n  match: PropTypes.instanceOf(Object).isRequired,\n  shopDetailImages: PropTypes.instanceOf(Array).isRequired,\n  shopDetailAddress: PropTypes.instanceOf(Object),\n  shopDetailInfo: PropTypes.instanceOf(Object),\n  onDetailTrue: PropTypes.func.isRequired,\n  onDetailFalse: PropTypes.func.isRequired\n};\n\n// 초기값이 없거나 null인 경우 예외처리\nShopDetail.defaultProps = {\n  shopDetailAddress: null,\n  shopDetailInfo: null\n};\n\nconst breadShopStateToProps = createStructuredSelector({\n  shopDetailBread: selectShopBread,\n  shopDetailImages: selectShopImages,\n  shopDetailMenuImages: selectShopMenuImages,\n  shopDetailHolidays: selectShopHolidays,\n  shopDetailAddress: selectShopAddress,\n  shopDetailInfo: selectShopInfo\n});\n\nconst breadShopDetaileDispathch = (dispatch) => ({\n  onShopDetailBread: (DetailList) => dispatch(setCurrentBreadShopDetail(DetailList)),\n  onDetailTrue: () => dispatch(setShopDetailTrue()),\n  onDetailFalse: () => dispatch(setShopDetailFalse())\n});\n\nexport default connect(breadShopStateToProps, breadShopDetaileDispathch)(ShopDetail);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/detail/breadShop_detail_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/comment/breadShopComment.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/comment/breadShopComment.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/comment/breadShopComment.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/comment/breadShopComment.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/comment.jsx",["310"],"/* eslint-disable no-nested-ternary */\n/* eslint-disable no-shadow */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport { CommentWrap, CommentBox, MoreButton } from './comment_style';\nimport RegisterComment from './first-commend/first_commend';\nimport axios from '../../../utils/axios';\nimport { errorhandler } from '../../../utils/common';\nimport { setShopDetailComment, setShopDetailCommentMore, setRegisterComment, setCommentModify, setCommentDelete } from '../../redux/breadshop/comment/breadShopComment.actions';\nimport { selectShopComment, selectShopCommentPagnaition } from '../../redux/breadshop/comment/breadShopComment.selectors';\n\nconst limit = 20;\n\nconst Comment = ({ match, onDetailComment, onDetailCommentMore, onRegisterComment, onCommentModify, onCommentDelete, shopDetailComment, shopCommentPagnaition }) => {\n  // 댓글등록\n  const [comment, setComment] = useState('');\n  const { breadShopId } = match;\n\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    async function fetchDetailComment() {\n      try {\n        const { status, data } = await axios.get(`/comment/bread/shop/${breadShopId}?page=${page}&limit=${limit}`);\n\n        if (status === 200) {\n          onDetailComment(data.list, data.pagination);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchDetailComment();\n  }, []);\n\n  // 댓글 핸들체인지1\n  const handleComment = (e) => {\n    setComment(e.target.value);\n  };\n\n  // 댓글등록\n  const registerSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const commentObject = {\n        content: comment\n      };\n      const { status, data } = await axios.post(`/comment/bread/shop/${breadShopId}`, commentObject);\n\n      if (status === 201) {\n        onRegisterComment(data.data);\n        setComment('');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 더보기 버튼\n  const moreButtonClick = async () => {\n    try {\n      const { status, data } = await axios.get(`/comment/bread/shop/${breadShopId}?page=${page + 1}&limit=${limit}`);\n\n      if (status === 200) {\n        onDetailCommentMore(data.list, data.pagination);\n        setPage(page + 1);\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  return (\n    <CommentWrap>\n      <CommentBox>\n        <h2>현재 {shopCommentPagnaition?.totalCount || '0'}개의 댓글</h2>\n        <form onSubmit={registerSubmit}>\n          <textarea placeholder=\"댓글을 입력해 주세요.\" onChange={handleComment} value={comment} name=\"comment\" />\n          <button type=\"submit\" className=\"registerButton\">\n            등록하기\n          </button>\n        </form>\n      </CommentBox>\n\n      {shopDetailComment.map((comment) => (\n        <RegisterComment key={`comment-${comment.id}`} comment={comment} onCommentModify={onCommentModify} onCommentDelete={onCommentDelete} breadShopId={breadShopId} />\n      ))}\n      {shopCommentPagnaition ? (\n        shopCommentPagnaition.currentPage !== shopCommentPagnaition.totalPage ? (\n          <MoreButton>\n            <button type=\"button\" onClick={moreButtonClick}>\n              더보기\n            </button>\n          </MoreButton>\n        ) : null\n      ) : null}\n    </CommentWrap>\n  );\n};\n\nComment.defaultProps = {\n  shopCommentPagnaition: null\n};\n\nComment.propTypes = {\n  match: PropTypes.instanceOf(Object).isRequired,\n  shopDetailComment: PropTypes.instanceOf(Array).isRequired,\n  onRegisterComment: PropTypes.func.isRequired,\n  onDetailComment: PropTypes.func.isRequired,\n  onDetailCommentMore: PropTypes.func.isRequired,\n  onCommentModify: PropTypes.func.isRequired,\n  onCommentDelete: PropTypes.func.isRequired,\n  shopCommentPagnaition: PropTypes.instanceOf(Object)\n};\n\nconst detailCommentStateToProps = createStructuredSelector({\n  shopDetailComment: selectShopComment,\n  shopCommentPagnaition: selectShopCommentPagnaition\n});\n\nconst detailCommentDispatch = (dispatch) => ({\n  onDetailComment: (comment, pagnation) => dispatch(setShopDetailComment(comment, pagnation)),\n  onDetailCommentMore: (comment, pagnation) => dispatch(setShopDetailCommentMore(comment, pagnation)),\n  onRegisterComment: (register) => dispatch(setRegisterComment(register)),\n  onCommentModify: (modify, commentId) => dispatch(setCommentModify(modify, commentId)),\n  onCommentDelete: (commentDelete) => dispatch(setCommentDelete(commentDelete))\n});\n\nexport default connect(detailCommentStateToProps, detailCommentDispatch)(Comment);\n","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/comment_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/review/review.jsx",["311"],"import React, { useState, useRef, useEffect } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport Slider from 'react-slick';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { selectShopReview } from '../../redux/breadshop/review/review.selectors';\nimport { setBreadShopReview, setShopReviewWriting } from '../../redux/breadshop/review/review.actions';\nimport { ReviewWrapBox, ReviewWrap, ReviewText, Register, RegisterReviewWrap, RegisterReview, ImageMap, ImageWrap, CloseWrap, ReviewButton, ReviewSlid, ReviewBox, BoxButton, BoxLeft, Content, UserImage, ReviewModal } from './review_style';\nimport axios from '../../../utils/axios';\nimport { errorhandler, sweetAlert } from '../../../utils/common';\n\nconst Review = ({ match, shopDetailReview, onDetailReview, onDetailReviewWriting }) => {\n  const { breadShopId } = match;\n\n  // 리뷰등록\n  const [writingReview, setWritingReview] = useState({\n    text: ''\n  });\n\n  const [writingImage, setWritingImage] = useState([]);\n\n  // 모달 이미지(매개변수받아옴)\n  const [modalImage, setModalImage] = useState([]);\n\n  // 리뷰 등록시 모달\n  const [openModal, setOpenModal] = useState(false);\n\n  // 등록후 이미지클릭 모달\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const el = useRef();\n\n  const { text } = writingReview;\n\n  useEffect(() => {\n    async function fetchDetailReview() {\n      try {\n        const { status, data: reviewData } = await axios.get(`/review/${breadShopId}`);\n\n        if (status === 200) {\n          onDetailReview(reviewData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchDetailReview();\n  }, []);\n\n  const reviewOpenModal = () => {\n    setOpenModal(true);\n    document.body.style.overflow = 'hidden';\n  };\n  const reviewCloseModal = () => {\n    setOpenModal(false);\n    document.body.style.removeProperty('overflow');\n  };\n\n  // 오픈 모달\n  const opneModal = (reviewImage) => {\n    setModalOpen(true);\n    setModalImage(reviewImage);\n    document.body.style.overflow = 'hidden';\n  };\n\n  // 클로짓 모달\n  const closeModal = () => {\n    setModalOpen(false);\n    document.body.style.removeProperty('overflow');\n  };\n\n  // 리뷰등록\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const imageLists = [];\n      for (let i = 0; i < writingImage.length; i += 1) {\n        imageLists.push(writingImage[i].imageUrl);\n      }\n      const reviewObject = {\n        content: writingReview.text,\n        imageUrl: imageLists\n      };\n\n      const { status, data } = await axios.post(`/review/${breadShopId}`, reviewObject);\n      if (status === 201) {\n        onDetailReviewWriting(data.data);\n        setWritingReview({\n          text: ''\n        });\n        setWritingImage([]);\n        setOpenModal(false);\n        document.body.style.removeProperty('overflow');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const resetButton = (index) => {\n    const deleteImageList = [...writingImage];\n    deleteImageList.splice(index, 1);\n    setWritingImage(deleteImageList);\n  };\n\n  const handleChange = (e) => {\n    setWritingReview({\n      ...writingReview,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // 이미지 핸들체인지\n  const imageHandleChange = async (e) => {\n    try {\n      const { files } = e.target;\n\n      const imageLength = files.length + writingImage.length;\n      if (imageLength > 6) {\n        sweetAlert('이미지를 초과했습니다.');\n      }\n\n      const imageFormData = new FormData();\n      for (let i = 0; i < files.length; i += 1) {\n        imageFormData.append('imgFile', e.target.files[i]);\n      }\n\n      const { status, data: imageData } = await axios.post('/upload/review', imageFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      if (status === 200) {\n        const {\n          data: { imageUrl: newImageUrlList }\n        } = imageData;\n\n        const newimageList = [];\n        newImageUrlList.forEach((image) => {\n          const newImage = {\n            imageUrl: image\n          };\n          newimageList.push(newImage);\n        });\n        setWritingImage([...writingImage, ...newimageList]);\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return (\n    <ReviewWrapBox>\n      <ReviewWrap>\n        <ReviewText>\n          <h1>리뷰</h1>\n        </ReviewText>\n        <Register>\n          <span onClick={reviewOpenModal} aria-hidden=\"true\" role=\"button\">\n            리뷰쓰기\n          </span>\n        </Register>\n      </ReviewWrap>\n\n      <RegisterReviewWrap>\n        {openModal && (\n          <RegisterReview ref={el} aria-hidden=\"true\">\n            <div className=\"review_modal_wrap\" onClick={reviewCloseModal} aria-hidden=\"true\" />\n            <div className=\"review_modal\">\n              <div className=\"title\">\n                지수ㅜ수수수수빵집 <span className=\"title_text\">리뷰를 작성해 주세요</span>\n              </div>\n\n              <div className=\"review_form_modal\">\n                <form onSubmit={handleSubmit}>\n                  <textarea placeholder=\"지수빵집에 대한 분위기와 맛은 어떤가요?\" onChange={handleChange} value={text} name=\"text\" />\n\n                  <ImageMap>\n                    {writingImage.map((imageData, index) => (\n                      // eslint-disable-next-line react/no-array-index-key\n                      <ImageWrap key={`image-${index}`}>\n                        <div>\n                          <img src={imageData.imageUrl} alt={`리뷰 사진${index}`} className=\"review_image\" />\n                          <div className=\"bread_button_wrap\" onClick={() => resetButton(index)} aria-hidden=\"true\">\n                            <CloseWrap>\n                              <div className=\"image_close_container1\">\n                                <div id=\"image_close_menu\">\n                                  <span />\n                                  <span />\n                                </div>\n                              </div>\n                            </CloseWrap>\n                          </div>\n                        </div>\n                      </ImageWrap>\n                    ))}\n                  </ImageMap>\n\n                  <input type=\"file\" id=\"file\" onChange={imageHandleChange} name=\"reviewImage\" multiple />\n                  <button type=\"button\" className=\"file_button\">\n                    <i />\n                  </button>\n\n                  <ReviewButton>\n                    <button type=\"button\" onClick={reviewCloseModal} className=\"reviewButton\">\n                      취소\n                    </button>\n                    <button type=\"submit\" className=\"reviewButton\">\n                      리뷰올리기\n                    </button>\n                  </ReviewButton>\n                </form>\n              </div>\n            </div>\n          </RegisterReview>\n        )}\n      </RegisterReviewWrap>\n\n      <ReviewSlid>\n        {shopDetailReview.length ? (\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          <Slider {...settings}>\n            {shopDetailReview.map((review) => (\n              <ReviewBox key={`review-${review.id}`}>\n                <BoxButton>\n                  <BoxLeft>\n                    <div className=\"button_wrap\">\n                      <div className=\"user_wrap\">\n                        <img src={review.user.imageUrl} alt=\"\" />\n                        <p>{review.user.name}</p>\n                        <p>{moment(review.createdAt).format('YYYY-MM-DD')}</p>\n                      </div>\n                    </div>\n                  </BoxLeft>\n                </BoxButton>\n\n                <Content>\n                  <p style={{ whiteSpace: 'pre-line' }}>{review.content}</p>\n                  {/* html을 바로 넣는 방법 */}\n                  {/* <div dangerouslySetInnerHTML={{ __html: review.content.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />') }} /> */}\n                </Content>\n\n                {review.images.map((reviewImage, index) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <UserImage key={`reviewimage-${review.id}-${index}`}>\n                    <button type=\"button\" onClick={() => opneModal(review.images)}>\n                      <img src={reviewImage} alt={`리뷰 이미지${index}`} />\n                    </button>\n                  </UserImage>\n                ))}\n              </ReviewBox>\n            ))}\n          </Slider>\n        ) : (\n          <div className=\"background_wrap\">등록된 리뷰가 없습니다.</div>\n        )}\n      </ReviewSlid>\n\n      <ReviewModal>\n        {modalOpen && (\n          <>\n            <div className=\"Modal-overlay\" ref={el} onClick={closeModal} aria-hidden=\"true\" />\n            <div className=\"Modal\">\n              <div>\n                <p className=\"title\">리뷰 이미지</p>\n              </div>\n              <div className=\"content\">\n                {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n                <Slider {...settings}>\n                  {modalImage.map((images, index) => (\n                    <img src={images} alt={`리뷰사진${index}`} key={`modalImage-${images}`} className=\"modal_image\" />\n                  ))}\n                </Slider>\n              </div>\n              <div className=\"button-wrap\">\n                <button type=\"button\" onClick={closeModal}>\n                  취소\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      </ReviewModal>\n    </ReviewWrapBox>\n  );\n};\n\nReview.propTypes = {\n  match: PropTypes.instanceOf(Object).isRequired,\n  shopDetailReview: PropTypes.instanceOf(Array).isRequired,\n  onDetailReview: PropTypes.func.isRequired,\n  onDetailReviewWriting: PropTypes.func.isRequired\n};\n\nconst shopReviewStateToProps = createStructuredSelector({\n  shopDetailReview: selectShopReview\n});\n\nconst shopReviewDispatch = (dispatch) => ({\n  onDetailReview: (review) => dispatch(setBreadShopReview(review)),\n  onDetailReviewWriting: (writing) => dispatch(setShopReviewWriting(writing))\n});\n\nexport default connect(shopReviewStateToProps, shopReviewDispatch)(Review);\n","/Users/songjisu/Desktop/bread_service/src/components/common-component/review/review_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/second-recomment/second_recomment.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/second-recomment/second_recomment_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/first-commend/first_commend_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/first-commend/first_commend.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/bread_router.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/popular_component.jsx",["312","313","314"],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/popular_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/detail/bread_detail.jsx",["315"],"import React from 'react';\nimport { BreadDtail } from './bread_detail_style';\n\nconst BreadDetail = () => {\n  console.log('aaaa');\n  return (\n    <BreadDtail>\n      <h1>ssss</h1>\n    </BreadDtail>\n  );\n};\n\nexport default BreadDetail;\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/detail/bread_detail_style.jsx",[],{"ruleId":"316","replacedBy":"317"},{"ruleId":"318","replacedBy":"319"},{"ruleId":"320","replacedBy":"321"},{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","replacedBy":"325"},{"ruleId":"326","replacedBy":"327"},{"ruleId":"328","severity":1,"message":"329","line":31,"column":6,"nodeType":"330","endLine":31,"endColumn":8,"suggestions":"331"},{"ruleId":"328","severity":1,"message":"332","line":76,"column":6,"nodeType":"330","endLine":76,"endColumn":8,"suggestions":"333"},{"ruleId":"334","severity":1,"message":"335","line":24,"column":11,"nodeType":"336","messageId":"337","endLine":24,"endColumn":22},{"ruleId":"334","severity":1,"message":"335","line":150,"column":19,"nodeType":"336","messageId":"337","endLine":150,"endColumn":32},{"ruleId":"334","severity":1,"message":"335","line":151,"column":21,"nodeType":"336","messageId":"337","endLine":151,"endColumn":33},{"ruleId":"334","severity":1,"message":"335","line":62,"column":5,"nodeType":"336","messageId":"337","endLine":62,"endColumn":16},{"ruleId":"328","severity":1,"message":"338","line":138,"column":6,"nodeType":"330","endLine":138,"endColumn":8,"suggestions":"339"},{"ruleId":"334","severity":1,"message":"335","line":220,"column":5,"nodeType":"336","messageId":"337","endLine":220,"endColumn":16},{"ruleId":"328","severity":1,"message":"340","line":32,"column":6,"nodeType":"330","endLine":32,"endColumn":8,"suggestions":"341"},{"ruleId":"328","severity":1,"message":"342","line":37,"column":6,"nodeType":"330","endLine":37,"endColumn":8,"suggestions":"343"},{"ruleId":"328","severity":1,"message":"344","line":50,"column":6,"nodeType":"330","endLine":50,"endColumn":8,"suggestions":"345"},{"ruleId":"328","severity":1,"message":"346","line":39,"column":6,"nodeType":"330","endLine":39,"endColumn":8,"suggestions":"347"},{"ruleId":"334","severity":1,"message":"335","line":48,"column":7,"nodeType":"336","messageId":"337","endLine":48,"endColumn":18},{"ruleId":"334","severity":1,"message":"335","line":53,"column":7,"nodeType":"336","messageId":"337","endLine":53,"endColumn":18},{"ruleId":"334","severity":1,"message":"335","line":5,"column":3,"nodeType":"336","messageId":"337","endLine":5,"endColumn":14},"lines-around-directive",["348"],"no-spaced-func",["349"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["350"],"React Hook useEffect has missing dependencies: 'onBreadList', 'onBreadShopList', and 'onEventList'. Either include them or remove the dependency array. If 'onBreadList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["351"],"no-console","Unexpected console statement.","MemberExpression","unexpected","React Hook useEffect has missing dependencies: 'location.search', 'onAddressDong', and 'onAddressSi'. Either include them or remove the dependency array. If 'onAddressSi' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["352"],"React Hook useEffect has missing dependencies: 'breadShopId' and 'onShopDetailBread'. Either include them or remove the dependency array. If 'onShopDetailBread' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["353"],"React Hook useEffect has missing dependencies: 'breadShopId', 'onDetailComment', and 'page'. Either include them or remove the dependency array. If 'onDetailComment' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["354"],"React Hook useEffect has missing dependencies: 'breadShopId' and 'onDetailReview'. Either include them or remove the dependency array. If 'onDetailReview' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["355"],"React Hook useEffect has a missing dependency: 'onBreadList'. Either include it or remove the dependency array. If 'onBreadList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["356"],"padding-line-between-statements","func-call-spacing",{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},"Update the dependencies array to be: [history]",{"range":"371","text":"372"},"Update the dependencies array to be: [onBreadList, onBreadShopList, onEventList]",{"range":"373","text":"374"},"Update the dependencies array to be: [location.search, onAddressDong, onAddressSi]",{"range":"375","text":"376"},"Update the dependencies array to be: [breadShopId, onShopDetailBread]",{"range":"377","text":"378"},"Update the dependencies array to be: [breadShopId, onDetailComment, page]",{"range":"379","text":"380"},"Update the dependencies array to be: [breadShopId, onDetailReview]",{"range":"381","text":"382"},"Update the dependencies array to be: [onBreadList]",{"range":"383","text":"384"},[816,818],"[history]",[2271,2273],"[onBreadList, onBreadShopList, onEventList]",[3897,3899],"[location.search, onAddressDong, onAddressSi]",[1545,1547],"[breadShopId, onShopDetailBread]",[1475,1477],"[breadShopId, onDetailComment, page]",[1664,1666],"[breadShopId, onDetailReview]",[1292,1294],"[onBreadList]"]