[{"/Users/songjisu/Desktop/bread_service/src/index.js":"1","/Users/songjisu/Desktop/bread_service/src/reportWebVitals.js":"2","/Users/songjisu/Desktop/bread_service/src/App.jsx":"3","/Users/songjisu/Desktop/bread_service/src/components/sign-in/Signin_Content.jsx":"4","/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content.jsx":"5","/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content_style.jsx":"6","/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header.jsx":"7","/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header_style.jsx":"8","/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer.jsx":"9","/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer_style.jsx":"10","/Users/songjisu/Desktop/bread_service/src/layout.js":"11","/Users/songjisu/Desktop/bread_service/src/utils/common.js":"12","/Users/songjisu/Desktop/bread_service/src/utils/axios.js":"13","/Users/songjisu/Desktop/bread_service/src/components/redux/store.js":"14","/Users/songjisu/Desktop/bread_service/src/components/redux/root-reducer.js":"15","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content.jsx":"16","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content_style.jsx":"17","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.selectors.js":"18","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.actions.js":"19","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.types.js":"20","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.reducer.js":"21","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.reducer.js":"22","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.types.js":"23","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.selectors.js":"24","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.actions.js":"25","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content.jsx":"26","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content_style.jsx":"27","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/breadhouse_rangking.jsx":"28","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/breadhouse_rangking_style.jsx":"29","/Users/songjisu/Desktop/bread_service/src/components/common-component/social.jsx":"30","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/popular/popular_component.jsx":"31","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/popular/popular_style.jsx":"32","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread.jsx":"33","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread_style.jsx":"34","/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_component.jsx":"35","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.actions.js":"36","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.types.js":"37","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.selectors.js":"38","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.reducer.js":"39"},{"size":590,"mtime":1614055395845,"results":"40","hashOfConfig":"41"},{"size":364,"mtime":1612334723393,"results":"42","hashOfConfig":"41"},{"size":2194,"mtime":1615876835353,"results":"43","hashOfConfig":"41"},{"size":831,"mtime":1612789571807,"results":"44","hashOfConfig":"45"},{"size":3477,"mtime":1615903263932,"results":"46","hashOfConfig":"41"},{"size":3029,"mtime":1614091730010,"results":"47","hashOfConfig":"41"},{"size":3865,"mtime":1615980852407,"results":"48","hashOfConfig":"41"},{"size":3297,"mtime":1615980826101,"results":"49","hashOfConfig":"41"},{"size":1801,"mtime":1613986670068,"results":"50","hashOfConfig":"41"},{"size":1322,"mtime":1613986681730,"results":"51","hashOfConfig":"41"},{"size":504,"mtime":1614053374210,"results":"52","hashOfConfig":"41"},{"size":1084,"mtime":1614489068226,"results":"53","hashOfConfig":"41"},{"size":277,"mtime":1613802811964,"results":"54","hashOfConfig":"41"},{"size":382,"mtime":1613871150341,"results":"55","hashOfConfig":"41"},{"size":353,"mtime":1615874041002,"results":"56","hashOfConfig":"41"},{"size":3097,"mtime":1614591003332,"results":"57","hashOfConfig":"41"},{"size":3675,"mtime":1614091183577,"results":"58","hashOfConfig":"41"},{"size":202,"mtime":1614352380005,"results":"59","hashOfConfig":"41"},{"size":181,"mtime":1614326060706,"results":"60","hashOfConfig":"41"},{"size":105,"mtime":1614326061454,"results":"61","hashOfConfig":"41"},{"size":458,"mtime":1614326137805,"results":"62","hashOfConfig":"41"},{"size":718,"mtime":1615618568266,"results":"63","hashOfConfig":"41"},{"size":119,"mtime":1615458048238,"results":"64","hashOfConfig":"41"},{"size":179,"mtime":1615034705548,"results":"65","hashOfConfig":"41"},{"size":291,"mtime":1615616015308,"results":"66","hashOfConfig":"41"},{"size":4089,"mtime":1615612851275,"results":"67","hashOfConfig":"41"},{"size":2037,"mtime":1615184488860,"results":"68","hashOfConfig":"41"},{"size":7236,"mtime":1615972867792,"results":"69","hashOfConfig":"41"},{"size":4677,"mtime":1615972247968,"results":"70","hashOfConfig":"41"},{"size":5458,"mtime":1615874873637,"results":"71","hashOfConfig":"41"},{"size":1944,"mtime":1615618569080,"results":"72","hashOfConfig":"41"},{"size":1473,"mtime":1615357545725,"results":"73","hashOfConfig":"41"},{"size":2529,"mtime":1615291709505,"results":"74","hashOfConfig":"41"},{"size":1168,"mtime":1615282617509,"results":"75","hashOfConfig":"41"},{"size":814,"mtime":1615617851026,"results":"76","hashOfConfig":"41"},{"size":234,"mtime":1615703111726,"results":"77","hashOfConfig":"41"},{"size":118,"mtime":1615703264807,"results":"78","hashOfConfig":"41"},{"size":178,"mtime":1613877611741,"results":"79","hashOfConfig":"41"},{"size":702,"mtime":1615703873484,"results":"80","hashOfConfig":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"mf92pq",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7uepa",{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"83"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"83"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"83"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"83"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"83"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"83"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"83"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"83"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"83"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"83"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"83"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"83"},"/Users/songjisu/Desktop/bread_service/src/index.js",[],["175","176","177","178","179","180"],"/Users/songjisu/Desktop/bread_service/src/reportWebVitals.js",[],"/Users/songjisu/Desktop/bread_service/src/App.jsx",["181","182","183"],"import React, { useLayoutEffect } from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Signin from './components/sign-in/signin_content';\nimport Signup from './components/sign-up/signup_content';\nimport HouseRangking from './components/service-main/contents/breadhouse-rangking/breadhouse_rangking';\nimport populaBread from './components/service-main/contents/popular/popular_component';\nimport MainHome from './components/service-main/contents/main/mainhome_content';\nimport PickBread from './components/service-main/contents/youtube-pick/youtube_bread';\n\nimport LayOut from './layout';\nimport axios, { setAuthorization } from './utils/axios';\nimport { errorhandler } from './utils/common';\n\nimport { setCurrentUser } from './components/redux/user/user.actions';\n\nfunction App({ onUserData }) {\n  console.log(process.env.REACT_APP_GOOGLE_KEY);\n  console.log(onUserData);\n\n  useLayoutEffect(() => {\n    const bringToken = localStorage.getItem('userToken');\n    console.log(bringToken);\n    async function localTokenData() {\n      try {\n        setAuthorization(bringToken);\n        const { data } = await axios.get('/user/current');\n        onUserData(data.data, bringToken);\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n\n    if (bringToken) {\n      localTokenData();\n    }\n  }, [onUserData]);\n\n  return (\n    <>\n      <BrowserRouter>\n        <LayOut>\n          <Switch>\n            <Route exact path=\"/signin\" component={Signin} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route path=\"/rank/bread-house\" component={HouseRangking} />\n            <Route path=\"/rank/bread\" component={populaBread} />\n            <Route path=\"/youtube-bread\" component={PickBread} />\n            <Route path=\"/\" component={MainHome} />\n          </Switch>\n        </LayOut>\n      </BrowserRouter>\n    </>\n  );\n}\n\nApp.propTypes = {\n  onUserData: PropTypes.func.isRequired\n};\n\nconst userDispathchToProps = (dispatch) => ({\n  onUserData: (user, token) => dispatch(setCurrentUser(user, token))\n});\n\nexport default connect(null, userDispathchToProps)(App);\n","/Users/songjisu/Desktop/bread_service/src/components/sign-in/Signin_Content.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content.jsx",["184","185","186","187","188"],"import React, { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from '../redux/user/user.actions';\nimport { sweetAlert, isEmailValid, errorhandler } from '../../utils/common';\nimport axios, { setAuthorization } from '../../utils/axios';\n// eslint-disable-next-line object-curly-newline\nimport {\n  SigninAllWrap,\n  InputEmail,\n  InputPassword,\n  LoginButton,\n  SigninLine\n  // eslint-disable-next-line object-curly-newline\n} from './signin_content_style';\nimport Social from '../common-component/social';\n\nfunction Signin({ onUserSet, history }) {\n  const [LoginValue, setLoginValue] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = LoginValue;\n\n  useEffect(() => {\n    const bringToken = localStorage.getItem('userToken');\n    console.log(bringToken);\n    if (bringToken) {\n      history.replace('/');\n    }\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const signinObject = {\n        email,\n        password\n      };\n\n      if (!email) {\n        sweetAlert('이메일을 입력해주세요.');\n      } else if (isEmailValid(email)) {\n        sweetAlert('이메일 형식을 맞춰주세요.');\n      } else if (!password) {\n        sweetAlert('비밀번호를 입력해주세요.');\n      } else {\n        const { data } = await axios.post('/user/signin', signinObject);\n        // eslint-disable-next-line object-curly-newline\n        const {\n          data: { token }\n          // eslint-disable-next-line object-curly-newline\n        } = data;\n        setAuthorization(token);\n\n        const { status, data: getData } = await axios.get('/user/current');\n        console.log(getData);\n        console.log(status);\n        if (status === 200) {\n          onUserSet(getData.data, token);\n          console.log(getData);\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    setLoginValue({\n      ...LoginValue,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <>\n      <SigninAllWrap>\n        <div className=\"login-wrap\">\n          <form className=\"form_wrap\" onSubmit={handleSubmit}>\n            <h3>로그인</h3>\n\n            <InputEmail>\n              <span>이메일</span>\n              <input\n                type=\"text\"\n                placeholder=\"이메일 입력\"\n                onChange={handleChange}\n                name=\"email\"\n                value={email}\n              />\n            </InputEmail>\n\n            <InputPassword>\n              <span>비밀번호</span>\n              <input\n                type=\"password\"\n                placeholder=\"비밀번호 입력\"\n                onChange={handleChange}\n                name=\"password\"\n                value={password}\n              />\n            </InputPassword>\n\n            <LoginButton>\n              <button type=\"submit\">로그인</button>\n            </LoginButton>\n          </form>\n          <SigninLine>\n            <span>또는</span>\n            <hr />\n          </SigninLine>\n\n          <Social />\n        </div>\n      </SigninAllWrap>\n    </>\n  );\n}\n\nSignin.propTypes = {\n  onUserSet: PropTypes.func.isRequired,\n  history: PropTypes.instanceOf(Object).isRequired\n};\n\nconst userToPropsDispatch = (dispatch) => ({\n  onUserSet: (user, token) => dispatch(setCurrentUser(user, token))\n});\n\nexport default connect(null, userToPropsDispatch)(Signin);\n","/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header.jsx",["189","190"],"/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { Link } from 'react-router-dom';\n\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\nimport { setLogout } from '../../redux/user/user.actions';\n\n// eslint-disable-next-line object-curly-newline\nimport {\n  HeaderWrap,\n  BookMark,\n  LeftBookMark,\n  RightLogin,\n  MyProfile,\n  GroupNav,\n  NaveSearch\n  // eslint-disable-next-line object-curly-newline\n} from './header_style';\n\n/**\n * @author song-jisu /헤더(header)\n */\n\nconst Header = ({ currentUser, onLogout }) => {\n  console.log('aaa');\n  console.log(currentUser);\n\n  return (\n    <>\n      <HeaderWrap>\n        <BookMark>\n          <div className=\"bookmarkWrap clearfix\">\n            <LeftBookMark>\n              <span>즐겨찾기</span>\n              <span>입점신청</span>\n              <span>\n                <img\n                  src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/Vector+1.png\"\n                  alt=\"아래화살표\"\n                />\n              </span>\n            </LeftBookMark>\n            <RightLogin>\n              {currentUser ? (\n                <>\n                  <span className=\"userName\">{currentUser.name}</span>\n                  <span className=\"userimage\">\n                    <img src={currentUser.imageUrl} alt={`${currentUser.name}의 이미지`} />\n                  </span>\n                </>\n              ) : (\n                <div className=\"login_wrap\">\n                  <Link to=\"/signin\">\n                    <span className=\"login\">로그인</span>\n                  </Link>\n\n                  <Link to=\"/signup\">\n                    <span className=\"signUp\">회원가입</span>\n                  </Link>\n                </div>\n              )}\n            </RightLogin>\n\n            <MyProfile>\n              <span>내가 찜한 빵/빵집</span>\n              <span>내 정보 수정</span>\n              <span onClick={onLogout} aria-hidden=\"true\">\n                로그아웃\n              </span>\n            </MyProfile>\n          </div>\n        </BookMark>\n        <GroupNav className=\"clearfix\">\n          <Link to=\"/\">\n            <h1>\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/Meokppang.png\"\n                alt=\"먹방로그\"\n              />\n            </h1>\n          </Link>\n          <ul>\n            <Link to=\"/rank/bread-house\">\n              <li>빵집 랭킹</li>\n            </Link>\n            <Link to=\"/rank/bread\">\n              <li>요즘 인기있는 빵</li>\n            </Link>\n            <Link to=\"/youtube-bread\">\n              <li>유튜버 픽빵</li>\n            </Link>\n            <li>커뮤니티</li>\n            {/* <li onClick={onLogout} aria-hidden=\"true\">\n              로그아웃\n            </li> */}\n          </ul>\n          <NaveSearch>\n            <div className=\"abc\">\n              {/* <img src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/Search.png\" alt=\"돋보기 이미지\" /> */}\n              <span />\n            </div>\n            <input type=\"text\" placeholder=\"빵집과, 빵을 찾아보세요.\" />\n          </NaveSearch>\n        </GroupNav>\n      </HeaderWrap>\n    </>\n  );\n};\n\nconst userProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nHeader.propTypes = {\n  currentUser: PropTypes.instanceOf(Object),\n  onLogout: PropTypes.func.isRequired\n};\n\nHeader.defaultProps = {\n  currentUser: null\n};\n\nconst logoutToPropsDispatch = (dispatch) => ({\n  onLogout: () => dispatch(setLogout())\n});\n\nexport default connect(userProps, logoutToPropsDispatch)(Header);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer.jsx",["191"],"import React from 'react';\nimport { FooterWarp, SnsIcon, CorpArea } from './footer_style';\n\nconst Footer = () => {\n  console.log('footer');\n  return (\n    <FooterWarp className=\"clearfix\">\n      <SnsIcon>\n        <ul className=\"clearfix\">\n          <li><img src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/facebook.png\" alt=\"페이스북 아이콘\" /></li>\n          <li><img src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/insta.png\" alt=\"인스타그램 아이콘\" /></li>\n          <li><img src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/youtube.png\" alt=\"유튜브 아이콘\" /></li>\n          <li><img src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/linkedin.png\" alt=\"링크드인 아이콘\" /></li>\n          <li><img src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/blog.png\" alt=\"네이버블로그 아이콘\" /></li>\n        </ul>\n      </SnsIcon>\n\n      <CorpArea className=\"clearfix\">\n        <ul className=\"clearfix\">\n          <li>​©2021 SONG JISU</li>\n          <li>\n            <img src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/Union.png\" alt=\"핸드폰 이미지\" className=\"phone_img\" />\n            <span>010-1234-5678</span>\n          </li>\n          <li>\n            <img src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/Shape.png\" alt=\"이메일 이미지\" className=\"email_img\" />\n            <span>tndms951@naver.com</span>\n          </li>\n        </ul>\n      </CorpArea>\n    </FooterWarp>\n  );\n};\n\nexport default Footer;\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer_style.jsx",[],["192","193","194","195","196","197"],"/Users/songjisu/Desktop/bread_service/src/layout.js",["198"],"import React from 'react';\nimport { Reset } from 'styled-reset';\n\nimport Header from './components/service-main/header/header';\nimport Footer from './components/service-main/footer/footer';\n\n// import SignUp from './components/sign-up/signup_content';\n\n// eslint-disable-next-line react/prop-types\nfunction LayOut({ children }) {\n  console.log(children);\n  return (\n    <>\n      <Reset />\n      <Header />\n      {children}\n      {/* <SignUp /> */}\n      <Footer />\n    </>\n  );\n}\n\nexport default LayOut;\n","/Users/songjisu/Desktop/bread_service/src/utils/common.js",[],"/Users/songjisu/Desktop/bread_service/src/utils/axios.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/store.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/root-reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content.jsx",["199","200","201","202"],"import React, { useState } from 'react';\n\nimport axios from '../../utils/axios';\nimport { sweetAlert, isEmailValid, errorhandler } from '../../utils/common';\nimport { SignupAllWrap, InputEmail, InputName, InputPassword, ReInputPassword, LoginButton, SignupLine } from './signup_content_style';\nimport Social from '../common-component/social';\n\nfunction Signup() {\n  // 기능코드\n  const [LoginValue, setLoginValue] = useState({\n    email: '',\n    password: '',\n    name: '',\n    repassword: ''\n  });\n  console.log(LoginValue);\n\n  const { email, password, name, repassword } = LoginValue;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(LoginValue);\n\n    try {\n      const signupObject = {\n        email: LoginValue.email,\n        password: LoginValue.password,\n        name: LoginValue.name,\n        type: 'bread'\n      };\n      if (!email) {\n        sweetAlert('이메일을 입력해주세요.');\n      } else if (isEmailValid(email)) {\n        sweetAlert('이메일 형식을 맞춰주세요.');\n      } else if (!name) {\n        sweetAlert('이름을 입력해주세요.');\n      } else if (!password) {\n        sweetAlert('비밀번호를 입력해주세요.');\n      } else if (!repassword) {\n        sweetAlert('재비밀번호를 입력해주세요.');\n      } else {\n        const { data } = await axios.post('/user/signup', signupObject);\n        console.log(data);\n        console.log('aaa');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    setLoginValue({\n      ...LoginValue,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <>\n      <SignupAllWrap>\n        <div className=\"login-wrap\">\n          <form className=\"form_wrap\" onSubmit={handleSubmit}>\n            <h3>회원가입</h3>\n\n            <InputEmail>\n              <span>이메일 입력</span>\n              <input type=\"text\" placeholder=\"이메일 입력\" onChange={handleChange} name=\"email\" value={email} />\n            </InputEmail>\n\n            <InputName>\n              <span>이름 입력</span>\n              <input type=\"text\" placeholder=\"이름 입력\" name=\"name\" value={name} onChange={handleChange} />\n            </InputName>\n\n            <InputPassword>\n              <span>비밀번호 입력</span>\n              <span>(영문, 숫자, 특수문자 포함 8자리 이상)</span>\n              <input type=\"password\" placeholder=\"비밀번호\" onChange={handleChange} name=\"password\" value={password} />\n            </InputPassword>\n\n            <ReInputPassword>\n              <span>비밀번호 재확인</span>\n              <input type=\"password\" placeholder=\"비밀번호\" name=\"repassword\" value={repassword} onChange={handleChange} />\n            </ReInputPassword>\n\n            <LoginButton>\n              <button type=\"submit\">회원가입</button>\n            </LoginButton>\n          </form>\n          <SignupLine>\n            <span>또는</span>\n            <hr />\n          </SignupLine>\n\n          <Social />\n\n        </div>\n      </SignupAllWrap>\n    </>\n  );\n}\n\nexport default Signup;\n","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.reducer.js",["203"],"import breadShopTypes from './breadShop.types';\n\nconst INITAL_STATE = {\n  breadShopList: []\n};\n\nconst breadShopReducer = (state = INITAL_STATE, action) => {\n  switch (action.type) {\n    case breadShopTypes.SET_BREAD_SHOP_List: {\n      const { breadShop } = action.payload;\n      console.log(breadShop);\n      return {\n        ...state,\n        breadShopList: breadShop\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default breadShopReducer;\n","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.reducer.js",["204","205","206","207","208"],"import breadTypes from './bread.types';\n\nconst INITAL_STATE = {\n  breadList: [],\n  heartspace: false\n};\n\nconst breadListReducer = (state = INITAL_STATE, action) => {\n  console.log(action.payload);\n  switch (action.type) {\n    case breadTypes.BREAD_LIST_SET: {\n      const { bread } = action.payload;\n      console.log(bread);\n      console.log('뭐다냐?');\n      return {\n        ...state,\n        breadList: bread\n      };\n    }\n    case breadTypes.HEART_FILLED: {\n      const { filled } = action.payload;\n      console.log(filled);\n      console.log('어이고');\n\n      return {\n        ...state,\n        heartspace: filled\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default breadListReducer;\n","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content.jsx",["209","210","211","212","213"],"import React, { useEffect } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { errorhandler } from '../../../../utils/common';\n\nimport { selectShopList } from '../../../redux/breadshoplist/breadShop.selectors';\nimport { setCurrentBreadShop } from '../../../redux/breadshoplist/breadShop.actions';\n\nimport { selectBreadList } from '../../../redux/breadlist/bread.selectors';\nimport { setBreadRankingList, setHeartTrueData } from '../../../redux/breadlist/bread.actions';\n\nimport axios from '../../../../utils/axios';\nimport { Main, MainBackground, BreadShopRanking, BreaShopList } from './mainhome_content_style';\n\nconst MainHome = ({ breadShopList, onbreadShopList, breadList, onbreadList, onheartfilled }) => {\n  console.log(onheartfilled);\n  // const popularbread = async () => {\n  //   const { data } = await axios.get('/rank/bread');\n  //   console.log(data);\n  // };\n  // const [breadList, setBreadList] = useState([]);\n  // const [breadShopList, setBreadShopList] = useState([]);\n\n  useEffect(() => {\n    async function fetchBreadData() {\n      try {\n        const { status: breadStatus, data: breadData } = await axios.get('/rank/bread');\n        // setBreadList(breadData.list);\n        onbreadList(breadData.list);\n        console.log(breadStatus);\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    async function fetchBreadShopData() {\n      try {\n        const { status: breadShopStatus, data: breadShopData } = await axios.get('/rank/bread/shop');\n        console.log(breadShopStatus);\n        onbreadShopList(breadShopData.list);\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchBreadData();\n    fetchBreadShopData();\n  }, []);\n\n  console.log('메인');\n  return (\n    <Main>\n      <div className=\"breadShopWrap\">\n        <MainBackground>\n          <img src=\"\" alt=\"\" />\n        </MainBackground>\n\n        <BreadShopRanking>\n          <h1>빵집 랭킹</h1>\n          <div className=\"all_show\">\n            <span>모두보기</span>\n            <span className=\"triangle\" />\n          </div>\n        </BreadShopRanking>\n\n        <BreaShopList>\n          <ul className=\"list_wrap\">\n            {breadShopList.map((breadShopData) => (\n              <li key={breadShopData.id}>\n                <img src={breadShopData.image} alt={breadShopData.title} />\n                <dl>\n                  <dt>{breadShopData.address}</dt>\n                  <dd>{breadShopData.title}</dd>\n                </dl>\n              </li>\n            ))}\n          </ul>\n        </BreaShopList>\n      </div>\n\n      <div className=\"breadRankingWrap\">\n        <BreadShopRanking>\n          <h1>요즘 인기있는 빵 랭킹</h1>\n          <div className=\"all_show\">\n            <span>모두보기</span>\n            <span className=\"triangle\" />\n          </div>\n        </BreadShopRanking>\n\n        <BreaShopList>\n          <>\n            <ul className=\"list_wrap\">\n              {breadList.map((breadData) => (\n                <li key={breadData.id}>\n                  <img src={breadData.image} alt=\"\" />\n                  <dl>\n                    <dd>{breadData.title}</dd>\n                  </dl>\n                </li>\n              ))}\n            </ul>\n          </>\n        </BreaShopList>\n      </div>\n    </Main>\n\n  );\n};\n\nMainHome.propTypes = {\n  breadShopList: PropTypes.instanceOf(Array).isRequired,\n  onbreadShopList: PropTypes.func.isRequired,\n  breadList: PropTypes.instanceOf(Array).isRequired,\n  onbreadList: PropTypes.func.isRequired,\n  onheartfilled: PropTypes.func.isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadShopList: selectShopList,\n  breadList: selectBreadList\n});\n\nconst breadShopDispathchToProps = (dispatch) => ({\n  onbreadShopList: (breadShop) => dispatch(setCurrentBreadShop(breadShop)),\n  onbreadList: (bread) => dispatch(setBreadRankingList(bread)),\n  onheartfilled: (filled) => dispatch(setHeartTrueData(filled))\n\n});\n\nexport default connect(breadStateToProps, breadShopDispathchToProps)(MainHome);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/breadhouse_rangking.jsx",["214","215","216"],"import React, { useEffect } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport axios from '../../../../utils/axios';\nimport { errorhandler } from '../../../../utils/common';\n\nimport { selectShopList } from '../../../redux/breadshoplist/breadShop.selectors';\nimport { setCurrentBreadShop } from '../../../redux/breadshoplist/breadShop.actions';\n\n// eslint-disable-next-line object-curly-newline\nimport {\n  HouseRangkingWrap,\n  ShopRangking,\n  Location,\n  SelectWrap,\n  City,\n  CurrentLocation,\n  RangkingList\n  // eslint-disable-next-line object-curly-newline\n} from './breadhouse_rangking_style';\n\n// 하트 액션\nimport { setHeartTrueData } from '../../../redux/breadlist/bread.actions';\n\nconst HouseRangking = ({ breadShopList, onbreadShopList, onheartspace }) => {\n  useEffect(() => {\n    async function fetchShopData() {\n      try {\n        const { status, data: breadShopData } = await axios.get('/bread/shop');\n        console.log(status);\n        onbreadShopList(breadShopData.list);\n        onheartspace(breadShopData.like);\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchShopData();\n  }, []);\n\n  const changeHeart = () => {\n    alert('하투하투');\n  };\n\n  return (\n    <HouseRangkingWrap>\n      <ShopRangking>\n        <h1>빵집 랭킹</h1>\n      </ShopRangking>\n\n      <Location>\n        <SelectWrap>\n          <City>\n            <details className=\"custom-select\">\n              <summary className=\"radios\">\n                <input type=\"radio\" name=\"city\" id=\"default\" title=\"시.도\" checked />\n                <input type=\"radio\" name=\"city\" id=\"city1\" title=\"서울특별시\" />\n                <input type=\"radio\" name=\"city\" id=\"city2\" title=\"경기도\" />\n                <input type=\"radio\" name=\"city\" id=\"city3\" title=\"대전광역시\" />\n                <input type=\"radio\" name=\"city\" id=\"city4\" title=\"대구광역시\" />\n                <input type=\"radio\" name=\"city\" id=\"city5\" title=\"부산광역시\" />\n              </summary>\n              <ul className=\"list\">\n                <li>\n                  <label htmlFor=\"city1\">서울특별시</label>\n                </li>\n                <li>\n                  <label htmlFor=\"city2\">경기도</label>\n                </li>\n                <li>\n                  <label htmlFor=\"city3\">대전광역시</label>\n                </li>\n                <li>\n                  <label htmlFor=\"city4\">대구광역시</label>\n                </li>\n                <li>\n                  <label htmlFor=\"city5\">부산광역시</label>\n                </li>\n              </ul>\n            </details>\n          </City>\n\n          <City>\n            <details className=\"custom-select\">\n              <summary className=\"radios\">\n                <input type=\"radio\" name=\"dong\" id=\"default\" title=\"동\" checked />\n                <input type=\"radio\" name=\"dong\" id=\"dong1\" title=\"서교동\" />\n                <input type=\"radio\" name=\"dong\" id=\"dong2\" title=\"압구정동\" />\n                <input type=\"radio\" name=\"dong\" id=\"dong3\" title=\"신림동\" />\n                <input type=\"radio\" name=\"dong\" id=\"dong4\" title=\"창전동\" />\n                <input type=\"radio\" name=\"dong\" id=\"dong5\" title=\"성산동\" />\n              </summary>\n              <ul className=\"list\">\n                <li>\n                  <label htmlFor=\"dong1\">서교동</label>\n                </li>\n                <li>\n                  <label htmlFor=\"dong2\">압구정동</label>\n                </li>\n                <li>\n                  <label htmlFor=\"dong3\">신림동</label>\n                </li>\n                <li>\n                  <label htmlFor=\"dong4\">창전동</label>\n                </li>\n                <li>\n                  <label htmlFor=\"dong5\">성산동</label>\n                </li>\n              </ul>\n            </details>\n          </City>\n\n          <City>\n            <details className=\"custom-select\">\n              <summary className=\"radios\">\n                <input type=\"radio\" name=\"bread\" id=\"default\" title=\"빵 종류\" checked />\n                <input type=\"radio\" name=\"bread\" id=\"bread1\" title=\"소보루빵\" />\n                <input type=\"radio\" name=\"bread\" id=\"bread2\" title=\"식빵\" />\n                <input type=\"radio\" name=\"bread\" id=\"bread3\" title=\"단팥빵\" />\n                <input type=\"radio\" name=\"bread\" id=\"bread4\" title=\"바게트빵\" />\n                <input type=\"radio\" name=\"bread\" id=\"bread5\" title=\"샌드위치\" />\n              </summary>\n              <ul className=\"list\">\n                <li>\n                  <label htmlFor=\"bread1\">소보루빵</label>\n                </li>\n                <li>\n                  <label htmlFor=\"bread2\">식빵</label>\n                </li>\n                <li>\n                  <label htmlFor=\"bread3\">단팥빵</label>\n                </li>\n                <li>\n                  <label htmlFor=\"bread4\">바게트빵</label>\n                </li>\n                <li>\n                  <label htmlFor=\"bread5\">샌드위치</label>\n                </li>\n              </ul>\n            </details>\n          </City>\n        </SelectWrap>\n\n        <CurrentLocation>\n          <button type=\"button\">\n            <img\n              src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/search.png\"\n              alt=\"\"\n            />\n            <span>현재 위치로 설정</span>\n          </button>\n        </CurrentLocation>\n      </Location>\n\n      <RangkingList>\n        <ul className=\"list_wrap\">\n          {breadShopList.map((breadShopData) => (\n            <li\n              key={breadShopData.id}\n              style={{\n                outline: '1px solid red'\n              }}>\n              <img src={breadShopData.image} alt=\"\" />\n              {breadShopList ? (\n                <img\n                  src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/spaceheart.png\"\n                  alt=\"\"\n                  className=\"heart_image\"\n                  aria-hidden=\"true\"\n                  onClick={changeHeart}\n                  active\n                />\n              ) : (\n                <img\n                  src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/heart.png\"\n                  alt=\"\"\n                />\n              )}\n\n              <dl>\n                <dt>{breadShopData.title}</dt>\n                <dd />\n              </dl>\n            </li>\n          ))}\n        </ul>\n      </RangkingList>\n    </HouseRangkingWrap>\n  );\n};\n\nHouseRangking.propTypes = {\n  breadShopList: PropTypes.instanceOf(Array).isRequired,\n  onbreadShopList: PropTypes.func.isRequired,\n  onheartspace: PropTypes.bool.isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadShopList: selectShopList\n});\n\nconst breadShopDispathchToProps = (dispatch) => ({\n  onbreadShopList: (breadShop) => dispatch(setCurrentBreadShop(breadShop)),\n  onheartspace: (heart) => dispatch(setHeartTrueData(heart))\n});\n\nexport default connect(breadStateToProps, breadShopDispathchToProps)(HouseRangking);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/breadhouse_rangking_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/social.jsx",["217","218","219","220","221","222","223","224","225","226","227","228"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport KakaoLogin from 'react-kakao-login';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\n\nimport axios, { setAuthorization } from '../../utils/axios';\nimport { errorhandler } from '../../utils/common';\nimport { setCurrentUser } from '../redux/user/user.actions';\nimport { SosalLogin, GoogleWrap, FacebookWrap, KakaoWrap } from '../sign-in/signin_content_style';\n\n// 소셜 로그인\nconst kakaoToken = process.env.REACT_APP_KAKAO_KEY;\nconst facebookToken = process.env.REACT_APP_FACEBOOK_KEY;\nconst googleToken = process.env.REACT_APP_GOOGLE_KEY;\n\nconst Social = ({ onUserSet }) => {\n  // 카카오\n  const onSuccess = async (userData) => {\n    try {\n      const { access_token: accessToken } = userData.response;\n      console.log(accessToken);\n      console.log(userData.response);\n\n      const socialObject = {\n        token: accessToken,\n        type: 'kakao'\n      };\n\n      const { data } = await axios.post('/user/social/signup', socialObject);\n\n      // eslint-disable-next-line object-curly-newline\n      const {\n        data: { token }\n        // eslint-disable-next-line object-curly-newline\n      } = data;\n      console.log(token);\n      setAuthorization(token);\n\n      // 서버에서 누구인지 받아오는곳\n      const { data: getData } = await axios.get('/user/current');\n      console.log(getData);\n\n      console.log(getData.data);\n      onUserSet(getData.data, token);\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 구글\n  const responseGoogle = async (response) => {\n    try {\n      if (!response.error) {\n        const { accessToken: googleAccessToken } = response;\n        console.log(googleAccessToken);\n\n        const socialObject = {\n          token: googleAccessToken,\n          type: 'google'\n        };\n\n        const { data } = await axios.post('/user/social/signup', socialObject);\n\n        // eslint-disable-next-line object-curly-newline\n        const {\n          data: { token }\n          // eslint-disable-next-line object-curly-newline\n        } = data;\n        console.log(token);\n        setAuthorization(token);\n\n        // 서버에서 누구인지 받아오는곳\n        const { data: getData } = await axios.get('/user/current');\n        onUserSet(getData.data, token);\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 페이스북\n  const responseFacebook = async (response) => {\n    console.log(response);\n\n    try {\n      const { accessToken: facebookAccessToken } = response;\n      console.log(facebookAccessToken);\n\n      const socialObject = {\n        token: facebookAccessToken,\n        type: 'facebook'\n      };\n\n      const {\n        // eslint-disable-next-line object-curly-newline\n        data: {\n          data: { token }\n          // eslint-disable-next-line object-curly-newline\n        }\n      } = await axios.post('/user/social/signup', socialObject);\n      console.log(token);\n      setAuthorization(token);\n\n      // 서버에서 누구인지 받아오는곳\n      const { data: facebookData } = await axios.get('/user/current');\n      onUserSet(facebookData.data, token);\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  return (\n    <SosalLogin className=\"clearfix\">\n      <GoogleWrap>\n        <GoogleLogin\n          clientId={googleToken}\n          render={(renderProps) => (\n            <button onClick={renderProps.onClick} disabled={renderProps.disabled} type=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/google.png\"\n                alt=\"구글 로그인\"\n              />\n              <span>구글</span>\n            </button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy=\"single_host_origin\"\n        />\n      </GoogleWrap>\n\n      <FacebookWrap>\n        <FacebookLogin\n          appId={facebookToken}\n          callback={responseFacebook}\n          fields=\"name,email,picture\"\n          render={(renderProps) => (\n            <button onClick={renderProps.onClick} type=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/socalfacebook.png\"\n                alt=\"페이스북 로그인\"\n              />\n              <span>페이스북</span>\n            </button>\n          )}\n        />\n      </FacebookWrap>\n\n      <KakaoWrap>\n        <KakaoLogin\n          token={kakaoToken}\n          onSuccess={onSuccess}\n          onFail={console.error}\n          onLogout={console.info}\n          render={({ onClick }) => (\n            <div onClick={onClick} aria-hidden=\"true\" role=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/ico_kakaotalk.png\"\n                alt=\"카카오톡 로그인\"\n              />\n              <span>카카오톡</span>\n            </div>\n          )}\n        />\n      </KakaoWrap>\n    </SosalLogin>\n  );\n};\n\nSocial.propTypes = {\n  onUserSet: PropTypes.func.isRequired\n};\n\nconst userToPropsDispatch = (dispatch) => ({\n  onUserSet: (user, token) => dispatch(setCurrentUser(user, token))\n});\n\nexport default connect(null, userToPropsDispatch)(Social);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/popular/popular_component.jsx",["229","230","231"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport BreadLi from '../../../common-component/bread_li_component';\nimport { selectBreadList } from '../../../redux/breadlist/bread.selectors';\nimport { setBreadRankingList, setHeartTrueData } from '../../../redux/breadlist/bread.actions';\nimport axios from '../../../../utils/axios';\nimport { errorhandler } from '../../../../utils/common';\nimport { PopularBreadWrap, PopularWrap, BreadList } from './popular_style';\n\nconst PopularBread = ({ breadList, onBreadList, onHeartFilled }) => {\n  useEffect(() => {\n    async function fetchbreadData() {\n      try {\n        const { status, data: breadData } = await axios.get('/bread');\n        console.log(status);\n        onBreadList(breadData.list);\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchbreadData();\n  }, []);\n\n  return (\n    <PopularBreadWrap>\n\n      <PopularWrap>\n        <h1>요즘 인기있는 빵</h1>\n      </PopularWrap>\n\n      <BreadList>\n\n        <ul className=\"list_wrap\">\n          {breadList.map((breadData) => {\n            console.log(breadData);\n            return (\n              <BreadLi breadData={breadData} onHeartFilled={onHeartFilled} />\n            );\n          })}\n        </ul>\n\n      </BreadList>\n\n    </PopularBreadWrap>\n\n  );\n};\n\nPopularBread.propTypes = {\n  breadList: PropTypes.instanceOf(Array).isRequired,\n  onBreadList: PropTypes.func.isRequired,\n  onHeartFilled: PropTypes.func.isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadList: selectBreadList\n});\n\nconst breadDispathchToProps = (dispatch) => ({\n  onBreadList: (bread) => dispatch(setBreadRankingList(bread)),\n  onHeartFilled: (filled, heartId) => dispatch(setHeartTrueData(filled, heartId))\n});\n\nexport default connect(breadStateToProps, breadDispathchToProps)(PopularBread);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/popular/popular_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread.jsx",["232","233"],"import React, { useEffect } from 'react';\nimport Youtube from 'react-youtube';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n// import 'swiper/css/swiper.scss';\n\nimport axios from '../../../../utils/axios';\nimport { errorhandler } from '../../../../utils/common';\n\nimport { BreadPickWrap, YoutubePickEvent, PickBreadTitle, PickBreadImage, Aaa } from './youtube_bread_style';\n\nconst PickBread = () => {\n  useEffect(() => {\n    async function fetchyoutubeData() {\n      try {\n        const { status, data } = await axios.get('/admin/youtube');\n        console.log(status);\n        console.log(data);\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchyoutubeData();\n  }, []);\n  const opts = {\n    width: '300',\n    height: '300',\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  const onReady = (e) => {\n    e.target.pauseVideo();\n  };\n\n  return (\n    <BreadPickWrap>\n      <YoutubePickEvent />\n\n      <PickBreadTitle>\n        <span>유튜버들이 선택한 빵을 즐겨보세요</span>\n      </PickBreadTitle>\n\n      <Swiper\n        navigation\n        pagination={{\n          clickable: true\n        }}\n        scrollbar={{\n          draggable: true\n        }}\n      >\n\n        <Aaa>\n          <SwiperSlide>\n            <PickBreadImage>\n              <Youtube className=\"youtubeVideo\" videoId=\"2g811Eo7K8U\" opts={opts} onReady={onReady} />\n              <div className=\"pick_title\">\n                <span>Title</span>\n                <span>Description</span>\n                <button type=\"button\" className=\"show_button\">리뷰 보러가기</button>\n              </div>\n            </PickBreadImage>\n            <PickBreadImage>\n              <Youtube className=\"youtubeVideo\" videoId=\"2g811Eo7K8U\" opts={opts} onReady={onReady} />\n              <div className=\"pick_title\">\n                <span>Title</span>\n                <span>Description</span>\n                <button type=\"button\" className=\"show_button\">리뷰 보러가기</button>\n              </div>\n            </PickBreadImage>\n            <PickBreadImage>\n              <Youtube className=\"youtubeVideo\" videoId=\"2g811Eo7K8U\" opts={opts} onReady={onReady} />\n              <div className=\"pick_title\">\n                <span>Title</span>\n                <span>Description</span>\n                <button type=\"button\" className=\"show_button\">리뷰 보러가기</button>\n              </div>\n            </PickBreadImage>\n          </SwiperSlide>\n        </Aaa>\n\n      </Swiper>\n    </BreadPickWrap>\n  );\n};\n\nexport default PickBread;\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_component.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.reducer.js",["234"],"import UseTypes from './user.types';\n\nconst INITAL_STATE = {\n  currentUser: null,\n  token: ''\n};\n\nconst userReducer = (state = INITAL_STATE, action) => {\n  switch (action.type) {\n    case UseTypes.SET_CUTTENT_USER: {\n      const { user, token } = action.payload; // 액션에 넘어온 user, token\n      console.log('gaaa');\n      localStorage.setItem('userToken', token);\n\n      return {\n        ...state,\n        currentUser: user,\n        token\n\n      };\n    }\n    case UseTypes.SET_LOGOUT: {\n      localStorage.removeItem('userToken');\n      return {\n        ...state,\n        token: '',\n        currentUser: null\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n",{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":20,"column":3,"nodeType":"249","messageId":"250","endLine":20,"endColumn":14},{"ruleId":"247","severity":1,"message":"248","line":21,"column":3,"nodeType":"249","messageId":"250","endLine":21,"endColumn":14},{"ruleId":"247","severity":1,"message":"248","line":25,"column":5,"nodeType":"249","messageId":"250","endLine":25,"endColumn":16},{"ruleId":"247","severity":1,"message":"248","line":29,"column":5,"nodeType":"249","messageId":"250","endLine":29,"endColumn":16},{"ruleId":"251","severity":1,"message":"252","line":33,"column":6,"nodeType":"253","endLine":33,"endColumn":8,"suggestions":"254"},{"ruleId":"247","severity":1,"message":"248","line":60,"column":9,"nodeType":"249","messageId":"250","endLine":60,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":61,"column":9,"nodeType":"249","messageId":"250","endLine":61,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":64,"column":11,"nodeType":"249","messageId":"250","endLine":64,"endColumn":22},{"ruleId":"247","severity":1,"message":"248","line":28,"column":3,"nodeType":"249","messageId":"250","endLine":28,"endColumn":14},{"ruleId":"247","severity":1,"message":"248","line":29,"column":3,"nodeType":"249","messageId":"250","endLine":29,"endColumn":14},{"ruleId":"247","severity":1,"message":"248","line":5,"column":3,"nodeType":"249","messageId":"250","endLine":5,"endColumn":14},{"ruleId":"235","replacedBy":"255"},{"ruleId":"237","replacedBy":"256"},{"ruleId":"239","replacedBy":"257"},{"ruleId":"241","replacedBy":"258"},{"ruleId":"243","replacedBy":"259"},{"ruleId":"245","replacedBy":"260"},{"ruleId":"247","severity":1,"message":"248","line":11,"column":3,"nodeType":"249","messageId":"250","endLine":11,"endColumn":14},{"ruleId":"247","severity":1,"message":"248","line":16,"column":3,"nodeType":"249","messageId":"250","endLine":16,"endColumn":14},{"ruleId":"247","severity":1,"message":"248","line":22,"column":5,"nodeType":"249","messageId":"250","endLine":22,"endColumn":16},{"ruleId":"247","severity":1,"message":"248","line":43,"column":9,"nodeType":"249","messageId":"250","endLine":43,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":44,"column":9,"nodeType":"249","messageId":"250","endLine":44,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":11,"column":7,"nodeType":"249","messageId":"250","endLine":11,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":9,"column":3,"nodeType":"249","messageId":"250","endLine":9,"endColumn":14},{"ruleId":"247","severity":1,"message":"248","line":13,"column":7,"nodeType":"249","messageId":"250","endLine":13,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":14,"column":7,"nodeType":"249","messageId":"250","endLine":14,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":22,"column":7,"nodeType":"249","messageId":"250","endLine":22,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":23,"column":7,"nodeType":"249","messageId":"250","endLine":23,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":18,"column":3,"nodeType":"249","messageId":"250","endLine":18,"endColumn":14},{"ruleId":"247","severity":1,"message":"248","line":32,"column":9,"nodeType":"249","messageId":"250","endLine":32,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":40,"column":9,"nodeType":"249","messageId":"250","endLine":40,"endColumn":20},{"ruleId":"251","severity":1,"message":"261","line":48,"column":6,"nodeType":"253","endLine":48,"endColumn":8,"suggestions":"262"},{"ruleId":"247","severity":1,"message":"248","line":50,"column":3,"nodeType":"249","messageId":"250","endLine":50,"endColumn":14},{"ruleId":"247","severity":1,"message":"248","line":32,"column":9,"nodeType":"249","messageId":"250","endLine":32,"endColumn":20},{"ruleId":"251","severity":1,"message":"263","line":40,"column":6,"nodeType":"253","endLine":40,"endColumn":8,"suggestions":"264"},{"ruleId":"265","severity":1,"message":"266","line":43,"column":5,"nodeType":"267","messageId":"250","endLine":43,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":23,"column":7,"nodeType":"249","messageId":"250","endLine":23,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":24,"column":7,"nodeType":"249","messageId":"250","endLine":24,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":38,"column":7,"nodeType":"249","messageId":"250","endLine":38,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":43,"column":7,"nodeType":"249","messageId":"250","endLine":43,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":45,"column":7,"nodeType":"249","messageId":"250","endLine":45,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":57,"column":9,"nodeType":"249","messageId":"250","endLine":57,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":71,"column":9,"nodeType":"249","messageId":"250","endLine":71,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":85,"column":5,"nodeType":"249","messageId":"250","endLine":85,"endColumn":16},{"ruleId":"247","severity":1,"message":"248","line":89,"column":7,"nodeType":"249","messageId":"250","endLine":89,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":103,"column":7,"nodeType":"249","messageId":"250","endLine":103,"endColumn":18},{"ruleId":"247","severity":1,"message":"248","line":156,"column":19,"nodeType":"249","messageId":"250","endLine":156,"endColumn":32},{"ruleId":"247","severity":1,"message":"248","line":157,"column":21,"nodeType":"249","messageId":"250","endLine":157,"endColumn":33},{"ruleId":"247","severity":1,"message":"248","line":18,"column":9,"nodeType":"249","messageId":"250","endLine":18,"endColumn":20},{"ruleId":"251","severity":1,"message":"268","line":25,"column":6,"nodeType":"253","endLine":25,"endColumn":8,"suggestions":"269"},{"ruleId":"247","severity":1,"message":"248","line":38,"column":13,"nodeType":"249","messageId":"250","endLine":38,"endColumn":24},{"ruleId":"247","severity":1,"message":"248","line":16,"column":9,"nodeType":"249","messageId":"250","endLine":16,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":17,"column":9,"nodeType":"249","messageId":"250","endLine":17,"endColumn":20},{"ruleId":"247","severity":1,"message":"248","line":12,"column":7,"nodeType":"249","messageId":"250","endLine":12,"endColumn":18},"lines-around-directive",["270"],"no-spaced-func",["271"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["272"],["270"],["271"],[],[],[],[],"React Hook useEffect has missing dependencies: 'onbreadList' and 'onbreadShopList'. Either include them or remove the dependency array. If 'onbreadList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["273"],"React Hook useEffect has missing dependencies: 'onbreadShopList' and 'onheartspace'. Either include them or remove the dependency array. If 'onbreadShopList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["274"],"no-alert","Unexpected alert.","CallExpression","React Hook useEffect has a missing dependency: 'onBreadList'. Either include it or remove the dependency array. If 'onBreadList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["275"],"padding-line-between-statements","func-call-spacing",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},"Update the dependencies array to be: [history]",{"range":"284","text":"285"},"Update the dependencies array to be: [onbreadList, onbreadShopList]",{"range":"286","text":"287"},"Update the dependencies array to be: [onbreadShopList, onheartspace]",{"range":"288","text":"289"},"Update the dependencies array to be: [onBreadList]",{"range":"290","text":"291"},[936,938],"[history]",[1777,1779],"[onbreadList, onbreadShopList]",[1214,1216],"[onbreadShopList, onheartspace]",[957,959],"[onBreadList]"]