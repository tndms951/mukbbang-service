[{"/Users/songjisu/Desktop/bread_service/src/index.js":"1","/Users/songjisu/Desktop/bread_service/src/reportWebVitals.js":"2","/Users/songjisu/Desktop/bread_service/src/components/redux/store.js":"3","/Users/songjisu/Desktop/bread_service/src/App.jsx":"4","/Users/songjisu/Desktop/bread_service/src/components/redux/root-reducer.js":"5","/Users/songjisu/Desktop/bread_service/src/layout.js":"6","/Users/songjisu/Desktop/bread_service/src/utils/common.js":"7","/Users/songjisu/Desktop/bread_service/src/utils/axios.js":"8","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.actions.js":"9","/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content.jsx":"10","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content.jsx":"11","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content.jsx":"12","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread.jsx":"13","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.reducer.js":"14","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.types.js":"15","/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer.jsx":"16","/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header.jsx":"17","/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content_style.jsx":"18","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content_style.jsx":"19","/Users/songjisu/Desktop/bread_service/src/components/common-component/social.jsx":"20","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content_style.jsx":"21","/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_component.jsx":"22","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread_style.jsx":"23","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.selectors.js":"24","/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer_style.jsx":"25","/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header_style.jsx":"26","/Users/songjisu/Desktop/bread_service/src/components/common-component/breadShop_li_component.jsx":"27","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/bread-shop-reducer.js":"28","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.reducer.js":"29","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.types.js":"30","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.selectors.js":"31","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.actions.js":"32","/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.reducer.js":"33","/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.types.js":"34","/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.actions.js":"35","/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.selectors.js":"36","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_rangking.jsx":"37","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_rangking_style.jsx":"38","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.reducer.js":"39","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.types.js":"40","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.selectors.js":"41","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.actions.js":"42","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_router.jsx":"43","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/detail/breadShop_detail.jsx":"44","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/detail/breadShop_detail_style.jsx":"45","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.reducer.js":"46","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.types.js":"47","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.selectors.js":"48","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.actions.js":"49","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/comment.jsx":"50","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/comment_style.jsx":"51","/Users/songjisu/Desktop/bread_service/src/components/common-component/review/review.jsx":"52","/Users/songjisu/Desktop/bread_service/src/components/common-component/review/review_style.jsx":"53","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/second-recomment/second_recomment.jsx":"54","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/second-recomment/second_recomment_style.jsx":"55","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/first-commend/first_commend_style.jsx":"56","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/first-commend/first_commend.jsx":"57","/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_style.jsx":"58","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/bread_router.jsx":"59","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/detail/bread_detail.jsx":"60","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/detail/bread_detail_style.jsx":"61","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/bread_popular.jsx":"62","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/bread_popular_style.jsx":"63","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/list/bread.selectors.js":"64","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/list/bread.actions.js":"65","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/list/bread.types.js":"66","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/list/bread.reducer.js":"67","/Users/songjisu/Desktop/bread_service/src/components/redux/comment/bread_breadShopComment.reducer.js":"68","/Users/songjisu/Desktop/bread_service/src/components/redux/comment/bread_breadShopComment.types.js":"69","/Users/songjisu/Desktop/bread_service/src/components/redux/comment/bread_breadShopComment.selectors.js":"70","/Users/songjisu/Desktop/bread_service/src/components/redux/comment/bread_breadShopComment.actions.js":"71","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/bread-reducer.js":"72","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/detail/breadDetail.reducer.js":"73","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/detail/breadDetail.types.js":"74","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/detail/breadDetail.selectors.js":"75","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/detail/breadDetail.actions.js":"76","/Users/songjisu/Desktop/bread_service/src/components/redux/youtube/youtube.reducer.js":"77","/Users/songjisu/Desktop/bread_service/src/components/redux/youtube/youtube.types.js":"78","/Users/songjisu/Desktop/bread_service/src/components/redux/youtube/youtube.selectors.js":"79","/Users/songjisu/Desktop/bread_service/src/components/redux/youtube/youtube.actions.js":"80","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/notice/notice.jsx":"81","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/notice/notice_style.jsx":"82","/Users/songjisu/Desktop/bread_service/src/styles/theme.js":"83","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/community.jsx":"84","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/event/event.jsx":"85","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/community_style.jsx":"86","/Users/songjisu/Desktop/bread_service/src/components/redux/community/community.reducer.js":"87","/Users/songjisu/Desktop/bread_service/src/components/redux/community/community.types.js":"88","/Users/songjisu/Desktop/bread_service/src/components/redux/community/community.actions.js":"89","/Users/songjisu/Desktop/bread_service/src/components/redux/community/community.selectors.js":"90","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/event/event_style.jsx":"91","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/notice/notice_downPage.jsx":"92","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/notice/notice_downPage_style.jsx":"93","/Users/songjisu/Desktop/bread_service/src/components/common-component/breadShop_li_style.jsx":"94","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/my-picck/pick_bread_breadShop.jsx":"95","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/my-picck/pick_bread_breadShop_style.jsx":"96","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/my-picck/pick-breadShop/pick_breadShop.jsx":"97","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/my-picck/pick-bread/pick_bread.jsx":"98","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/my-picck/pick-breadShop/pick_breadShop_style.jsx":"99","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/my-picck/pick-bread/pick_bread_style.jsx":"100","/Users/songjisu/Desktop/bread_service/src/components/common-component/loading/loading.jsx":"101","/Users/songjisu/Desktop/bread_service/src/components/common-component/loadingHOC.jsx":"102"},{"size":822,"mtime":1621844041007,"results":"103","hashOfConfig":"104"},{"size":364,"mtime":1612334723393,"results":"105","hashOfConfig":"104"},{"size":382,"mtime":1616310023501,"results":"106","hashOfConfig":"104"},{"size":2427,"mtime":1624003721389,"results":"107","hashOfConfig":"104"},{"size":634,"mtime":1623915045744,"results":"108","hashOfConfig":"104"},{"size":446,"mtime":1624267771435,"results":"109","hashOfConfig":"104"},{"size":1016,"mtime":1618990775795,"results":"110","hashOfConfig":"104"},{"size":403,"mtime":1624083320769,"results":"111","hashOfConfig":"104"},{"size":264,"mtime":1621053723018,"results":"112","hashOfConfig":"104"},{"size":3428,"mtime":1624441647200,"results":"113","hashOfConfig":"104"},{"size":3916,"mtime":1621326983895,"results":"114","hashOfConfig":"104"},{"size":5697,"mtime":1624683071453,"results":"115","hashOfConfig":"104"},{"size":6048,"mtime":1624683737465,"results":"116","hashOfConfig":"104"},{"size":768,"mtime":1624440358247,"results":"117","hashOfConfig":"104"},{"size":118,"mtime":1616310023501,"results":"118","hashOfConfig":"104"},{"size":1671,"mtime":1623315795720,"results":"119","hashOfConfig":"104"},{"size":7881,"mtime":1624516187753,"results":"120","hashOfConfig":"104"},{"size":4628,"mtime":1623915045760,"results":"121","hashOfConfig":"104"},{"size":4002,"mtime":1623915045761,"results":"122","hashOfConfig":"104"},{"size":5314,"mtime":1623915045737,"results":"123","hashOfConfig":"104"},{"size":5222,"mtime":1623915045753,"results":"124","hashOfConfig":"104"},{"size":2657,"mtime":1623915045731,"results":"125","hashOfConfig":"104"},{"size":4005,"mtime":1624339337898,"results":"126","hashOfConfig":"104"},{"size":178,"mtime":1616310023501,"results":"127","hashOfConfig":"104"},{"size":1727,"mtime":1623315795721,"results":"128","hashOfConfig":"104"},{"size":5999,"mtime":1623940666071,"results":"129","hashOfConfig":"104"},{"size":2706,"mtime":1623915045730,"results":"130","hashOfConfig":"104"},{"size":373,"mtime":1621326983877,"results":"131","hashOfConfig":"104"},{"size":1982,"mtime":1623915045739,"results":"132","hashOfConfig":"104"},{"size":363,"mtime":1623915045739,"results":"133","hashOfConfig":"104"},{"size":423,"mtime":1620744509236,"results":"134","hashOfConfig":"104"},{"size":1003,"mtime":1623915045738,"results":"135","hashOfConfig":"104"},{"size":461,"mtime":1623825381151,"results":"136","hashOfConfig":"104"},{"size":111,"mtime":1623825385071,"results":"137","hashOfConfig":"104"},{"size":162,"mtime":1618229030950,"results":"138","hashOfConfig":"104"},{"size":189,"mtime":1618229030952,"results":"139","hashOfConfig":"104"},{"size":11777,"mtime":1624682586713,"results":"140","hashOfConfig":"104"},{"size":5620,"mtime":1624380032906,"results":"141","hashOfConfig":"104"},{"size":1184,"mtime":1621326983878,"results":"142","hashOfConfig":"104"},{"size":311,"mtime":1620744509233,"results":"143","hashOfConfig":"104"},{"size":736,"mtime":1620744509233,"results":"144","hashOfConfig":"104"},{"size":477,"mtime":1621242856890,"results":"145","hashOfConfig":"104"},{"size":548,"mtime":1623847202304,"results":"146","hashOfConfig":"104"},{"size":6384,"mtime":1624277961808,"results":"147","hashOfConfig":"104"},{"size":4552,"mtime":1624275499598,"results":"148","hashOfConfig":"104"},{"size":1498,"mtime":1621326983879,"results":"149","hashOfConfig":"104"},{"size":269,"mtime":1620744509243,"results":"150","hashOfConfig":"104"},{"size":220,"mtime":1620744509242,"results":"151","hashOfConfig":"104"},{"size":616,"mtime":1620744509238,"results":"152","hashOfConfig":"104"},{"size":6444,"mtime":1623915045732,"results":"153","hashOfConfig":"104"},{"size":1203,"mtime":1623315795709,"results":"154","hashOfConfig":"104"},{"size":10472,"mtime":1623915045735,"results":"155","hashOfConfig":"104"},{"size":9117,"mtime":1623915045736,"results":"156","hashOfConfig":"104"},{"size":4899,"mtime":1621326983865,"results":"157","hashOfConfig":"104"},{"size":1368,"mtime":1623915045735,"results":"158","hashOfConfig":"104"},{"size":2401,"mtime":1623915045733,"results":"159","hashOfConfig":"104"},{"size":6892,"mtime":1621326983860,"results":"160","hashOfConfig":"104"},{"size":1348,"mtime":1623315795709,"results":"161","hashOfConfig":"104"},{"size":523,"mtime":1621844041003,"results":"162","hashOfConfig":"104"},{"size":4355,"mtime":1624278926546,"results":"163","hashOfConfig":"104"},{"size":1958,"mtime":1624279007780,"results":"164","hashOfConfig":"104"},{"size":3872,"mtime":1624341770204,"results":"165","hashOfConfig":"104"},{"size":1162,"mtime":1624341951263,"results":"166","hashOfConfig":"104"},{"size":184,"mtime":1621326983875,"results":"167","hashOfConfig":"104"},{"size":711,"mtime":1623934656611,"results":"168","hashOfConfig":"104"},{"size":241,"mtime":1623938735317,"results":"169","hashOfConfig":"104"},{"size":1379,"mtime":1623915045738,"results":"170","hashOfConfig":"104"},{"size":4434,"mtime":1621326983881,"results":"171","hashOfConfig":"104"},{"size":706,"mtime":1621326983883,"results":"172","hashOfConfig":"104"},{"size":383,"mtime":1621326983883,"results":"173","hashOfConfig":"104"},{"size":1594,"mtime":1621326983880,"results":"174","hashOfConfig":"104"},{"size":259,"mtime":1621326983867,"results":"175","hashOfConfig":"104"},{"size":979,"mtime":1621326983870,"results":"176","hashOfConfig":"104"},{"size":297,"mtime":1621326983872,"results":"177","hashOfConfig":"104"},{"size":312,"mtime":1621326983871,"results":"178","hashOfConfig":"104"},{"size":453,"mtime":1621326983869,"results":"179","hashOfConfig":"104"},{"size":642,"mtime":1621580596658,"results":"180","hashOfConfig":"104"},{"size":147,"mtime":1621580596662,"results":"181","hashOfConfig":"104"},{"size":187,"mtime":1621580596660,"results":"182","hashOfConfig":"104"},{"size":282,"mtime":1621580596658,"results":"183","hashOfConfig":"104"},{"size":3655,"mtime":1624379663909,"results":"184","hashOfConfig":"104"},{"size":2069,"mtime":1624380039827,"results":"185","hashOfConfig":"104"},{"size":260,"mtime":1622464059794,"results":"186","hashOfConfig":"104"},{"size":1869,"mtime":1624339148215,"results":"187","hashOfConfig":"104"},{"size":3450,"mtime":1624371945622,"results":"188","hashOfConfig":"104"},{"size":1001,"mtime":1623915045750,"results":"189","hashOfConfig":"104"},{"size":1025,"mtime":1623915045740,"results":"190","hashOfConfig":"104"},{"size":232,"mtime":1622469084338,"results":"191","hashOfConfig":"104"},{"size":515,"mtime":1623661381103,"results":"192","hashOfConfig":"104"},{"size":288,"mtime":1623915045740,"results":"193","hashOfConfig":"104"},{"size":1867,"mtime":1624380079369,"results":"194","hashOfConfig":"104"},{"size":441,"mtime":1622469084355,"results":"195","hashOfConfig":"104"},{"size":163,"mtime":1622469084356,"results":"196","hashOfConfig":"104"},{"size":1132,"mtime":1623160930051,"results":"197","hashOfConfig":"104"},{"size":1186,"mtime":1624002812521,"results":"198","hashOfConfig":"104"},{"size":996,"mtime":1623915045757,"results":"199","hashOfConfig":"104"},{"size":4338,"mtime":1624160079400,"results":"200","hashOfConfig":"104"},{"size":3866,"mtime":1624267104402,"results":"201","hashOfConfig":"104"},{"size":1173,"mtime":1623915045756,"results":"202","hashOfConfig":"104"},{"size":774,"mtime":1623918360640,"results":"203","hashOfConfig":"104"},{"size":1080,"mtime":1624341506180,"results":"204","hashOfConfig":"104"},{"size":768,"mtime":1624378833707,"results":"205","hashOfConfig":"104"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},"2613yk",{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"208"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"208"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"208"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"208"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"208"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"280"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"283"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"283"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"208"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"208"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"208"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"208"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"208"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"208"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"208"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"208"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"208"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"208"},"/Users/songjisu/Desktop/bread_service/src/index.js",[],["427","428","429","430","431","432"],"/Users/songjisu/Desktop/bread_service/src/reportWebVitals.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/store.js",[],"/Users/songjisu/Desktop/bread_service/src/App.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/root-reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/layout.js",[],"/Users/songjisu/Desktop/bread_service/src/utils/common.js",[],"/Users/songjisu/Desktop/bread_service/src/utils/axios.js",["433"],"import axios from 'axios';\n\n// 절대 경로로 지정하는 것\nconst instance = axios.create({\n  baseURL: 'https://api.mercuryeunoia.com'\n});\n\nexport const setAuthorization = (token) => {\n  instance.defaults.headers.common.Authorization = token;\n  console.log(token);\n};\n\nexport const setAuthorizationReset = () => {\n  instance.defaults.headers.common.Authorization = '';\n};\n\nexport default instance;\n","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content.jsx",["434"],"import React, { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport qs from 'qs';\nimport { Link } from 'react-router-dom';\n\nimport { setCurrentUser } from '../redux/user/user.actions';\nimport { sweetAlert, isEmailValid, errorhandler } from '../../utils/common';\nimport axios, { setAuthorization } from '../../utils/axios';\n\nimport { SigninAllWrap, InputEmail, InputPassword, LoginButton, SigninLine, SigninUp } from './signin_content_style';\nimport Social from '../common-component/social';\n\nfunction Signin({ onUserSet, history, location }) {\n  const [LoginValue, setLoginValue] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = LoginValue;\n\n  useEffect(() => {\n    const bringUserToken = localStorage.getItem('userToken');\n    if (bringUserToken) {\n      history.replace('/');\n    }\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const signinObject = {\n        email,\n        password\n      };\n\n      if (!email) {\n        sweetAlert('이메일을 입력해주세요.');\n      } else if (isEmailValid(email)) {\n        sweetAlert('이메일 형식을 맞춰주세요.');\n      } else if (!password) {\n        sweetAlert('비밀번호를 입력해주세요.');\n      } else {\n        const { status, data } = await axios.post('/user/signin', signinObject);\n        if (status === 200) {\n          const {\n            data: { token }\n          } = data;\n          setAuthorization(token);\n\n          const { status: signinStatus, data: getData } = await axios.get('/user/current');\n          if (signinStatus === 200) {\n            onUserSet(getData.data, token);\n            const query = qs.parse(location.search, {\n              ignoreQueryPrefix: true\n            });\n\n            history.push(query?.moveAddress || '/');\n          }\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    setLoginValue({\n      ...LoginValue,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <SigninAllWrap>\n      <div className=\"login-wrap\">\n        <form className=\"form_wrap\" onSubmit={handleSubmit}>\n          <h3>로그인</h3>\n\n          <InputEmail>\n            <span>이메일</span>\n            <input type=\"text\" placeholder=\"이메일 입력\" onChange={handleChange} name=\"email\" value={email} />\n          </InputEmail>\n\n          <InputPassword>\n            <span>비밀번호</span>\n            <input type=\"password\" placeholder=\"비밀번호 입력\" onChange={handleChange} name=\"password\" value={password} />\n          </InputPassword>\n\n          <LoginButton>\n            <button type=\"submit\">로그인</button>\n          </LoginButton>\n          <SigninUp>\n            <Link to={`/signup${location.search}`}>\n              <span>회원가입</span>\n            </Link>\n          </SigninUp>\n        </form>\n        <SigninLine>\n          <span>또는</span>\n          <hr />\n        </SigninLine>\n\n        <Social />\n      </div>\n    </SigninAllWrap>\n  );\n}\n\nSignin.propTypes = {\n  onUserSet: PropTypes.func.isRequired,\n  history: PropTypes.instanceOf(Object).isRequired,\n  location: PropTypes.instanceOf(Object).isRequired\n};\n\nconst userToPropsDispatch = (dispatch) => ({\n  onUserSet: (user, token) => dispatch(setCurrentUser(user, token))\n});\n\nexport default connect(null, userToPropsDispatch)(Signin);\n","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content.jsx",["435"],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread.jsx",["436"],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header.jsx",["437"],"/* eslint-disable jsx-a11y/alt-text */\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStore, faBreadSlice, faCalendar, faUser } from '@fortawesome/free-solid-svg-icons';\nimport { faYoutube } from '@fortawesome/free-brands-svg-icons';\nimport qs from 'qs';\n\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\nimport { setLogout } from '../../redux/user/user.actions';\n\nimport { HeaderWrap, BookMark, LeftBookMark, RightLogin, MyProfile, GroupNav, NaveSearch } from './header_style';\n\n/**\n * @author 송지수\n * @email tndms951@naver.com\n * @create date 2021-03-21 15:42:55\n * @modify date 2021-03-21 15:42:55\n * @desc [header컴포넌트]\n */\n\nconst Header = ({ currentUser, onLogout }) => {\n  console.log(currentUser);\n  const location = useLocation(); // 라우터가 없을때 라이브러리로 가져와서 사용하는것\n  const history = useHistory(); // 라우터가 없을때 라이브러리로 가져와서 사용하는것\n\n  const [myProfileBox, setMyProfileBox] = useState(false);\n  const [search, setSearch] = useState(false);\n\n  // 검색조회\n  const [title, setTitle] = useState('');\n\n  useEffect(() => {\n    const query = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    });\n\n    setTitle(query.title ? String(query.title) : '');\n  }, [location.search]);\n\n  const handleChange = (e) => {\n    setTitle(e.target.value);\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    const queryObject = {};\n\n    if (title) {\n      queryObject.title = title;\n    }\n    const queryData = qs.stringify(queryObject);\n    history.push(`/bread-house${queryData ? `?${queryData}` : ''}`);\n  };\n\n  // 돋보기 클릭\n  const handleClick = () => {\n    setSearch(!search);\n  };\n\n  return (\n    <>\n      <HeaderWrap>\n        <BookMark>\n          <div className=\"bookmarkWrap clearfix\">\n            <LeftBookMark>\n              <span>즐겨찾기</span>\n              <span>입점신청</span>\n              <span>\n                <img src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/Vector+1.png\" alt=\"아래화살표\" />\n              </span>\n            </LeftBookMark>\n            <RightLogin>\n              {currentUser ? (\n                <div\n                  className=\"login_after\"\n                  onClick={() => {\n                    setMyProfileBox(!myProfileBox);\n                  }}\n                  aria-hidden=\"true\">\n                  <span className=\"userName\">{currentUser.name}</span>\n                  <span className=\"userimage\">\n                    <img src={currentUser.imageUrl} alt={`${currentUser.name}의 이미지`} />\n                  </span>\n                  {myProfileBox ? (\n                    <MyProfile>\n                      <Link to=\"/pick-bread-breadShop?menu=breadShop\">\n                        <span>내가 찜한 빵/빵집</span>\n                      </Link>\n                      <span>내 정보 수정</span>\n                      <span onClick={onLogout} aria-hidden=\"true\">\n                        로그아웃\n                      </span>\n                    </MyProfile>\n                  ) : null}\n                </div>\n              ) : (\n                <div className=\"login_wrap\">\n                  <Link to=\"/signin\">\n                    <span className=\"login\">로그인</span>\n                  </Link>\n\n                  <Link to=\"/signup\">\n                    <span className=\"signUp\">회원가입</span>\n                  </Link>\n                </div>\n              )}\n            </RightLogin>\n          </div>\n        </BookMark>\n        <GroupNav className=\"clearfix\">\n          <Link to=\"/\">\n            <h1>\n              <img src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/Meokppang.png\" alt=\"먹방로그\" />\n            </h1>\n          </Link>\n          <ul className=\"webSize\">\n            <Link to=\"/bread-house\">\n              <li className={location.pathname === '/bread-house' || location.pathname.indexOf('/bread-house/detail/') !== -1 ? 'clickMenu' : ''}>빵집 랭킹</li>\n            </Link>\n            <Link to=\"/bread\">\n              <li className={location.pathname === '/bread' || location.pathname.indexOf('/bread/detail/') !== -1 ? 'clickMenu' : ''}>요즘 인기있는 빵</li>\n            </Link>\n            <Link to=\"/youtube-bread\">\n              <li className={location.pathname === '/youtube-bread' ? 'clickMenu' : ''}>유튜버 픽빵</li>\n            </Link>\n            <Link to=\"/community?menu=notice\">\n              <li className={location.pathname === '/community' ? 'clickMenu' : ''}>커뮤니티</li>\n            </Link>\n          </ul>\n\n          {/* 모바일 */}\n          <div className=\"mobileBoxWrap\">\n            <ul className=\"mobileSize\">\n              <li className={location.pathname === '/bread-house' || location.pathname.indexOf('/bread-house/detail/') !== -1 ? 'clickIcons' : ''}>\n                <Link to=\"/bread-house\">\n                  <FontAwesomeIcon icon={faStore} className=\"icons\" />\n                  <span>빵집 랭킹</span>\n                </Link>\n              </li>\n              <li className={location.pathname === '/bread' || location.pathname.indexOf('/bread/detail/') !== -1 ? 'clickIcons' : ''}>\n                <Link to=\"/bread\">\n                  <FontAwesomeIcon icon={faBreadSlice} className=\"icons\" />\n                  <span>인기있는 빵</span>\n                </Link>\n              </li>\n              <li className={location.pathname === '/youtube-bread' ? 'clickIcons' : ''}>\n                <Link to=\"/youtube-bread\">\n                  <FontAwesomeIcon icon={faYoutube} className=\"icons\" />\n                  <span>유튜버 픽빵</span>\n                </Link>\n              </li>\n              <li className={location.pathname === '/community' ? 'clickIcons' : ''}>\n                <Link to=\"/community?menu=notice\">\n                  <FontAwesomeIcon icon={faCalendar} className=\"icons\" />\n                  <span>커뮤니티</span>\n                </Link>\n              </li>\n              <li className={location.pathname === '/login' ? 'clickIcons' : ''}>\n                <Link to=\"/login\">\n                  <FontAwesomeIcon icon={faUser} className=\"icons\" />\n                  <span>내정보</span>\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          <NaveSearch>\n            <div className=\"headerSearch\" onClick={handleClick} aria-hidden=\"true\" role=\"button\">\n              <span />\n            </div>\n            <form onSubmit={handleSearch}>\n              <input type=\"text\" placeholder=\"빵집을 찾아보세요.\" value={title} onChange={handleChange} />\n            </form>\n          </NaveSearch>\n\n          {/* 모바일 검색 */}\n          <div className=\"mobile_search\">\n            {search ? (\n              <>\n                <form onSubmit={handleSearch}>\n                  <input type=\"text\" placeholder=\"빵집을 찾아보세요.\" value={title} onChange={handleChange} />\n                </form>\n              </>\n            ) : (\n              ''\n            )}\n          </div>\n        </GroupNav>\n      </HeaderWrap>\n    </>\n  );\n};\n\nHeader.defaultProps = {\n  currentUser: null\n};\n\nHeader.propTypes = {\n  currentUser: PropTypes.instanceOf(Object),\n  onLogout: PropTypes.func.isRequired\n};\n\nconst userProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst logoutToPropsDispatch = (dispatch) => ({\n  onLogout: () => dispatch(setLogout())\n});\n\nexport default connect(userProps, logoutToPropsDispatch)(Header);\n","/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/social.jsx",["438","439"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport KakaoLogin from 'react-kakao-login';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\n\nimport axios, { setAuthorization } from '../../utils/axios';\nimport { errorhandler } from '../../utils/common';\nimport { setCurrentUser } from '../redux/user/user.actions';\nimport { SosalLogin, GoogleWrap, FacebookWrap, KakaoWrap } from '../sign-in/signin_content_style';\n\n// 소셜 로그인\nconst kakaoToken = process.env.REACT_APP_KAKAO_KEY;\nconst facebookToken = process.env.REACT_APP_FACEBOOK_KEY;\nconst googleToken = process.env.REACT_APP_GOOGLE_KEY;\n\nconst Social = ({ onUserSet, history }) => {\n  // 카카오\n  const onSuccess = async (userData) => {\n    try {\n      const { access_token: accessToken } = userData.response;\n\n      const socialObject = {\n        token: accessToken,\n        type: 'kakao'\n      };\n\n      const { data } = await axios.post('/user/social/signup', socialObject);\n\n      const {\n        data: { token }\n      } = data;\n\n      setAuthorization(token);\n\n      // 서버에서 누구인지 받아오는곳\n      const { status, data: getData } = await axios.get('/user/current');\n      if (status === 201) {\n        onUserSet(getData.data, token);\n        history.push('/');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 구글\n  const responseGoogle = async (response) => {\n    try {\n      if (!response.error) {\n        const { accessToken: googleAccessToken } = response;\n\n        const socialObject = {\n          token: googleAccessToken,\n          type: 'google'\n        };\n\n        const { data } = await axios.post('/user/social/signup', socialObject);\n\n        const {\n          data: { token }\n        } = data;\n\n        setAuthorization(token);\n\n        // 서버에서 누구인지 받아오는곳\n        const { status, data: getData } = await axios.get('/user/current');\n        if (status === 201) {\n          onUserSet(getData.data, token);\n          history.push('/');\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 페이스북\n  const responseFacebook = async (response) => {\n    try {\n      const { accessToken: facebookAccessToken } = response;\n\n      const socialObject = {\n        token: facebookAccessToken,\n        type: 'facebook'\n      };\n\n      const {\n        data: {\n          data: { token }\n        }\n      } = await axios.post('/user/social/signup', socialObject);\n\n      setAuthorization(token);\n\n      // 서버에서 누구인지 받아오는곳\n      const { status, data: facebookData } = await axios.get('/user/current');\n      if (status === 201) {\n        onUserSet(facebookData.data, token);\n        history.push('/');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  return (\n    <SosalLogin>\n      <div className=\"socal_wrap\">\n        <GoogleWrap>\n          <GoogleLogin\n            clientId={googleToken}\n            render={(renderProps) => (\n              <div className=\"google_wrap\" onClick={renderProps.onClick} aria-hidden>\n                <button disabled={renderProps.disabled} type=\"button\">\n                  <img src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/google.png\" alt=\"구글 로그인\" />\n                </button>\n                <span>구글</span>\n              </div>\n            )}\n            buttonText=\"Login\"\n            onSuccess={responseGoogle}\n            onFailure={responseGoogle}\n            cookiePolicy=\"single_host_origin\"\n          />\n        </GoogleWrap>\n\n        <FacebookWrap>\n          <FacebookLogin\n            appId={facebookToken}\n            callback={responseFacebook}\n            fields=\"name,email,picture\"\n            render={(renderProps) => (\n              <div className=\"facebook_wrap\" onClick={renderProps.onClick} aria-hidden>\n                <button type=\"button\">\n                  <img src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/socalfacebook.png\" alt=\"페이스북 로그인\" />\n                </button>\n                <span>페이스북</span>\n              </div>\n            )}\n          />\n        </FacebookWrap>\n\n        <KakaoWrap>\n          <KakaoLogin\n            token={kakaoToken}\n            onSuccess={onSuccess}\n            onFail={console.error}\n            onLogout={console.info}\n            render={({ onClick }) => (\n              <div className=\"kakao_wrap\" onClick={onClick} aria-hidden=\"true\" role=\"button\">\n                <button type=\"button\">\n                  <img src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/ico_kakaotalk.png\" alt=\"카카오톡 로그인\" />\n                </button>\n                <span>카카오톡</span>\n              </div>\n            )}\n          />\n        </KakaoWrap>\n      </div>\n    </SosalLogin>\n  );\n};\n\nSocial.propTypes = {\n  onUserSet: PropTypes.func.isRequired,\n  history: PropTypes.instanceOf(Object).isRequired\n};\n\nconst userToPropsDispatch = (dispatch) => ({\n  onUserSet: (user, token) => dispatch(setCurrentUser(user, token))\n});\n\nexport default connect(null, userToPropsDispatch)(Social);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_component.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/breadShop_li_component.jsx",["440"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport { ShopliWrap } from './breadShop_li_style';\nimport axios from '../../utils/axios';\nimport { errorhandler } from '../../utils/common';\nimport { selectCurrentUser } from '../redux/user/user.selectors';\n\nconst BreadShopLi = ({ shopList, shopSeverLike, likeTrue, likeFalse, shopId, currentUser, location, history }) => {\n  const changeShopHeart = async () => {\n    if (!currentUser) {\n      const comeAddress = encodeURIComponent(location.pathname + location.search);\n      history.push(`/signin?moveAddress=${comeAddress}`);\n    } else {\n      try {\n        if (shopSeverLike) {\n          const { status } = await axios.delete(`/bread/shop/favorite/${shopId}`);\n          if (status === 200) {\n            likeFalse(shopId);\n          }\n        } else {\n          const { status: shopStatus } = await axios.post(`/bread/shop/favorite/${shopId}`);\n          if (shopStatus === 200) {\n            likeTrue(shopId);\n          }\n        }\n      } catch (err) {\n        errorhandler(err);\n        console.log(err);\n      }\n    }\n  };\n\n  return (\n    <ShopliWrap>\n      <Link to={`/bread-house/detail/${shopId}`}>\n        <div className=\"image_wrap\">\n          <img src={shopList.image} alt={`${shopList.title}의 이미지`} />\n        </div>\n        <dl>\n          {shopId ? <dt>{shopList.address}</dt> : null}\n          <dd>{shopList.title}</dd>\n        </dl>\n      </Link>\n\n      {shopId ? (\n        <img\n          src={shopSeverLike ? 'https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/heart.png' : 'https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/spaceheart.png'}\n          alt=\"하트 이미지\"\n          className=\"heart_image\"\n          aria-hidden=\"true\"\n          onClick={changeShopHeart}\n        />\n      ) : null}\n    </ShopliWrap>\n  );\n};\n\nBreadShopLi.defaultProps = {\n  shopSeverLike: undefined,\n  likeTrue: undefined,\n  likeFalse: undefined,\n  currentUser: null,\n  history: undefined,\n  location: undefined\n};\n\nBreadShopLi.propTypes = {\n  shopList: PropTypes.instanceOf(Object).isRequired,\n  shopSeverLike: PropTypes.bool,\n  likeTrue: PropTypes.func,\n  likeFalse: PropTypes.func,\n  shopId: PropTypes.number.isRequired,\n  currentUser: PropTypes.instanceOf(Object),\n  location: PropTypes.instanceOf(Object),\n  history: PropTypes.instanceOf(Object)\n};\n\nconst shopLiStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nexport default connect(shopLiStateToProps, null)(BreadShopLi);\n","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/bread-shop-reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.types.js",[],["441","442","443","444","445","446"],"/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.actions.js",[],["447","448","449","450","451","452"],"/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_rangking.jsx",["453","454"],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_rangking_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_router.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/detail/breadShop_detail.jsx",["455"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Slider from 'react-slick';\n\nimport { errorhandler } from '../../../../../utils/common';\nimport { HouseDetaile, Grade, ShopImage, Information, OtherBread, BreadShopList } from './breadShop_detail_style';\nimport axios from '../../../../../utils/axios';\nimport BreadLi from '../../../../common-component/bread_li_component';\nimport Review from '../../../../common-component/review/review';\nimport Comment from '../../../../common-component/comment/comment';\nimport { selectShopBread, selectShopImages, selectShopMenuImages, selectShopHolidays, selectShopAddress, selectShopInfo } from '../../../../redux/breadshop/detail/breadShopDetail.selectors';\nimport { setCurrentBreadShopDetail, setShopDetailTrue, setShopDetailFalse } from '../../../../redux/breadshop/detail/breadShopDetail.actions';\nimport LoadingHOC from '../../../../common-component/loadingHOC';\n\nconst ShopDetail = ({ shopDetailBread, shopDetailImages, shopDetailAddress, shopDetailInfo, onShopDetailBread, match, onDetailTrue, onDetailFalse, history, location, loading, isLoadingset }) => {\n  const { breadShopId } = match.params;\n  useEffect(() => {\n    async function fetchDetailData() {\n      isLoadingset(true);\n      try {\n        const { status, data: detaileData } = await axios.get(`/bread/shop/${breadShopId}`);\n        if (status === 200) {\n          onShopDetailBread(detaileData.data);\n          isLoadingset(false);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n\n    fetchDetailData();\n  }, []);\n\n  const onDetailHeart = async () => {\n    try {\n      if (shopDetailInfo.like) {\n        const { status: detailStatus } = await axios.delete(`/bread/shop/favorite/${shopDetailInfo.id}`);\n        if (detailStatus === 200) {\n          onDetailFalse();\n        }\n      } else {\n        const { status } = await axios.post(`/bread/shop/favorite/${shopDetailInfo.id}`);\n        if (status === 200) {\n          onDetailTrue();\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    autoplay: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return (\n    !loading && (\n      <HouseDetaile>\n        <Grade>\n          <h1>{shopDetailInfo?.title}</h1>\n\n          <img\n            src={shopDetailInfo?.like ? 'https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/heart.png' : 'https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/spaceheart.png'}\n            alt=\"빈하트 이미지\"\n            onClick={onDetailHeart}\n            aria-hidden=\"true\"\n          />\n        </Grade>\n        <ShopImage>\n          {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n          <Slider {...settings}>\n            {shopDetailImages.map((images, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <img src={images} alt={`빵집사진-${index}`} key={`bread-image-${index}`} />\n            ))}\n          </Slider>\n          <Information>\n            <div>주소</div>\n            <p>{shopDetailAddress?.address || ''}</p>\n          </Information>\n          <Information>\n            <div>전화번호</div>\n            <p>{shopDetailInfo?.storeNumber || ''}</p>\n          </Information>\n          <Information>\n            <div>주차</div>\n            {/* eslint-disable-next-line no-nested-ternary */}\n            <p>{shopDetailInfo ? (shopDetailInfo.parkongEnabled ? '가능' : '불가능') : ''}</p>\n          </Information>\n          <Information>\n            <div>영업시간</div>\n            <p>{shopDetailInfo?.openTime || ''}</p>\n          </Information>\n          <Information>\n            <div>홈페이지</div>\n            <p>\n              <a href={shopDetailInfo?.link} target=\"_blank\" rel=\"noreferrer\">\n                {shopDetailInfo?.link || ''}\n              </a>\n            </p>\n          </Information>\n        </ShopImage>\n        <Review match={match.params} shopDetailInfo={shopDetailInfo} />\n        <Comment match={match.params} type=\"breadHouseType\" history={history} location={location} />\n\n        <OtherBread>\n          <h1>빵</h1>\n          <div className=\"all_show\">\n            <Link to=\"/bread\">\n              <span>모두보기</span>\n            </Link>\n            <span className=\"triangle\" />\n          </div>\n        </OtherBread>\n        <BreadShopList>\n          <ul className=\"list_wrap\">\n            {shopDetailBread.map((breadShopData) => (\n              <BreadLi key={`bread_shop_list${breadShopData.id}`} breadList={breadShopData} />\n            ))}\n          </ul>\n        </BreadShopList>\n      </HouseDetaile>\n    )\n  );\n};\n\nShopDetail.propTypes = {\n  shopDetailBread: PropTypes.instanceOf(Array).isRequired,\n  onShopDetailBread: PropTypes.func.isRequired,\n  match: PropTypes.instanceOf(Object).isRequired,\n  shopDetailImages: PropTypes.instanceOf(Array).isRequired,\n  shopDetailAddress: PropTypes.instanceOf(Object),\n  shopDetailInfo: PropTypes.instanceOf(Object),\n  onDetailTrue: PropTypes.func.isRequired,\n  onDetailFalse: PropTypes.func.isRequired,\n  history: PropTypes.instanceOf(Object).isRequired,\n  location: PropTypes.instanceOf(Object).isRequired,\n  loading: PropTypes.bool.isRequired,\n  isLoadingset: PropTypes.func.isRequired\n};\n\n// 초기값이 없거나 null인 경우 예외처리\nShopDetail.defaultProps = {\n  shopDetailAddress: null,\n  shopDetailInfo: null\n};\n\nconst breadShopStateToProps = createStructuredSelector({\n  shopDetailBread: selectShopBread,\n  shopDetailImages: selectShopImages,\n  shopDetailMenuImages: selectShopMenuImages,\n  shopDetailHolidays: selectShopHolidays,\n  shopDetailAddress: selectShopAddress,\n  shopDetailInfo: selectShopInfo\n});\n\nconst breadShopDetaileDispathch = (dispatch) => ({\n  onShopDetailBread: (DetailList) => dispatch(setCurrentBreadShopDetail(DetailList)),\n  onDetailTrue: () => dispatch(setShopDetailTrue()),\n  onDetailFalse: () => dispatch(setShopDetailFalse())\n});\n\nexport default connect(breadShopStateToProps, breadShopDetaileDispathch)(LoadingHOC(ShopDetail, <div className=\"loading_title\">빵집 상세 페이지 입니다.</div>));\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/detail/breadShop_detail_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/comment.jsx",["456"],"/* eslint-disable no-nested-ternary */\n/* eslint-disable no-shadow */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport { CommentWrap, CommentBox, MoreButton } from './comment_style';\nimport RegisterComment from './first-commend/first_commend';\nimport axios from '../../../utils/axios';\nimport { errorhandler } from '../../../utils/common';\nimport { setShopDetailComment, setShopDetailCommentMore, setRegisterComment, setCommentModify, setCommentDelete } from '../../redux/comment/bread_breadShopComment.actions';\nimport { selectShopComment, selectShopCommentPagnaition } from '../../redux/comment/bread_breadShopComment.selectors';\n\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\n\nconst limit = 20;\n\nconst Comment = ({ match, onDetailComment, onDetailCommentMore, onRegisterComment, onCommentModify, onCommentDelete, shopDetailComment, shopCommentPagnaition, type, currentUser, history, location }) => {\n  // 댓글등록\n  const [comment, setComment] = useState('');\n  const { breadShopId } = match;\n  const { breadId } = match;\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    async function fetchDetailComment() {\n      try {\n        if (type === 'breadHouseType') {\n          const { status, data } = await axios.get(`/comment/bread/shop/${breadShopId}?page=${page}&limit=${limit}`);\n\n          if (status === 200) {\n            onDetailComment(data.list, data.pagination);\n          }\n        } else if (type === 'breadType') {\n          const { data, status } = await axios.get(`/comment/bread/${breadId}`);\n\n          if (status === 200) {\n            onDetailComment(data.list, data.pagination);\n          }\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchDetailComment();\n  }, []);\n\n  // 댓글 핸들체인지1\n  const handleComment = (e) => {\n    setComment(e.target.value);\n  };\n\n  // 댓글등록\n  const registerSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (type === 'breadHouseType') {\n        const commentObject = {\n          content: comment\n        };\n        const { status, data } = await axios.post(`/comment/bread/shop/${breadShopId}`, commentObject);\n\n        if (status === 201) {\n          onRegisterComment(data.data);\n          setComment('');\n        }\n      } else if (type === 'breadType') {\n        const commentObject = {\n          content: comment\n        };\n        const { status, data } = await axios.post(`/comment/bread/${breadId}`, commentObject);\n\n        if (status === 201) {\n          onRegisterComment(data.data);\n          setComment('');\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 더보기 버튼\n  const moreButtonClick = async () => {\n    try {\n      if (type === 'breadHouseType') {\n        const { status, data } = await axios.get(`/comment/bread/shop/${breadShopId}?page=${page + 1}&limit=${limit}`);\n\n        if (status === 200) {\n          onDetailCommentMore(data.list, data.pagination);\n          setPage(page + 1);\n        }\n      } else if (type === 'breadType') {\n        const { status, data } = await axios.get(`/comment/bread/${breadId}?page=${page + 1}&limit=${limit}`);\n        if (status === 200) {\n          onDetailCommentMore(data.list, data.pagination);\n          setPage(page + 1);\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 비로그인시 comment 클릭시 로그인페이지 이동 (로그인후 다시 있던 페이지로이동해줌)\n  const loginClick = () => {\n    if (!currentUser) {\n      const comeAddress = encodeURIComponent(location.pathname + location.search);\n      history.push(`/signin?moveAddress=${comeAddress}`);\n    }\n  };\n\n  return (\n    <CommentWrap>\n      <CommentBox>\n        <h2>현재 {shopCommentPagnaition?.totalCount || '0'}개의 댓글</h2>\n        <form onSubmit={registerSubmit}>\n          <textarea placeholder={currentUser ? '댓글을 입력해 주세요.' : '로그인이 필요한 서비스입니다.'} onChange={handleComment} onClick={loginClick} readOnly={!currentUser} value={comment} name=\"comment\" />\n          <button type=\"submit\" className=\"registerButton\">\n            등록하기\n          </button>\n        </form>\n      </CommentBox>\n\n      {shopDetailComment.map((comment) => (\n        <RegisterComment key={`comment-${comment.id}`} comment={comment} onCommentModify={onCommentModify} onCommentDelete={onCommentDelete} breadShopId={breadShopId} type={type} breadId={breadId} />\n      ))}\n      {shopCommentPagnaition ? (\n        shopCommentPagnaition.currentPage !== shopCommentPagnaition.totalPage ? (\n          <MoreButton>\n            <button type=\"button\" onClick={moreButtonClick}>\n              더보기\n            </button>\n          </MoreButton>\n        ) : null\n      ) : null}\n    </CommentWrap>\n  );\n};\n\nComment.defaultProps = {\n  shopCommentPagnaition: null,\n  type: undefined,\n  currentUser: null,\n  history: undefined,\n  location: undefined\n};\n\nComment.propTypes = {\n  match: PropTypes.instanceOf(Object).isRequired,\n  shopDetailComment: PropTypes.instanceOf(Array).isRequired,\n  onRegisterComment: PropTypes.func.isRequired,\n  onDetailComment: PropTypes.func.isRequired,\n  onDetailCommentMore: PropTypes.func.isRequired,\n  onCommentModify: PropTypes.func.isRequired,\n  onCommentDelete: PropTypes.func.isRequired,\n  shopCommentPagnaition: PropTypes.instanceOf(Object),\n  type: PropTypes.string,\n  currentUser: PropTypes.instanceOf(Object),\n  history: PropTypes.instanceOf(Object),\n  location: PropTypes.instanceOf(Object)\n};\n\nconst detailCommentStateToProps = createStructuredSelector({\n  shopDetailComment: selectShopComment,\n  shopCommentPagnaition: selectShopCommentPagnaition,\n  currentUser: selectCurrentUser\n});\n\nconst detailCommentDispatch = (dispatch) => ({\n  onDetailComment: (comment, pagnation) => dispatch(setShopDetailComment(comment, pagnation)),\n  onDetailCommentMore: (comment, pagnation) => dispatch(setShopDetailCommentMore(comment, pagnation)),\n  onRegisterComment: (register) => dispatch(setRegisterComment(register)),\n  onCommentModify: (modify, commentId) => dispatch(setCommentModify(modify, commentId)),\n  onCommentDelete: (commentDelete) => dispatch(setCommentDelete(commentDelete))\n});\n\nexport default connect(detailCommentStateToProps, detailCommentDispatch)(Comment);\n","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/comment_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/review/review.jsx",["457"],"import React, { useState, useRef, useEffect } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport Slider from 'react-slick';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { selectShopReview } from '../../redux/breadshop/review/review.selectors';\nimport { setBreadShopReview, setShopReviewWriting } from '../../redux/breadshop/review/review.actions';\nimport { ReviewWrapBox, ReviewWrap, ReviewText, Register, RegisterReviewWrap, RegisterReview, ImageMap, ImageWrap, CloseWrap, ReviewButton, ReviewSlid, ReviewBox, BoxButton, BoxLeft, Content, UserImage, ReviewModal } from './review_style';\nimport axios from '../../../utils/axios';\nimport { errorhandler, sweetAlert } from '../../../utils/common';\n\nconst Review = ({ match, shopDetailReview, onDetailReview, onDetailReviewWriting, shopDetailInfo }) => {\n  const { breadShopId } = match;\n\n  // 리뷰등록\n  const [writingReview, setWritingReview] = useState({\n    text: ''\n  });\n\n  const [writingImage, setWritingImage] = useState([]);\n\n  // 모달 이미지(매개변수받아옴)\n  const [modalImage, setModalImage] = useState([]);\n\n  // 리뷰 등록시 모달\n  const [openModal, setOpenModal] = useState(false);\n\n  // 등록후 이미지클릭 모달\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const el = useRef();\n\n  const { text } = writingReview;\n\n  useEffect(() => {\n    async function fetchDetailReview() {\n      try {\n        const { status, data: reviewData } = await axios.get(`/review/${breadShopId}`);\n\n        if (status === 200) {\n          onDetailReview(reviewData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchDetailReview();\n  }, []);\n\n  const reviewOpenModal = () => {\n    setOpenModal(true);\n    document.body.style.overflow = 'hidden';\n  };\n  const reviewCloseModal = () => {\n    setOpenModal(false);\n    document.body.style.removeProperty('overflow');\n  };\n\n  // 오픈 모달\n  const opneModal = (reviewImage) => {\n    setModalOpen(true);\n    setModalImage(reviewImage);\n    document.body.style.overflow = 'hidden';\n  };\n\n  // 클로짓 모달\n  const closeModal = () => {\n    setModalOpen(false);\n    document.body.style.removeProperty('overflow');\n  };\n\n  // 리뷰등록\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const imageLists = [];\n      for (let i = 0; i < writingImage.length; i += 1) {\n        imageLists.push(writingImage[i].imageUrl);\n      }\n      const reviewObject = {\n        content: writingReview.text,\n        imageUrl: imageLists\n      };\n\n      const { status, data } = await axios.post(`/review/${breadShopId}`, reviewObject);\n      if (status === 201) {\n        onDetailReviewWriting(data.data);\n        setWritingReview({\n          text: ''\n        });\n        setWritingImage([]);\n        setOpenModal(false);\n        document.body.style.removeProperty('overflow');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const resetButton = (index) => {\n    const deleteImageList = [...writingImage];\n    deleteImageList.splice(index, 1);\n    setWritingImage(deleteImageList);\n  };\n\n  const handleChange = (e) => {\n    setWritingReview({\n      ...writingReview,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // 이미지 핸들체인지\n  const imageHandleChange = async (e) => {\n    try {\n      const { files } = e.target;\n\n      const imageLength = files.length + writingImage.length;\n      if (imageLength > 6) {\n        sweetAlert('이미지를 초과했습니다.');\n      }\n\n      const imageFormData = new FormData();\n      for (let i = 0; i < files.length; i += 1) {\n        imageFormData.append('imgFile', e.target.files[i]);\n      }\n\n      const { status, data: imageData } = await axios.post('/upload/review', imageFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      if (status === 200) {\n        const {\n          data: { imageUrl: newImageUrlList }\n        } = imageData;\n\n        const newimageList = [];\n        newImageUrlList.forEach((image) => {\n          const newImage = {\n            imageUrl: image\n          };\n          newimageList.push(newImage);\n        });\n        setWritingImage([...writingImage, ...newimageList]);\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return (\n    <ReviewWrapBox>\n      <ReviewWrap>\n        <ReviewText>\n          <h1>리뷰</h1>\n        </ReviewText>\n        <Register>\n          <span onClick={reviewOpenModal} aria-hidden=\"true\" role=\"button\">\n            리뷰쓰기\n          </span>\n        </Register>\n      </ReviewWrap>\n\n      <RegisterReviewWrap>\n        {openModal && (\n          <RegisterReview ref={el} aria-hidden=\"true\">\n            <div className=\"review_modal_wrap\" onClick={reviewCloseModal} aria-hidden=\"true\" />\n            <div className=\"review_modal\">\n              <div className=\"title\">\n                {shopDetailInfo.title} <span className=\"title_text\">리뷰를 작성해 주세요</span>\n              </div>\n\n              <div className=\"review_form_modal\">\n                <form onSubmit={handleSubmit}>\n                  <textarea placeholder=\"지수빵집에 대한 분위기와 맛은 어떤가요?\" onChange={handleChange} value={text} name=\"text\" />\n\n                  <ImageMap>\n                    {writingImage.map((imageData, index) => (\n                      // eslint-disable-next-line react/no-array-index-key\n                      <ImageWrap key={`image-${index}`}>\n                        <div>\n                          <img src={imageData.imageUrl} alt={`리뷰 사진${index}`} className=\"review_image\" />\n                          <div className=\"bread_button_wrap\" onClick={() => resetButton(index)} aria-hidden=\"true\">\n                            <CloseWrap>\n                              <div className=\"image_close_container1\">\n                                <div id=\"image_close_menu\">\n                                  <span />\n                                  <span />\n                                </div>\n                              </div>\n                            </CloseWrap>\n                          </div>\n                        </div>\n                      </ImageWrap>\n                    ))}\n                  </ImageMap>\n\n                  <input type=\"file\" id=\"file\" onChange={imageHandleChange} name=\"reviewImage\" multiple />\n                  <button type=\"button\" className=\"file_button\">\n                    <i />\n                  </button>\n\n                  <ReviewButton>\n                    <button type=\"button\" onClick={reviewCloseModal} className=\"reviewButton\">\n                      취소\n                    </button>\n                    <button type=\"submit\" className=\"reviewButton\">\n                      리뷰올리기\n                    </button>\n                  </ReviewButton>\n                </form>\n              </div>\n            </div>\n          </RegisterReview>\n        )}\n      </RegisterReviewWrap>\n\n      <ReviewSlid>\n        {shopDetailReview.length ? (\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          <Slider {...settings}>\n            {shopDetailReview.map((review) => (\n              <ReviewBox key={`review-${review.id}`}>\n                <BoxButton>\n                  <BoxLeft>\n                    <div className=\"button_wrap\">\n                      <div className=\"user_wrap\">\n                        <img src={review.user.imageUrl} alt=\"\" />\n                        <p>{review.user.name}</p>\n                        <p>{moment(review.createdAt).format('YYYY-MM-DD')}</p>\n                      </div>\n                    </div>\n                  </BoxLeft>\n                </BoxButton>\n\n                <Content>\n                  <p style={{ whiteSpace: 'pre-line' }}>{review.content}</p>\n                  {/* html을 바로 넣는 방법 */}\n                  {/* <div dangerouslySetInnerHTML={{ __html: review.content.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />') }} /> */}\n                </Content>\n\n                {review.images.map((reviewImage, index) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <UserImage key={`reviewimage-${review.id}-${index}`}>\n                    <button type=\"button\" onClick={() => opneModal(review.images)}>\n                      <img src={reviewImage} alt={`리뷰 이미지${index}`} />\n                    </button>\n                  </UserImage>\n                ))}\n              </ReviewBox>\n            ))}\n          </Slider>\n        ) : (\n          <div className=\"background_wrap\">등록된 리뷰가 없습니다.</div>\n        )}\n      </ReviewSlid>\n\n      <ReviewModal>\n        {modalOpen && (\n          <>\n            <div className=\"Modal-overlay\" ref={el} onClick={closeModal} aria-hidden=\"true\" />\n            <div className=\"Modal\">\n              <div>\n                <p className=\"title\">리뷰 이미지</p>\n              </div>\n              <div className=\"content\">\n                {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n                <Slider {...settings}>\n                  {modalImage.map((images, index) => (\n                    <img src={images} alt={`리뷰사진${index}`} key={`modalImage-${images}`} className=\"modal_image\" />\n                  ))}\n                </Slider>\n              </div>\n              <div className=\"button-wrap\">\n                <button type=\"button\" onClick={closeModal}>\n                  취소\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      </ReviewModal>\n    </ReviewWrapBox>\n  );\n};\n\nReview.propTypes = {\n  match: PropTypes.instanceOf(Object).isRequired,\n  shopDetailReview: PropTypes.instanceOf(Array).isRequired,\n  onDetailReview: PropTypes.func.isRequired,\n  onDetailReviewWriting: PropTypes.func.isRequired,\n  shopDetailInfo: PropTypes.instanceOf(Object).isRequired\n};\n\nconst shopReviewStateToProps = createStructuredSelector({\n  shopDetailReview: selectShopReview\n});\n\nconst shopReviewDispatch = (dispatch) => ({\n  onDetailReview: (review) => dispatch(setBreadShopReview(review)),\n  onDetailReviewWriting: (writing) => dispatch(setShopReviewWriting(writing))\n});\n\nexport default connect(shopReviewStateToProps, shopReviewDispatch)(Review);\n","/Users/songjisu/Desktop/bread_service/src/components/common-component/review/review_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/second-recomment/second_recomment.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/second-recomment/second_recomment_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/first-commend/first_commend_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/first-commend/first_commend.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/bread_router.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/detail/bread_detail.jsx",["458"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport Slider from 'react-slick';\n\nimport { errorhandler } from 'utils/common';\nimport { BreadDtail, AllWrap } from './bread_detail_style';\nimport Comment from '../../../../common-component/comment/comment';\nimport { setCurrentBreadList, setBreadDetailTrue, setBreadDetailFalse } from '../../../../redux/bread/detail/breadDetail.actions';\nimport { selectBreadInfo, selectBreadImages } from '../../../../redux/bread/detail/breadDetail.selectors';\nimport axios from '../../../../../utils/axios';\nimport LoadingHOC from '../../../../common-component/loadingHOC';\n\nconst BreadDetail = ({ match, breadDetailInfo, onBreadDetail, breadDetailImages, onBreadDetailTrue, onBreadDetailFalse, isLoadingset, loading }) => {\n  const { breadId } = match.params;\n  useEffect(() => {\n    async function fetchBreadDetail() {\n      isLoadingset(true);\n      try {\n        const { data, status } = await axios.get(`bread/${breadId}`);\n        if (status === 200) {\n          onBreadDetail(data.data);\n          isLoadingset(false);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchBreadDetail();\n  }, []);\n\n  // 하트 클릭\n  const onDetailHeart = async () => {\n    try {\n      if (breadDetailInfo?.like) {\n        const { status } = await axios.delete(`/bread/favorite/${breadId}`);\n        if (status === 200) {\n          onBreadDetailFalse();\n        }\n      } else {\n        const { status: breadStatus } = await axios.post(`/bread/favorite/${breadId}`);\n        if (breadStatus === 200) {\n          onBreadDetailTrue();\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    // autoplay: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return (\n    !loading && (\n      <BreadDtail>\n        <AllWrap>\n          <div className=\"title_wrap\">\n            <span className=\"detail_text\">{breadDetailInfo?.title}</span>\n            <div className=\"heartImage\">\n              <img\n                src={breadDetailInfo?.like ? 'https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/heart.png' : 'https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/spaceheart.png'}\n                alt=\"빈하트 이미지\"\n                onClick={onDetailHeart}\n                aria-hidden=\"true\"\n              />\n            </div>\n          </div>\n          {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n          <Slider {...settings}>\n            {breadDetailImages.map((images, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <div className=\"image_wrap\" key={`bread-images-${index}`}>\n                <img src={images} alt={`빵사진-${index}`} />\n              </div>\n            ))}\n          </Slider>\n\n          <span className=\"detail_bread_name\">{breadDetailInfo ? breadDetailInfo.title : ''}</span>\n          <p className=\"content_text\">{breadDetailInfo?.content}</p>\n        </AllWrap>\n        <Comment match={match.params} type=\"breadType\" />\n      </BreadDtail>\n    )\n  );\n};\nBreadDetail.defaultProps = {\n  breadDetailInfo: null,\n  breadDetailImages: null\n};\n\nBreadDetail.propTypes = {\n  match: PropTypes.instanceOf(Object).isRequired,\n  breadDetailInfo: PropTypes.instanceOf(Object),\n  onBreadDetail: PropTypes.func.isRequired,\n  breadDetailImages: PropTypes.instanceOf(Array),\n  onBreadDetailTrue: PropTypes.func.isRequired,\n  onBreadDetailFalse: PropTypes.func.isRequired,\n  isLoadingset: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadDetailInfo: selectBreadInfo,\n  breadDetailImages: selectBreadImages\n});\nconst breadDetaileDispathch = (dispatch) => ({\n  onBreadDetail: (breadDetailList) => dispatch(setCurrentBreadList(breadDetailList)),\n  onBreadDetailTrue: () => dispatch(setBreadDetailTrue()),\n  onBreadDetailFalse: () => dispatch(setBreadDetailFalse())\n});\n\nexport default connect(breadStateToProps, breadDetaileDispathch)(LoadingHOC(BreadDetail, <div className=\"loading_title\">인기있는 빵 디테일 페이지 입니다.</div>));\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/detail/bread_detail_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/bread_popular.jsx",["459"],"import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport qs from 'qs';\n\nimport BreadLi from '../../../common-component/bread_li_component';\nimport { selectBreadList } from '../../../redux/bread/list/bread.selectors';\nimport { setBreadRankingList, setBreadListMore, setHeartTrueData, setHeartFalseData } from '../../../redux/bread/list/bread.actions';\nimport axios from '../../../../utils/axios';\nimport { errorhandler } from '../../../../utils/common';\nimport { PopularBreadWrap, PopularWrap, BreadList } from './bread_popular_style';\nimport LoadingHOC from '../../../common-component/loadingHOC';\n\n/**\n * @author 송지수\n * @email tndms951@naver.com\n * @create date 2021-04-21\n * @modify date 2021-04-21\n * @desc [bread컴포넌트]\n */\n\nconst limit = 20;\n\nconst PopularBread = ({ breadList, onBreadList, onBreadListMore, onBreadHeartTrue, onBreadHeartFalse, location, history, isLoadingset, loading }) => {\n  // 스크롤시\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    async function fetchbreadData() {\n      isLoadingset(true);\n      try {\n        const { status, data: breadData } = await axios.get(`/bread?page=${page}&limit=${limit}`);\n\n        if (status === 200) {\n          onBreadList(breadData.list);\n          isLoadingset(false);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchbreadData();\n  }, []);\n\n  // 스크롤(pagination)\n  const fetMoreData = async () => {\n    try {\n      const query = qs.parse(location.search, {\n        ignoreQueryPrefix: true\n      });\n      const queryObject = { ...query };\n      queryObject.page = String(page + 1);\n      queryObject.limit = String(limit);\n      const queryData = qs.stringify(queryObject);\n      const { data, status } = await axios.get(`/bread?${queryData}`);\n\n      if (status === 200) {\n        onBreadListMore(data.list);\n        setPage(page + 1);\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  return (\n    !loading && (\n      <PopularBreadWrap>\n        <PopularWrap>\n          <h1>요즘 인기있는 빵</h1>\n        </PopularWrap>\n\n        <BreadList>\n          {/* @ts-ignore */}\n          <InfiniteScroll dataLength={breadList.length} next={fetMoreData} hasMore scrollThreshold=\"50px\">\n            <ul className=\"list_wrap\">\n              {breadList.map((list) => (\n                <BreadLi key={`bread-list${list.id}`} breadList={list} breadListLike={list.like} likeTrue={onBreadHeartTrue} likeFalse={onBreadHeartFalse} location={location} history={history} />\n              ))}\n            </ul>\n          </InfiniteScroll>\n        </BreadList>\n      </PopularBreadWrap>\n    )\n  );\n};\n\nPopularBread.propTypes = {\n  breadList: PropTypes.instanceOf(Array).isRequired,\n  onBreadList: PropTypes.func.isRequired,\n  onBreadListMore: PropTypes.func.isRequired,\n  onBreadHeartTrue: PropTypes.func.isRequired,\n  onBreadHeartFalse: PropTypes.func.isRequired,\n  location: PropTypes.instanceOf(Object).isRequired,\n  history: PropTypes.instanceOf(Object).isRequired,\n  isLoadingset: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadList: selectBreadList\n});\n\nconst breadDispathchToProps = (dispatch) => ({\n  onBreadList: (bread) => dispatch(setBreadRankingList(bread)),\n  onBreadListMore: (bread) => dispatch(setBreadListMore(bread)),\n  onBreadHeartTrue: (trueBread) => dispatch(setHeartTrueData(trueBread)),\n  onBreadHeartFalse: (falseBreadId) => dispatch(setHeartFalseData(falseBreadId))\n});\n\nexport default connect(breadStateToProps, breadDispathchToProps)(LoadingHOC(PopularBread, <div className=\"loading_title\">인기있는 빵 페이지 입니다.</div>));\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/bread_popular_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/list/bread.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/list/bread.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/list/bread.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/list/bread.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/comment/bread_breadShopComment.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/comment/bread_breadShopComment.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/comment/bread_breadShopComment.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/comment/bread_breadShopComment.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/bread-reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/detail/breadDetail.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/detail/breadDetail.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/detail/breadDetail.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/detail/breadDetail.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/youtube/youtube.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/youtube/youtube.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/youtube/youtube.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/youtube/youtube.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/notice/notice.jsx",["460"],"import React, { useEffect, useState } from 'react';\n\nimport { createStructuredSelector } from 'reselect';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport moment from 'moment';\n\nimport { errorhandler } from 'utils/common';\nimport DownPage from './notice_downPage';\nimport axios from '../../../../../utils/axios';\nimport { NoticeWrap } from './notice_style';\nimport { setNoticeList, setNoticePagination } from '../../../../redux/community/community.actions';\nimport { selectNotice } from '../../../../redux/community/community.selectors';\nimport LoadingHOC from '../../../../common-component/loadingHOC';\n\nconst limit = 10;\n\nconst Notice = ({ onNoticeList, noticeList, onNoticePagination, isLoadingset, loading }) => {\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [dropDown, setDropDown] = useState(0);\n\n  useEffect(() => {\n    async function fetchNoticeData() {\n      isLoadingset(true);\n      try {\n        const { data, status } = await axios.get(`/notice?page=${page}&limit=${limit}`);\n\n        if (status === 200) {\n          onNoticeList(data.list);\n          setHasMore(data.pagination.currentPage !== data.pagination.totalPage);\n          isLoadingset(false);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchNoticeData();\n  }, []);\n\n  // 스크롤(pagination)\n  const fetMoreData = async () => {\n    try {\n      const { status, data } = await axios.get(`/notice?page=${page + 1}&limit=${limit}`);\n\n      if (status === 200) {\n        onNoticePagination(data.list);\n        setPage(page + 1);\n        if (data.pagination.currentPage === data.pagination.totalPage) {\n          setHasMore(false);\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const handleClick = (listId) => {\n    if (dropDown === listId) {\n      setDropDown(0);\n    } else {\n      setDropDown(listId);\n    }\n  };\n\n  return (\n    !loading && (\n      <NoticeWrap>\n        <ul>\n          {/* @ts-ignore */}\n          <InfiniteScroll dataLength={noticeList.length} next={fetMoreData} hasMore={hasMore} scrollThreshold=\"50px\">\n            {noticeList.map((list, index) => (\n              <li key={`community-notice-${list.id}`}>\n                <div className=\"notice_title\" onClick={() => handleClick(list.id)} role=\"presentation\">\n                  <span className=\"count_number\">{index + 1}</span> <span className=\"notice_content\">{list.title}</span>\n                  <div className={dropDown === list.id ? 'arrow_up' : 'arrow_down'} />\n                  <div className=\"notice_date\">{moment(list.createdAt).format('YYYY-MM-DD')}</div>\n                </div>\n                {list.id === dropDown ? <DownPage list={list} /> : ''}\n              </li>\n            ))}\n          </InfiniteScroll>\n        </ul>\n      </NoticeWrap>\n    )\n  );\n};\n\nNotice.propTypes = {\n  onNoticeList: PropTypes.func.isRequired,\n  noticeList: PropTypes.instanceOf(Object).isRequired,\n  onNoticePagination: PropTypes.func.isRequired,\n  isLoadingset: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired\n  // stylefalse: PropTypes.instanceOf(Object).isRequired\n};\n\nconst communityStateToProps = createStructuredSelector({\n  noticeList: selectNotice\n});\n\nconst communityDispathch = (dispatch) => ({\n  onNoticeList: (list) => dispatch(setNoticeList(list)),\n  onNoticePagination: (list) => dispatch(setNoticePagination(list))\n});\n\nexport default connect(communityStateToProps, communityDispathch)(LoadingHOC(Notice, <div className=\"loading_title\">공지사항 페이지 입니다.</div>));\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/notice/notice_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/styles/theme.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/community.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/event/event.jsx",["461"],"import React, { useEffect, useState } from 'react';\nimport { errorhandler } from 'utils/common';\nimport { createStructuredSelector } from 'reselect';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport axios from '../../../../../utils/axios';\nimport { EventWrap } from './event_style';\nimport { setEventList, setEventPagination } from '../../../../redux/community/community.actions';\nimport { selectEvent } from '../../../../redux/community/community.selectors';\nimport LoadingHOC from '../../../../common-component/loadingHOC';\n\nconst limit = 4;\n\nconst Event = ({ onEventList, eventList, onEventPagination, loading, isLoadingset }) => {\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n\n  useEffect(() => {\n    isLoadingset(true);\n    async function fetchEventData() {\n      try {\n        const { data, status } = await axios.get(`/event?page=${page}&limit=${limit}`);\n        if (status === 200) {\n          onEventList(data.list);\n          setHasMore(data.pagination.currentPage !== data.pagination.totalPage);\n          isLoadingset(false);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchEventData();\n  }, []);\n\n  // 스크롤(pagination)\n  const fetMoreData = async () => {\n    try {\n      const { data, status } = await axios.get(`/event?page=${page + 1}&limit=${limit}`);\n      if (status === 200) {\n        onEventPagination(data.list);\n        setPage(page + 1);\n        if (data.pagination.currentPage === data.pagination.totalPage) {\n          setHasMore(false);\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  return (\n    !loading && (\n      <EventWrap>\n        <ul>\n          {/* @ts-ignore */}\n          <InfiniteScroll dataLength={eventList.length} next={fetMoreData} hasMore={hasMore} scrollThreshold=\"50px\">\n            {eventList.map((list) => (\n              <li key={`event=${list.id}`}>\n                <a href={list.link} target=\"_blank\" rel=\"noreferrer\">\n                  <div className=\"box_wrap\" key={`event-${list.id}`}>\n                    <img src={list.imageUrl} alt=\"\" />\n                    {/* <span>{list.title}</span> */}\n                    <p className={list.close ? 'close' : 'going'}>{list.close ? '이벤트 종료' : '진행중'}</p>\n                    <span>\n                      <strong>[{list.title}]</strong> {moment(list.startAt).format('YYYY-MM-DD ')}\n                      {'~'}\n                      {moment(list.endAt).format(' YYYY-MM-DD')}\n                    </span>\n                  </div>\n                </a>\n              </li>\n            ))}\n          </InfiniteScroll>\n        </ul>\n      </EventWrap>\n    )\n  );\n};\n\nEvent.propTypes = {\n  onEventList: PropTypes.func.isRequired,\n  eventList: PropTypes.instanceOf(Object).isRequired,\n  onEventPagination: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  isLoadingset: PropTypes.func.isRequired\n};\n\nconst eventStateToProps = createStructuredSelector({\n  eventList: selectEvent\n});\n\nconst eventDispathch = (dispatch) => ({\n  onEventList: (list) => dispatch(setEventList(list)),\n  onEventPagination: (list) => dispatch(setEventPagination(list))\n});\n\nexport default connect(eventStateToProps, eventDispathch)(LoadingHOC(Event, <div className=\"loading_title\">이벤트 페이지 입니다.</div>));\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/community_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/community/community.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/community/community.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/community/community.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/community/community.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/event/event_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/notice/notice_downPage.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/notice/notice_downPage_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/breadShop_li_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/my-picck/pick_bread_breadShop.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/my-picck/pick_bread_breadShop_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/my-picck/pick-breadShop/pick_breadShop.jsx",["462","463","464"],"import React, { useEffect, useState } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport qs from 'qs';\n\nimport { errorhandler } from 'utils/common';\nimport BreadShopLi from '../../../../common-component/breadShop_li_component';\nimport { setCurrentBreadShop, setCurrentBreadShopMore, setShopTrueData, setShopFalseData, setBreadShopReset } from '../../../../redux/breadshop/list/breadShop.actions';\nimport { selectShopList } from '../../../../redux/breadshop/list/breadShop.selectors';\nimport { selectCurrentUser } from '../../../../redux/user/user.selectors';\nimport axios from '../../../../../utils/axios';\nimport { BreadPickList } from './pick_breadShop_style';\n\nconst limit = 20;\n\nconst PickBreadShop = ({ breadShopList, onBreadShopList, onBreadShopPagination, onBreadShopTrue, onBreadShopFalse, onBreadShopReset, location, history, currentUser }) => {\n  const [hasMore, setHasMore] = useState(true);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    const token = localStorage.getItem('userToken');\n    if (!token) {\n      history.push('/');\n    }\n  }, [currentUser]);\n\n  useEffect(() => {\n    async function fetchPickBreadShop() {\n      const query = qs.parse(location.search, {\n        ignoreQueryPrefix: true\n      });\n      const newQuery = { ...query };\n      newQuery.page = String(1);\n      newQuery.limit = String(limit);\n\n      const queryData = qs.stringify(newQuery);\n\n      try {\n        const { status, data } = await axios.get(`/user/bread/shop?${queryData}`);\n\n        if (status === 200) {\n          setPage(1);\n          onBreadShopList(data.list);\n          setHasMore(data.pagination.currentPage !== data.pagination.totalPage);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchPickBreadShop();\n\n    return onBreadShopReset();\n  }, []);\n\n  // 스크롤pagination\n  const fetchMoreData = async () => {\n    try {\n      const query = qs.parse(location.search, {\n        ignoreQueryPrefix: true\n      });\n      const queryObject = { ...query };\n      queryObject.page = String(page + 1);\n      queryObject.limit = String(limit);\n      const queryData = qs.stringify(queryObject);\n      const { status, data } = await axios.get(`/user/bread/shop?${queryData}`);\n      console.log(data);\n      if (status === 200) {\n        onBreadShopPagination(data.list);\n        setPage(page + 1);\n        if (data.pagination.currentPage === data.pagination.totalPage) {\n          setHasMore(false);\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  return (\n    <BreadPickList>\n      {/* @ts-ignore */}\n      <InfiniteScroll dataLength={breadShopList.length} next={fetchMoreData} hasMore={hasMore} scrollThreshold=\"50px\">\n        <ul className=\"list_wrap\">\n          {breadShopList.map((list) => (\n            <BreadShopLi key={`pick-breadShop-list${list.id}`} shopList={list} shopSeverLike={list.like} shopId={list.id} likeTrue={onBreadShopTrue} likeFalse={onBreadShopFalse} />\n          ))}\n        </ul>\n      </InfiniteScroll>\n    </BreadPickList>\n  );\n};\nPickBreadShop.defaultProps = {\n  currentUser: null\n};\n\nPickBreadShop.propTypes = {\n  onBreadShopList: PropTypes.func.isRequired,\n  breadShopList: PropTypes.instanceOf(Object).isRequired,\n  onBreadShopPagination: PropTypes.func.isRequired,\n  onBreadShopTrue: PropTypes.func.isRequired,\n  onBreadShopFalse: PropTypes.func.isRequired,\n  onBreadShopReset: PropTypes.func.isRequired,\n  location: PropTypes.instanceOf(Object).isRequired,\n  history: PropTypes.objectOf(PropTypes.object).isRequired,\n  currentUser: PropTypes.instanceOf(Object)\n};\n\nconst pickStateToProps = createStructuredSelector({\n  breadShopList: selectShopList,\n  currentUser: selectCurrentUser\n});\n\nconst pickDispathch = (dispatch) => ({\n  onBreadShopList: (list) => dispatch(setCurrentBreadShop(list)),\n  onBreadShopPagination: (list) => dispatch(setCurrentBreadShopMore(list)),\n  onBreadShopTrue: (trueBreadShop) => dispatch(setShopTrueData(trueBreadShop)),\n  onBreadShopFalse: (falseBreadShop) => dispatch(setShopFalseData(falseBreadShop)),\n  onBreadShopReset: () => dispatch(setBreadShopReset())\n});\n\nexport default connect(pickStateToProps, pickDispathch)(PickBreadShop);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/my-picck/pick-bread/pick_bread.jsx",["465","466"],"import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport qs from 'qs';\n\nimport { errorhandler } from 'utils/common';\nimport axios from '../../../../../utils/axios';\nimport BreadLi from '../../../../common-component/bread_li_component';\nimport { PickBreadList } from './pick_bread_style';\nimport { setBreadRankingList, setHeartTrueData, setHeartFalseData } from '../../../../redux/bread/list/bread.actions';\nimport { selectBreadList } from '../../../../redux/bread/list/bread.selectors';\nimport { selectCurrentUser } from '../../../../redux/user/user.selectors';\n\nconst limit = 20;\n\nconst PickBread = ({ breadList, onBreadList, onBreadTrue, onBreadFalse, location, currentUser, history }) => {\n  const [hasMore, setHasMore] = useState(true);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    const token = localStorage.getItem('userToken');\n    if (!token) {\n      history.push('/');\n    }\n  }, [currentUser]);\n\n  useEffect(() => {\n    async function fetchPickBread() {\n      const query = qs.parse(location.search, {\n        ignoreQueryPrefix: true\n      });\n      const newQuery = { ...query };\n      newQuery.page = String(1);\n      newQuery.limit = String(limit);\n\n      const queryData = qs.stringify(newQuery);\n      try {\n        const { status, data } = await axios.get(`/user/bread?${queryData}`);\n        if (status === 200) {\n          onBreadList(data.list);\n          setPage(1);\n          if (data.pagination.currentPage !== data.pagination.totalPage) {\n            setHasMore(true);\n          }\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchPickBread();\n  }, []);\n\n  // 스크롤(pagination)\n  const fetchMoreData = async () => {\n    const query = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    });\n    const queryObject = { ...query };\n    queryObject.page = String(page + 1);\n    queryObject.limit = String(limit);\n    const queryData = qs.stringify(queryObject);\n\n    try {\n      const { status, data } = await axios.get(`/user/bread${queryData}`);\n      if (status === 200) {\n        onBreadList(data.list);\n        setPage(page + 1);\n        if (data.pagination.currentPage === data.pagination.totalPage) {\n          setHasMore(false);\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  return (\n    <PickBreadList>\n      {/* @ts-ignore */}\n      <InfiniteScroll dataLength={breadList.length} next={fetchMoreData} hasMore={hasMore} scrollThreshold=\"50px\">\n        <ul className=\"list_wrap\">\n          {breadList.map((list) => (\n            <BreadLi key={`pick-bread-list${list.id}`} breadList={list} breadListLike={list.like} likeTrue={onBreadTrue} likeFalse={onBreadFalse} location={location} />\n          ))}\n        </ul>\n      </InfiniteScroll>\n    </PickBreadList>\n  );\n};\n\nPickBread.defaultProps = {\n  currentUser: null\n};\n\nPickBread.propTypes = {\n  breadList: PropTypes.instanceOf(Object).isRequired,\n  onBreadList: PropTypes.func.isRequired,\n  onBreadTrue: PropTypes.func.isRequired,\n  onBreadFalse: PropTypes.func.isRequired,\n  location: PropTypes.instanceOf(Object).isRequired,\n  currentUser: PropTypes.instanceOf(Object),\n  history: PropTypes.objectOf(PropTypes.object).isRequired\n};\nconst pickBreadStateToProps = createStructuredSelector({\n  breadList: selectBreadList,\n  currentUser: selectCurrentUser\n});\n\nconst pickBreadDispathchToProps = (dispatch) => ({\n  onBreadList: (list) => dispatch(setBreadRankingList(list)),\n  onBreadTrue: (breadtrue) => dispatch(setHeartTrueData(breadtrue)),\n  onBreadFalse: (breadfalse) => dispatch(setHeartFalseData(breadfalse))\n});\n\nexport default connect(pickBreadStateToProps, pickBreadDispathchToProps)(PickBread);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/my-picck/pick-breadShop/pick_breadShop_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/my-picck/pick-bread/pick_bread_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/loading/loading.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/loadingHOC.jsx",[],{"ruleId":"467","replacedBy":"468"},{"ruleId":"469","replacedBy":"470"},{"ruleId":"471","replacedBy":"472"},{"ruleId":"473","replacedBy":"474"},{"ruleId":"475","replacedBy":"476"},{"ruleId":"477","replacedBy":"478"},{"ruleId":"479","severity":1,"message":"480","line":10,"column":3,"nodeType":"481","messageId":"482","endLine":10,"endColumn":14},{"ruleId":"483","severity":1,"message":"484","line":28,"column":6,"nodeType":"485","endLine":28,"endColumn":8,"suggestions":"486"},{"ruleId":"483","severity":1,"message":"487","line":76,"column":6,"nodeType":"485","endLine":76,"endColumn":8,"suggestions":"488"},{"ruleId":"483","severity":1,"message":"489","line":39,"column":6,"nodeType":"485","endLine":39,"endColumn":8,"suggestions":"490"},{"ruleId":"479","severity":1,"message":"480","line":26,"column":3,"nodeType":"481","messageId":"482","endLine":26,"endColumn":14},{"ruleId":"479","severity":1,"message":"480","line":149,"column":21,"nodeType":"481","messageId":"482","endLine":149,"endColumn":34},{"ruleId":"479","severity":1,"message":"480","line":150,"column":23,"nodeType":"481","messageId":"482","endLine":150,"endColumn":35},{"ruleId":"479","severity":1,"message":"480","line":32,"column":9,"nodeType":"481","messageId":"482","endLine":32,"endColumn":20},{"ruleId":"467","replacedBy":"491"},{"ruleId":"469","replacedBy":"492"},{"ruleId":"471","replacedBy":"493"},{"ruleId":"473","replacedBy":"494"},{"ruleId":"475","replacedBy":"495"},{"ruleId":"477","replacedBy":"496"},{"ruleId":"467","replacedBy":"497"},{"ruleId":"469","replacedBy":"498"},{"ruleId":"471","replacedBy":"499"},{"ruleId":"473","replacedBy":"500"},{"ruleId":"475","replacedBy":"501"},{"ruleId":"477","replacedBy":"502"},{"ruleId":"483","severity":1,"message":"503","line":93,"column":6,"nodeType":"485","endLine":93,"endColumn":53,"suggestions":"504"},{"ruleId":"483","severity":1,"message":"505","line":157,"column":6,"nodeType":"485","endLine":157,"endColumn":8,"suggestions":"506"},{"ruleId":"483","severity":1,"message":"507","line":35,"column":6,"nodeType":"485","endLine":35,"endColumn":8,"suggestions":"508"},{"ruleId":"483","severity":1,"message":"509","line":47,"column":6,"nodeType":"485","endLine":47,"endColumn":8,"suggestions":"510"},{"ruleId":"483","severity":1,"message":"511","line":50,"column":6,"nodeType":"485","endLine":50,"endColumn":8,"suggestions":"512"},{"ruleId":"483","severity":1,"message":"513","line":31,"column":6,"nodeType":"485","endLine":31,"endColumn":8,"suggestions":"514"},{"ruleId":"483","severity":1,"message":"515","line":44,"column":6,"nodeType":"485","endLine":44,"endColumn":8,"suggestions":"516"},{"ruleId":"483","severity":1,"message":"517","line":40,"column":6,"nodeType":"485","endLine":40,"endColumn":8,"suggestions":"518"},{"ruleId":"483","severity":1,"message":"519","line":36,"column":6,"nodeType":"485","endLine":36,"endColumn":8,"suggestions":"520"},{"ruleId":"483","severity":1,"message":"484","line":27,"column":6,"nodeType":"485","endLine":27,"endColumn":19,"suggestions":"521"},{"ruleId":"483","severity":1,"message":"522","line":55,"column":6,"nodeType":"485","endLine":55,"endColumn":8,"suggestions":"523"},{"ruleId":"479","severity":1,"message":"480","line":68,"column":7,"nodeType":"481","messageId":"482","endLine":68,"endColumn":18},{"ruleId":"483","severity":1,"message":"484","line":27,"column":6,"nodeType":"485","endLine":27,"endColumn":19,"suggestions":"524"},{"ruleId":"483","severity":1,"message":"525","line":53,"column":6,"nodeType":"485","endLine":53,"endColumn":8,"suggestions":"526"},"lines-around-directive",["527"],"no-spaced-func",["528"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["529"],"React Hook useEffect has missing dependencies: 'onBreadList', 'onBreadShopList', and 'onEventList'. Either include them or remove the dependency array. If 'onBreadList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["530"],"React Hook useEffect has missing dependencies: 'isLoadingset', 'page', and 'youtubePickList'. Either include them or remove the dependency array. If 'isLoadingset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["531"],["527"],["528"],[],[],[],[],["527"],["528"],[],[],[],[],"React Hook useEffect has a missing dependency: 'isLoadingset'. Either include it or remove the dependency array. If 'isLoadingset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["532"],"React Hook useEffect has missing dependencies: 'location.search', 'onAddressDong', 'onAddressSi', and 'onBreadShopReset'. Either include them or remove the dependency array. If 'onBreadShopReset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["533"],"React Hook useEffect has missing dependencies: 'breadShopId', 'isLoadingset', and 'onShopDetailBread'. Either include them or remove the dependency array. If 'isLoadingset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["534"],"React Hook useEffect has missing dependencies: 'breadId', 'breadShopId', 'onDetailComment', 'page', and 'type'. Either include them or remove the dependency array. If 'onDetailComment' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["535"],"React Hook useEffect has missing dependencies: 'breadShopId' and 'onDetailReview'. Either include them or remove the dependency array. If 'onDetailReview' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["536"],"React Hook useEffect has missing dependencies: 'breadId', 'isLoadingset', and 'onBreadDetail'. Either include them or remove the dependency array. If 'isLoadingset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["537"],"React Hook useEffect has missing dependencies: 'isLoadingset', 'onBreadList', and 'page'. Either include them or remove the dependency array. If 'isLoadingset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["538"],"React Hook useEffect has missing dependencies: 'isLoadingset', 'onNoticeList', and 'page'. Either include them or remove the dependency array. If 'isLoadingset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["539"],"React Hook useEffect has missing dependencies: 'isLoadingset', 'onEventList', and 'page'. Either include them or remove the dependency array. If 'isLoadingset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["540"],["541"],"React Hook useEffect has missing dependencies: 'location.search', 'onBreadShopList', and 'onBreadShopReset'. Either include them or remove the dependency array. If 'onBreadShopReset' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["542"],["543"],"React Hook useEffect has missing dependencies: 'location.search' and 'onBreadList'. Either include them or remove the dependency array. If 'onBreadList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["544"],"padding-line-between-statements","func-call-spacing",{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},{"desc":"555","fix":"556"},{"desc":"557","fix":"558"},{"desc":"559","fix":"560"},{"desc":"561","fix":"562"},{"desc":"563","fix":"564"},{"desc":"565","fix":"566"},{"desc":"567","fix":"568"},{"desc":"569","fix":"570"},{"desc":"571","fix":"572"},{"desc":"569","fix":"573"},{"desc":"574","fix":"575"},"Update the dependencies array to be: [history]",{"range":"576","text":"577"},"Update the dependencies array to be: [onBreadList, onBreadShopList, onEventList]",{"range":"578","text":"579"},"Update the dependencies array to be: [isLoadingset, page, youtubePickList]",{"range":"580","text":"581"},"Update the dependencies array to be: [isLoadingset, location.search, onAddressSi, onBreadShopList]",{"range":"582","text":"583"},"Update the dependencies array to be: [location.search, onAddressDong, onAddressSi, onBreadShopReset]",{"range":"584","text":"585"},"Update the dependencies array to be: [breadShopId, isLoadingset, onShopDetailBread]",{"range":"586","text":"587"},"Update the dependencies array to be: [breadId, breadShopId, onDetailComment, page, type]",{"range":"588","text":"589"},"Update the dependencies array to be: [breadShopId, onDetailReview]",{"range":"590","text":"591"},"Update the dependencies array to be: [breadId, isLoadingset, onBreadDetail]",{"range":"592","text":"593"},"Update the dependencies array to be: [isLoadingset, onBreadList, page]",{"range":"594","text":"595"},"Update the dependencies array to be: [isLoadingset, onNoticeList, page]",{"range":"596","text":"597"},"Update the dependencies array to be: [isLoadingset, onEventList, page]",{"range":"598","text":"599"},"Update the dependencies array to be: [currentUser, history]",{"range":"600","text":"601"},"Update the dependencies array to be: [location.search, onBreadShopList, onBreadShopReset]",{"range":"602","text":"603"},{"range":"604","text":"601"},"Update the dependencies array to be: [location.search, onBreadList]",{"range":"605","text":"606"},[889,891],"[history]",[2325,2327],"[onBreadList, onBreadShopList, onEventList]",[1476,1478],"[isLoadingset, page, youtubePickList]",[2936,2983],"[isLoadingset, location.search, onAddressSi, onBreadShopList]",[4555,4557],"[location.search, onAddressDong, onAddressSi, onBreadShopReset]",[1710,1712],"[breadShopId, isLoadingset, onShopDetailBread]",[1888,1890],"[breadId, breadShopId, onDetailComment, page, type]",[1680,1682],"[breadShopId, onDetailReview]",[1284,1286],"[breadId, isLoadingset, onBreadDetail]",[1534,1536],"[isLoadingset, onBreadList, page]",[1413,1415],"[isLoadingset, onNoticeList, page]",[1306,1308],"[isLoadingset, onEventList, page]",[1230,1243],"[currentUser, history]",[1960,1962],"[location.search, onBreadShopList, onBreadShopReset]",[1100,1113],[1815,1817],"[location.search, onBreadList]"]