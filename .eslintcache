[{"/Users/songjisu/Desktop/bread_service/src/index.js":"1","/Users/songjisu/Desktop/bread_service/src/reportWebVitals.js":"2","/Users/songjisu/Desktop/bread_service/src/components/redux/store.js":"3","/Users/songjisu/Desktop/bread_service/src/App.jsx":"4","/Users/songjisu/Desktop/bread_service/src/components/redux/root-reducer.js":"5","/Users/songjisu/Desktop/bread_service/src/layout.js":"6","/Users/songjisu/Desktop/bread_service/src/utils/common.js":"7","/Users/songjisu/Desktop/bread_service/src/utils/axios.js":"8","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.actions.js":"9","/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content.jsx":"10","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content.jsx":"11","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content.jsx":"12","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread.jsx":"13","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.reducer.js":"14","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.types.js":"15","/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer.jsx":"16","/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header.jsx":"17","/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content_style.jsx":"18","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content_style.jsx":"19","/Users/songjisu/Desktop/bread_service/src/components/common-component/social.jsx":"20","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content_style.jsx":"21","/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_component.jsx":"22","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread_style.jsx":"23","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.selectors.js":"24","/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer_style.jsx":"25","/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header_style.jsx":"26","/Users/songjisu/Desktop/bread_service/src/components/common-component/breadShop_li_component.jsx":"27","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/bread-shop-reducer.js":"28","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.reducer.js":"29","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.types.js":"30","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.selectors.js":"31","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.actions.js":"32","/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.reducer.js":"33","/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.types.js":"34","/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.actions.js":"35","/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.selectors.js":"36","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_rangking.jsx":"37","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_rangking_style.jsx":"38","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.reducer.js":"39","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.types.js":"40","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.selectors.js":"41","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.actions.js":"42","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_router.jsx":"43","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/detail/breadShop_detail.jsx":"44","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/detail/breadShop_detail_style.jsx":"45","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.reducer.js":"46","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.types.js":"47","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.selectors.js":"48","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.actions.js":"49","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/comment.jsx":"50","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/comment_style.jsx":"51","/Users/songjisu/Desktop/bread_service/src/components/common-component/review/review.jsx":"52","/Users/songjisu/Desktop/bread_service/src/components/common-component/review/review_style.jsx":"53","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/second-recomment/second_recomment.jsx":"54","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/second-recomment/second_recomment_style.jsx":"55","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/first-commend/first_commend_style.jsx":"56","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/first-commend/first_commend.jsx":"57","/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_style.jsx":"58","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/bread_router.jsx":"59","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/detail/bread_detail.jsx":"60","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/detail/bread_detail_style.jsx":"61","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/bread_popular.jsx":"62","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/bread_popular_style.jsx":"63","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/list/bread.selectors.js":"64","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/list/bread.actions.js":"65","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/list/bread.types.js":"66","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/list/bread.reducer.js":"67","/Users/songjisu/Desktop/bread_service/src/components/redux/comment/bread_breadShopComment.reducer.js":"68","/Users/songjisu/Desktop/bread_service/src/components/redux/comment/bread_breadShopComment.types.js":"69","/Users/songjisu/Desktop/bread_service/src/components/redux/comment/bread_breadShopComment.selectors.js":"70","/Users/songjisu/Desktop/bread_service/src/components/redux/comment/bread_breadShopComment.actions.js":"71","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/bread-reducer.js":"72","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/detail/breadDetail.reducer.js":"73","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/detail/breadDetail.types.js":"74","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/detail/breadDetail.selectors.js":"75","/Users/songjisu/Desktop/bread_service/src/components/redux/bread/detail/breadDetail.actions.js":"76","/Users/songjisu/Desktop/bread_service/src/components/redux/youtube/youtube.reducer.js":"77","/Users/songjisu/Desktop/bread_service/src/components/redux/youtube/youtube.types.js":"78","/Users/songjisu/Desktop/bread_service/src/components/redux/youtube/youtube.selectors.js":"79","/Users/songjisu/Desktop/bread_service/src/components/redux/youtube/youtube.actions.js":"80","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/notice/notice.jsx":"81","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/notice/notice_style.jsx":"82","/Users/songjisu/Desktop/bread_service/src/styles/theme.js":"83","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/community.jsx":"84","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/event/event.jsx":"85","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/community_style.jsx":"86","/Users/songjisu/Desktop/bread_service/src/components/redux/community/community.reducer.js":"87","/Users/songjisu/Desktop/bread_service/src/components/redux/community/community.types.js":"88","/Users/songjisu/Desktop/bread_service/src/components/redux/community/community.actions.js":"89","/Users/songjisu/Desktop/bread_service/src/components/redux/community/community.selectors.js":"90","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/event/event_style.jsx":"91","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/notice/notice_downPage.jsx":"92","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/notice/notice_downPage_style.jsx":"93","/Users/songjisu/Desktop/bread_service/src/components/common-component/breadShop_li_style.jsx":"94"},{"size":822,"mtime":1621844041007,"results":"95","hashOfConfig":"96"},{"size":364,"mtime":1612334723393,"results":"97","hashOfConfig":"96"},{"size":382,"mtime":1616310023501,"results":"98","hashOfConfig":"96"},{"size":2248,"mtime":1622469084332,"results":"99","hashOfConfig":"96"},{"size":705,"mtime":1622469084338,"results":"100","hashOfConfig":"96"},{"size":446,"mtime":1616310023510,"results":"101","hashOfConfig":"96"},{"size":1016,"mtime":1618990775795,"results":"102","hashOfConfig":"96"},{"size":277,"mtime":1618227466844,"results":"103","hashOfConfig":"96"},{"size":264,"mtime":1621053723018,"results":"104","hashOfConfig":"96"},{"size":3386,"mtime":1621326983894,"results":"105","hashOfConfig":"96"},{"size":3916,"mtime":1621326983895,"results":"106","hashOfConfig":"96"},{"size":5522,"mtime":1623247751436,"results":"107","hashOfConfig":"96"},{"size":5344,"mtime":1623226969900,"results":"108","hashOfConfig":"96"},{"size":674,"mtime":1616310023501,"results":"109","hashOfConfig":"96"},{"size":118,"mtime":1616310023501,"results":"110","hashOfConfig":"96"},{"size":1555,"mtime":1623130825486,"results":"111","hashOfConfig":"96"},{"size":7021,"mtime":1623154802678,"results":"112","hashOfConfig":"96"},{"size":3029,"mtime":1616310023506,"results":"113","hashOfConfig":"96"},{"size":3735,"mtime":1622616854108,"results":"114","hashOfConfig":"96"},{"size":5091,"mtime":1616310023498,"results":"115","hashOfConfig":"96"},{"size":5012,"mtime":1623252542400,"results":"116","hashOfConfig":"96"},{"size":1854,"mtime":1623251097086,"results":"117","hashOfConfig":"96"},{"size":3700,"mtime":1623227886825,"results":"118","hashOfConfig":"96"},{"size":178,"mtime":1616310023501,"results":"119","hashOfConfig":"96"},{"size":1690,"mtime":1623130825487,"results":"120","hashOfConfig":"96"},{"size":5429,"mtime":1623130825490,"results":"121","hashOfConfig":"96"},{"size":2078,"mtime":1623154802674,"results":"122","hashOfConfig":"96"},{"size":373,"mtime":1621326983877,"results":"123","hashOfConfig":"96"},{"size":1860,"mtime":1620906313831,"results":"124","hashOfConfig":"96"},{"size":315,"mtime":1620744509237,"results":"125","hashOfConfig":"96"},{"size":423,"mtime":1620744509236,"results":"126","hashOfConfig":"96"},{"size":851,"mtime":1620744509233,"results":"127","hashOfConfig":"96"},{"size":406,"mtime":1618229030951,"results":"128","hashOfConfig":"96"},{"size":99,"mtime":1618229030952,"results":"129","hashOfConfig":"96"},{"size":162,"mtime":1618229030950,"results":"130","hashOfConfig":"96"},{"size":189,"mtime":1618229030952,"results":"131","hashOfConfig":"96"},{"size":11140,"mtime":1623154802675,"results":"132","hashOfConfig":"96"},{"size":5497,"mtime":1623249839228,"results":"133","hashOfConfig":"96"},{"size":1184,"mtime":1621326983878,"results":"134","hashOfConfig":"96"},{"size":311,"mtime":1620744509233,"results":"135","hashOfConfig":"96"},{"size":736,"mtime":1620744509233,"results":"136","hashOfConfig":"96"},{"size":477,"mtime":1621242856890,"results":"137","hashOfConfig":"96"},{"size":548,"mtime":1620744509246,"results":"138","hashOfConfig":"96"},{"size":5890,"mtime":1623250817696,"results":"139","hashOfConfig":"96"},{"size":4436,"mtime":1623251783915,"results":"140","hashOfConfig":"96"},{"size":1498,"mtime":1621326983879,"results":"141","hashOfConfig":"96"},{"size":269,"mtime":1620744509243,"results":"142","hashOfConfig":"96"},{"size":220,"mtime":1620744509242,"results":"143","hashOfConfig":"96"},{"size":616,"mtime":1620744509238,"results":"144","hashOfConfig":"96"},{"size":6390,"mtime":1622469084334,"results":"145","hashOfConfig":"96"},{"size":1080,"mtime":1623243853411,"results":"146","hashOfConfig":"96"},{"size":10435,"mtime":1623243527281,"results":"147","hashOfConfig":"96"},{"size":8265,"mtime":1623244927722,"results":"148","hashOfConfig":"96"},{"size":4899,"mtime":1621326983865,"results":"149","hashOfConfig":"96"},{"size":1061,"mtime":1620744509228,"results":"150","hashOfConfig":"96"},{"size":2075,"mtime":1621326983863,"results":"151","hashOfConfig":"96"},{"size":6892,"mtime":1621326983860,"results":"152","hashOfConfig":"96"},{"size":1348,"mtime":1623251168687,"results":"153","hashOfConfig":"96"},{"size":523,"mtime":1621844041003,"results":"154","hashOfConfig":"96"},{"size":3867,"mtime":1621326983887,"results":"155","hashOfConfig":"96"},{"size":1180,"mtime":1623136108972,"results":"156","hashOfConfig":"96"},{"size":3395,"mtime":1621844041002,"results":"157","hashOfConfig":"96"},{"size":1162,"mtime":1623160930052,"results":"158","hashOfConfig":"96"},{"size":184,"mtime":1621326983875,"results":"159","hashOfConfig":"96"},{"size":572,"mtime":1621326983873,"results":"160","hashOfConfig":"96"},{"size":203,"mtime":1621326983876,"results":"161","hashOfConfig":"96"},{"size":1385,"mtime":1621326983874,"results":"162","hashOfConfig":"96"},{"size":4434,"mtime":1621326983881,"results":"163","hashOfConfig":"96"},{"size":706,"mtime":1621326983883,"results":"164","hashOfConfig":"96"},{"size":383,"mtime":1621326983883,"results":"165","hashOfConfig":"96"},{"size":1594,"mtime":1621326983880,"results":"166","hashOfConfig":"96"},{"size":259,"mtime":1621326983867,"results":"167","hashOfConfig":"96"},{"size":979,"mtime":1621326983870,"results":"168","hashOfConfig":"96"},{"size":297,"mtime":1621326983872,"results":"169","hashOfConfig":"96"},{"size":312,"mtime":1621326983871,"results":"170","hashOfConfig":"96"},{"size":453,"mtime":1621326983869,"results":"171","hashOfConfig":"96"},{"size":642,"mtime":1621580596658,"results":"172","hashOfConfig":"96"},{"size":147,"mtime":1621580596662,"results":"173","hashOfConfig":"96"},{"size":187,"mtime":1621580596660,"results":"174","hashOfConfig":"96"},{"size":282,"mtime":1621580596658,"results":"175","hashOfConfig":"96"},{"size":3229,"mtime":1622469084354,"results":"176","hashOfConfig":"96"},{"size":1472,"mtime":1622469084356,"results":"177","hashOfConfig":"96"},{"size":260,"mtime":1622464059794,"results":"178","hashOfConfig":"96"},{"size":1869,"mtime":1622469084350,"results":"179","hashOfConfig":"96"},{"size":3074,"mtime":1622616854102,"results":"180","hashOfConfig":"96"},{"size":562,"mtime":1622469084351,"results":"181","hashOfConfig":"96"},{"size":1026,"mtime":1622469084337,"results":"182","hashOfConfig":"96"},{"size":232,"mtime":1622469084338,"results":"183","hashOfConfig":"96"},{"size":515,"mtime":1622469084335,"results":"184","hashOfConfig":"96"},{"size":279,"mtime":1622469084337,"results":"185","hashOfConfig":"96"},{"size":1482,"mtime":1622469084353,"results":"186","hashOfConfig":"96"},{"size":441,"mtime":1622469084355,"results":"187","hashOfConfig":"96"},{"size":163,"mtime":1622469084356,"results":"188","hashOfConfig":"96"},{"size":1132,"mtime":1623160930051,"results":"189","hashOfConfig":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},"2613yk",{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"192"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"192"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"192"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"192"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"192"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"192"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"192"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"192"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"192"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"192"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"192"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},"/Users/songjisu/Desktop/bread_service/src/index.js",[],["390","391","392","393","394","395"],"/Users/songjisu/Desktop/bread_service/src/reportWebVitals.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/store.js",[],"/Users/songjisu/Desktop/bread_service/src/App.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/root-reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/layout.js",[],"/Users/songjisu/Desktop/bread_service/src/utils/common.js",[],"/Users/songjisu/Desktop/bread_service/src/utils/axios.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content.jsx",["396"],"import React, { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport qs from 'qs';\nimport { Link } from 'react-router-dom';\n\nimport { setCurrentUser } from '../redux/user/user.actions';\nimport { sweetAlert, isEmailValid, errorhandler } from '../../utils/common';\nimport axios, { setAuthorization } from '../../utils/axios';\n\nimport { SigninAllWrap, InputEmail, InputPassword, LoginButton, SigninLine } from './signin_content_style';\nimport Social from '../common-component/social';\n\nfunction Signin({ onUserSet, history, location }) {\n  const [LoginValue, setLoginValue] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = LoginValue;\n\n  useEffect(() => {\n    const bringUserToken = localStorage.getItem('userToken');\n    if (bringUserToken) {\n      history.replace('/');\n    }\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const signinObject = {\n        email,\n        password\n      };\n\n      if (!email) {\n        sweetAlert('이메일을 입력해주세요.');\n      } else if (isEmailValid(email)) {\n        sweetAlert('이메일 형식을 맞춰주세요.');\n      } else if (!password) {\n        sweetAlert('비밀번호를 입력해주세요.');\n      } else {\n        const { status, data } = await axios.post('/user/signin', signinObject);\n        if (status === 200) {\n          const {\n            data: { token }\n          } = data;\n          setAuthorization(token);\n\n          const { status: signinStatus, data: getData } = await axios.get('/user/current');\n          if (signinStatus === 200) {\n            onUserSet(getData.data, token);\n            const query = qs.parse(location.search, {\n              ignoreQueryPrefix: true\n            });\n            history.push(query?.moveAddress || '/');\n          }\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    setLoginValue({\n      ...LoginValue,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <SigninAllWrap>\n      <div className=\"login-wrap\">\n        <form className=\"form_wrap\" onSubmit={handleSubmit}>\n          <h3>로그인</h3>\n\n          <InputEmail>\n            <span>이메일</span>\n            <input type=\"text\" placeholder=\"이메일 입력\" onChange={handleChange} name=\"email\" value={email} />\n          </InputEmail>\n\n          <InputPassword>\n            <span>비밀번호</span>\n            <input type=\"password\" placeholder=\"비밀번호 입력\" onChange={handleChange} name=\"password\" value={password} />\n          </InputPassword>\n\n          <LoginButton>\n            <button type=\"submit\">로그인</button>\n          </LoginButton>\n          <Link to={`/signup${location.search}`}>\n            <button type=\"button\">회원가입</button>\n          </Link>\n        </form>\n        <SigninLine>\n          <span>또는</span>\n          <hr />\n        </SigninLine>\n\n        <Social />\n      </div>\n    </SigninAllWrap>\n  );\n}\n\nSignin.propTypes = {\n  onUserSet: PropTypes.func.isRequired,\n  history: PropTypes.instanceOf(Object).isRequired,\n  location: PropTypes.instanceOf(Object).isRequired\n};\n\nconst userToPropsDispatch = (dispatch) => ({\n  onUserSet: (user, token) => dispatch(setCurrentUser(user, token))\n});\n\nexport default connect(null, userToPropsDispatch)(Signin);\n","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content.jsx",["397"],"/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\nimport { Link } from 'react-router-dom';\n\nimport { errorhandler } from '../../../../utils/common';\nimport BreadLi from '../../../common-component/bread_li_component';\nimport BreadShopLi from '../../../common-component/breadShop_li_component';\n\nimport { selectShopList } from '../../../redux/breadshop/list/breadShop.selectors';\nimport { setCurrentBreadShop, setShopTrueData, setShopFalseData } from '../../../redux/breadshop/list/breadShop.actions';\n\nimport { selectBreadList } from '../../../redux/bread/list/bread.selectors';\nimport { setBreadRankingList, setHeartTrueData, setHeartFalseData } from '../../../redux/bread/list/bread.actions';\n\nimport { selectEventSwiper } from '../../../redux/main/main.selectors';\nimport { setEventSwiper } from '../../../redux/main/main.actions';\nimport axios from '../../../../utils/axios';\nimport { Main, MainBackground, BreadShopRanking, BreadShopList } from './mainhome_content_style';\n\nconst MainHome = ({\n  breadShopList,\n  onBreadShopList,\n  onBreadShopTrue,\n  onBreadShopFalse,\n\n  breadList,\n  onBreadList,\n  onBreadHeartTrue,\n  onBreadHeartFalse,\n\n  eventList,\n  onEventList\n}) => {\n  useEffect(() => {\n    async function fetchBreadData() {\n      try {\n        const { status, data: breadData } = await axios.get('/rank/bread');\n\n        if (status === 200) {\n          onBreadList(breadData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n\n    async function fetchEventBanner() {\n      try {\n        const { status, data: eventData } = await axios.get('/banner/event');\n\n        if (status === 200) {\n          onEventList(eventData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n\n    async function fetchBreadShopData() {\n      try {\n        const { status, data: breadShopData } = await axios.get('/rank/bread/shop');\n        if (status === 200) {\n          onBreadShopList(breadShopData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchBreadData();\n    fetchEventBanner();\n    fetchBreadShopData();\n  }, []);\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    autoplay: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return (\n    <Main>\n      <div>\n        <MainBackground>\n          <Slider {...settings}>\n            {eventList.map((listData) => (\n              <img src={listData.imageUrl} alt={listData.title} />\n            ))}\n          </Slider>\n        </MainBackground>\n\n        {/* 빵집!!! */}\n        <BreadShopRanking>\n          <h1>빵집 랭킹</h1>\n          <div className=\"all_show\">\n            <Link to=\"/bread-house\">\n              <span>모두보기</span>\n            </Link>\n            <span className=\"triangle\" />\n          </div>\n        </BreadShopRanking>\n\n        <BreadShopList>\n          <ul className=\"list_wrap\">\n            {breadShopList.map((breadShopData) => (\n              <BreadShopLi key={`breadShop_list-${breadShopData.id}`} shopList={breadShopData} shopSeverLike={breadShopData.like} shopId={breadShopData.id} likeTrue={onBreadShopTrue} likeFalse={onBreadShopFalse} />\n            ))}\n          </ul>\n        </BreadShopList>\n      </div>\n\n      {/* 빵!!!!! */}\n      <div className=\"breadRankingWrap\">\n        <BreadShopRanking>\n          <h1 className=\"webSize\">요즘 인기있는 빵 랭킹</h1>\n          <h1 className=\"mobileSize\">인기있는 빵 랭킹</h1>\n          <div className=\"all_show\">\n            <Link to=\"/bread\">\n              <span>모두보기</span>\n            </Link>\n            <span className=\"triangle\" />\n          </div>\n        </BreadShopRanking>\n\n        <BreadShopList>\n          <ul className=\"list_wrap\">\n            {breadList.map((list) => (\n              <BreadLi key={`bread_li_list-${list.id}`} likeTrue={onBreadHeartTrue} likeFalse={onBreadHeartFalse} breadList={list} />\n            ))}\n          </ul>\n        </BreadShopList>\n      </div>\n    </Main>\n  );\n};\n\nMainHome.propTypes = {\n  breadShopList: PropTypes.instanceOf(Array).isRequired,\n  onBreadShopList: PropTypes.func.isRequired,\n  onBreadShopTrue: PropTypes.func.isRequired,\n  onBreadShopFalse: PropTypes.func.isRequired,\n\n  breadList: PropTypes.instanceOf(Array).isRequired,\n  onBreadList: PropTypes.func.isRequired,\n  onBreadHeartTrue: PropTypes.func.isRequired,\n  onBreadHeartFalse: PropTypes.func.isRequired,\n\n  eventList: PropTypes.instanceOf(Array).isRequired,\n  onEventList: PropTypes.func.isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadShopList: selectShopList,\n  breadList: selectBreadList,\n  eventList: selectEventSwiper\n});\n\nconst breadShopDispathchToProps = (dispatch) => ({\n  onBreadShopList: (breadShop) => dispatch(setCurrentBreadShop(breadShop)),\n  onBreadShopTrue: (trueBreadShop) => dispatch(setShopTrueData(trueBreadShop)),\n  onBreadShopFalse: (falseBreadShop) => dispatch(setShopFalseData(falseBreadShop)),\n\n  onBreadList: (bread) => dispatch(setBreadRankingList(bread)),\n  onBreadHeartTrue: (trueBreadId) => dispatch(setHeartTrueData(trueBreadId)),\n  onBreadHeartFalse: (falseBreadId) => dispatch(setHeartFalseData(falseBreadId)),\n\n  onEventList: (event) => dispatch(setEventSwiper(event))\n});\n\nexport default connect(breadStateToProps, breadShopDispathchToProps)(MainHome);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread.jsx",["398"],"import React, { useEffect, useState } from 'react';\nimport Youtube from 'react-youtube';\nimport { createStructuredSelector } from 'reselect';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport qs from 'qs';\n\nimport axios from '../../../../utils/axios';\nimport { errorhandler } from '../../../../utils/common';\nimport { BreadPickWrap, YoutubePickEvent, StyledSlider, PickBreadTitle, PickBreadOdd, PickBreadEven } from './youtube_bread_style';\nimport { setYoutubeList, setYoutubePagination } from '../../../redux/youtube/youtube.actions';\nimport { selectYoutubeList } from '../../../redux/youtube/youtube.selectors';\n\nconst limit = 2;\n\nconst YoutubePickBread = ({ youtubePickBreadList, youtubePickList, location, youtubePagination }) => {\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n\n  useEffect(() => {\n    async function fetchyoutubeData() {\n      try {\n        const { status, data } = await axios.get(`/youtube?page=${page}&limit=${limit}`);\n\n        if (status === 200) {\n          youtubePickList(data.list);\n          setHasMore(data.pagination.currentPage !== data.pagination.totalPage);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n\n    fetchyoutubeData();\n  }, []);\n\n  const opts = {\n    width: '553',\n    height: '311',\n    playerVars: {\n      // autoplay: 1\n    }\n  };\n\n  const onReady = (e) => {\n    e.target.pauseVideo();\n  };\n\n  //   responsive: [\n  //     // 반응형 웹 구현 옵션\n  //     {\n  //       breakpoint: 1200, // 화면 사이즈 1200px\n  //       settings: {\n  //         slidesToShow: 3\n  //       }\n  //     },\n  //     {\n  //       breakpoint: 1023,\n  //       settings: {\n  //         slidesToShow: 3\n  //       }\n  //     },\n  //     {\n  //       breakpoint: 767,\n  //       settings: {\n  //         slidesToShow: 1\n  //       }\n  //     }\n  //   ]\n  // };\n\n  // 스크롤(pagination)\n  const fetMoreData = async () => {\n    try {\n      const query = qs.parse(location.search, {\n        ignoreQueryPrefix: true\n      });\n\n      const queryObject = { ...query };\n      queryObject.page = String(page + 1);\n      queryObject.limit = String(limit);\n      const queryData = qs.stringify(queryObject);\n      const { status, data } = await axios.get(`/youtube?${queryData}`);\n      if (status === 200) {\n        youtubePagination(data.list);\n        setPage(page + 1);\n        if (data.pagination.currentPage === data.pagination.totalPage) {\n          setHasMore(false);\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  return (\n    <BreadPickWrap>\n      <YoutubePickEvent />\n\n      <PickBreadTitle>\n        <span>유튜버들이 선택한 빵을 즐겨보세요</span>\n      </PickBreadTitle>\n\n      <StyledSlider>\n        {/* @ts-ignore */}\n        <InfiniteScroll dataLength={youtubePickBreadList.length} next={fetMoreData} hasMore={hasMore} scrollThreshold=\"50px\">\n          {youtubePickBreadList.map((list, index) => {\n            if (index % 2 === 0) {\n              return (\n                <PickBreadOdd>\n                  <div className=\"VideoContainer\">\n                    <Youtube className=\"youtubeVideo\" videoId={list.link.replace('https://www.youtube.com/embed/', '')} opts={opts} onReady={onReady} />\n                  </div>\n\n                  <div className=\"pick_title\">\n                    <span>{list?.title}</span>\n                    <span>{list?.content}</span>\n                    <button type=\"button\" className=\"show_button\">\n                      <a href={list?.link} target=\"_blank\" rel=\"noreferrer\">\n                        리뷰 보러가기\n                      </a>\n                    </button>\n                  </div>\n                </PickBreadOdd>\n              );\n            }\n            return (\n              <PickBreadEven>\n                <div className=\"VideoContainer_even\">\n                  <Youtube className=\"youtubeVideo_even\" videoId={list.link.replace('https://www.youtube.com/embed/', '')} opts={opts} onReady={onReady} />\n                </div>\n                <div className=\"pick_title_even\">\n                  <span>{list.title}</span>\n                  <span>{list.content}</span>\n                  <button type=\"button\" className=\"show_button_even\">\n                    <a href={list?.link} target=\"_blank\" rel=\"noreferrer\">\n                      리뷰 보러가기\n                    </a>\n                  </button>\n                </div>\n              </PickBreadEven>\n            );\n          })}\n        </InfiniteScroll>\n      </StyledSlider>\n    </BreadPickWrap>\n  );\n};\n\nYoutubePickBread.defaultProps = {\n  youtubePickBreadList: null\n};\n\nYoutubePickBread.propTypes = {\n  youtubePickBreadList: PropTypes.instanceOf(Object),\n  youtubePickList: PropTypes.func.isRequired,\n  location: PropTypes.instanceOf(Object).isRequired,\n  youtubePagination: PropTypes.func.isRequired\n};\n\nconst youtubePickStateToProps = createStructuredSelector({\n  youtubePickBreadList: selectYoutubeList\n});\n\nconst youtubePickDispathch = (dispatch) => ({\n  youtubePickList: (list) => dispatch(setYoutubeList(list)),\n  youtubePagination: (list) => dispatch(setYoutubePagination(list))\n});\n\nexport default connect(youtubePickStateToProps, youtubePickDispathch)(YoutubePickBread);\n","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/social.jsx",["399","400"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport KakaoLogin from 'react-kakao-login';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\n\nimport axios, { setAuthorization } from '../../utils/axios';\nimport { errorhandler } from '../../utils/common';\nimport { setCurrentUser } from '../redux/user/user.actions';\nimport { SosalLogin, GoogleWrap, FacebookWrap, KakaoWrap } from '../sign-in/signin_content_style';\n\n// 소셜 로그인\nconst kakaoToken = process.env.REACT_APP_KAKAO_KEY;\nconst facebookToken = process.env.REACT_APP_FACEBOOK_KEY;\nconst googleToken = process.env.REACT_APP_GOOGLE_KEY;\n\nconst Social = ({ onUserSet, history }) => {\n  // 카카오\n  const onSuccess = async (userData) => {\n    try {\n      const { access_token: accessToken } = userData.response;\n\n      const socialObject = {\n        token: accessToken,\n        type: 'kakao'\n      };\n\n      const { data } = await axios.post('/user/social/signup', socialObject);\n\n      const {\n        data: { token }\n      } = data;\n\n      setAuthorization(token);\n\n      // 서버에서 누구인지 받아오는곳\n      const { status, data: getData } = await axios.get('/user/current');\n      if (status === 201) {\n        onUserSet(getData.data, token);\n        history.push('/');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 구글\n  const responseGoogle = async (response) => {\n    try {\n      if (!response.error) {\n        const { accessToken: googleAccessToken } = response;\n\n        const socialObject = {\n          token: googleAccessToken,\n          type: 'google'\n        };\n\n        const { data } = await axios.post('/user/social/signup', socialObject);\n\n        const {\n          data: { token }\n        } = data;\n\n        setAuthorization(token);\n\n        // 서버에서 누구인지 받아오는곳\n        const { status, data: getData } = await axios.get('/user/current');\n        if (status === 201) {\n          onUserSet(getData.data, token);\n          history.push('/');\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 페이스북\n  const responseFacebook = async (response) => {\n    try {\n      const { accessToken: facebookAccessToken } = response;\n\n      const socialObject = {\n        token: facebookAccessToken,\n        type: 'facebook'\n      };\n\n      const {\n        data: {\n          data: { token }\n        }\n      } = await axios.post('/user/social/signup', socialObject);\n\n      setAuthorization(token);\n\n      // 서버에서 누구인지 받아오는곳\n      const { status, data: facebookData } = await axios.get('/user/current');\n      if (status === 201) {\n        onUserSet(facebookData.data, token);\n        history.push('/');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  return (\n    <SosalLogin className=\"clearfix\">\n      <GoogleWrap>\n        <GoogleLogin\n          clientId={googleToken}\n          render={(renderProps) => (\n            <button onClick={renderProps.onClick} disabled={renderProps.disabled} type=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/google.png\"\n                alt=\"구글 로그인\"\n              />\n              <span>구글</span>\n            </button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy=\"single_host_origin\"\n        />\n      </GoogleWrap>\n\n      <FacebookWrap>\n        <FacebookLogin\n          appId={facebookToken}\n          callback={responseFacebook}\n          fields=\"name,email,picture\"\n          render={(renderProps) => (\n            <button onClick={renderProps.onClick} type=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/socalfacebook.png\"\n                alt=\"페이스북 로그인\"\n              />\n              <span>페이스북</span>\n            </button>\n          )}\n        />\n      </FacebookWrap>\n\n      <KakaoWrap>\n        <KakaoLogin\n          token={kakaoToken}\n          onSuccess={onSuccess}\n          onFail={console.error}\n          onLogout={console.info}\n          render={({ onClick }) => (\n            <div onClick={onClick} aria-hidden=\"true\" role=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/ico_kakaotalk.png\"\n                alt=\"카카오톡 로그인\"\n              />\n              <span>카카오톡</span>\n            </div>\n          )}\n        />\n      </KakaoWrap>\n    </SosalLogin>\n  );\n};\n\nSocial.propTypes = {\n  onUserSet: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.object).isRequired\n};\n\nconst userToPropsDispatch = (dispatch) => ({\n  onUserSet: (user, token) => dispatch(setCurrentUser(user, token))\n});\n\nexport default connect(null, userToPropsDispatch)(Social);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_component.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/breadShop_li_component.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/bread-shop-reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_rangking.jsx",["401"],"/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport qs from 'qs';\n\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport BreadShopLi from '../../../common-component/breadShop_li_component';\n\nimport axios from '../../../../utils/axios';\nimport { errorhandler, sweetAlert } from '../../../../utils/common';\n\nimport { selectShopList, selectAddress, selectdongAddress } from '../../../redux/breadshop/list/breadShop.selectors';\nimport { setCurrentBreadShop, setCurrentBreadShopMore, setShopTrueData, setShopFalseData, setSiAddressData, setDongAddressData } from '../../../redux/breadshop/list/breadShop.actions';\n\nimport { HouseRangkingWrap, ShopRangking, Location, SelectWrap, City, CurrentLocation, LocationText, RangkingList, LocationWrap } from './breadShop_rangking_style';\n\n/**\n * @author 송지수\n * @email tndms951@naver.com\n * @create date 2021-03-21 15:42:55\n * @modify date 2021-03-21 15:42:55\n * @desc [breadShop컴포넌트]\n */\n\nconst limit = 20;\n\n// eslint-disable-next-line no-unused-vars\nconst HouseRangking = ({ breadShopList, onBreadShopList, onBreadShopPagination, onBreadShopTrue, onBreadShopFalse, siAddressList, onAddressSi, dongAddressList, onAddressDong, location, history }) => {\n  const [hasMore, setHasmore] = useState(true);\n\n  const [siList, setSiList] = useState({\n    id: -1,\n    name: '시.도'\n  });\n\n  const [guvalue, setGuvalue] = useState({\n    id: 0, // -1은 설정이 되어있어있어서 0으로 바꿈 0빼고 나머지 숫자는 다 true 이기때문에 0은 false\n    name: '구'\n  });\n\n  const [page, setPage] = useState(1);\n\n  const [addressName, setAddressName] = useState('전체');\n\n  useEffect(() => {\n    async function fetchShopData() {\n      const query = qs.parse(location.search, {\n        ignoreQueryPrefix: true\n      });\n      const newQuery = { ...query };\n      newQuery.page = String(1);\n      newQuery.limit = String(limit);\n\n      const queryData = qs.stringify(newQuery);\n\n      try {\n        const { status, data: breadShopData } = await axios.get(`/bread/shop?${queryData}`);\n\n        if (status === 200) {\n          setPage(1);\n          onBreadShopList(breadShopData.list);\n          setAddressName(breadShopData.data.addressName);\n          setHasmore(breadShopData.pagination.currentPage !== breadShopData.pagination.totalPage);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n\n    fetchShopData();\n\n    const query = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    });\n\n    if (!query.si_code) {\n      setSiList({\n        id: -1,\n        name: '시.도'\n      });\n    }\n    if (!query.gu_code) {\n      setGuvalue({\n        id: 0,\n        name: '구'\n      });\n    }\n  }, [location.search, onAddressSi, onBreadShopList]);\n\n  useEffect(() => {\n    const query = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    });\n    async function fetchSiAddress() {\n      try {\n        const { status, data } = await axios.get('/util/address/si');\n\n        if (status === 200) {\n          onAddressSi(data.list);\n          if (query.si_code) {\n            const valueId = data.list.find((value) => value.id === Number(query.si_code));\n            if (valueId) {\n              setSiList(valueId);\n            }\n          }\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n\n    async function fetchGuAddress(siCodeId) {\n      try {\n        const { status, data } = await axios.get(`/util/address/gu/${siCodeId}`);\n\n        if (status === 200) {\n          onAddressDong(data.list);\n        }\n\n        if (query.gu_code) {\n          const valueId = data.list.find((value) => value.id === Number(query.gu_code));\n          if (valueId) {\n            setGuvalue(valueId);\n          }\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchSiAddress();\n\n    if (query.si_code) {\n      fetchGuAddress(query.si_code);\n    }\n\n    // 이벤트를 따로 빼야 removeEventListener함수가 먹음!\n    // const scrollEvent = (e) => {\n    //   console.log(e);\n    //   console.log(window.scrollY);\n    // };\n\n    // 스크롤 이벤트\n    // window.addEventListener('scroll', scrollEvent);\n\n    // 리턴을 하는 이유는 컴포넌트 파괴 예외처리때문에 하는거임!\n    // return () => {\n    //   console.log('파괴!!');\n    //   window.removeEventListener('scroll', scrollEvent);\n    // };\n  }, []);\n\n  const handleClickSi = async (address) => {\n    const query = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    });\n    const queryObject = { ...query };\n    delete queryObject.gu_code;\n    queryObject.si_code = address.id;\n\n    const queryData = qs.stringify(queryObject);\n    setSiList(address);\n    setGuvalue({\n      id: 0,\n      name: '구'\n    });\n    history.push(`${location.pathname}${queryData ? `?${queryData}` : ''}`);\n    try {\n      const { status, data } = await axios.get(`/util/address/gu/${address.id}`);\n\n      if (status === 200) {\n        onAddressDong(data.list);\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const handleClickGu = async (address) => {\n    try {\n      const query = qs.parse(location.search, {\n        ignoreQueryPrefix: true\n      });\n      const queryObject = { ...query };\n      queryObject.gu_code = address.id;\n      const queryData = qs.stringify(queryObject);\n      history.push(`${location.pathname}${queryData ? `?${queryData}` : ''}`);\n\n      setGuvalue(address);\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const successGeo = (position) => {\n    const query = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    });\n    const queryObject = { ...query };\n    delete queryObject.si_code;\n    delete queryObject.gu_code;\n\n    setSiList({\n      id: -1,\n      name: '시.도'\n    });\n    setGuvalue({\n      id: 0,\n      name: '구'\n    });\n\n    const { latitude, longitude } = position.coords;\n    queryObject.lat = String(latitude);\n    queryObject.lon = String(longitude);\n\n    const queryData = qs.stringify(queryObject);\n    history.push(`${location.pathname}?${queryData}`);\n  };\n\n  const errorGeo = () => {\n    sweetAlert('위치정보를 받아오지 못했습니다.');\n  };\n\n  const handleLocal = () => {\n    if (window.navigator.geolocation) {\n      window.navigator.geolocation.getCurrentPosition(successGeo, errorGeo);\n    } else {\n      sweetAlert('위치정보를 받아오지 못했습니다.');\n    }\n  };\n\n  // 스크롤pagination\n  const fetchMoreData = async () => {\n    try {\n      const query = qs.parse(location.search, {\n        ignoreQueryPrefix: true\n      });\n      const queryObject = { ...query };\n      queryObject.page = String(page + 1);\n      queryObject.limit = String(limit);\n      const queryData = qs.stringify(queryObject);\n      const { status, data: breadShopData } = await axios.get(`/bread/shop?${queryData}`);\n      if (status === 200) {\n        onBreadShopPagination(breadShopData.list);\n        setPage(page + 1);\n        if (breadShopData.pagination.currentPage === breadShopData.pagination.totalPage) {\n          setHasmore(false);\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  return (\n    <HouseRangkingWrap>\n      <ShopRangking>\n        <h1>빵집 랭킹</h1>\n      </ShopRangking>\n\n      <LocationWrap>\n        <Location>\n          <CurrentLocation>\n            <button type=\"button\">\n              <img src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/search.png\" alt=\"\" />\n              <span onClick={handleLocal} aria-hidden=\"true\" role=\"button\">\n                현재 위치로 설정\n              </span>\n            </button>\n          </CurrentLocation>\n        </Location>\n\n        <SelectWrap>\n          <City>\n            <details className=\"custom-select\">\n              <summary className=\"radios\">\n                <input type=\"radio\" name=\"city\" id=\"default\" title={siList.name} checked />\n              </summary>\n              <ul className=\"list\">\n                {siAddressList.map((address) => (\n                  <li key={`siAddress-${address.id}`} onClick={() => handleClickSi(address)} onKeyPress={handleClickSi} role=\"presentation\">\n                    <label>{address.name}</label>\n                  </li>\n                ))}\n              </ul>\n            </details>\n          </City>\n\n          <City>\n            <details className=\"custom-select\">\n              <summary className=\"radios\">\n                <input type=\"radio\" name=\"dong\" id=\"default\" title={guvalue.name} checked />\n              </summary>\n              <ul className=\"list\">\n                {dongAddressList.map((address) => (\n                  <li key={`dongAddress-${address.id}`} onClick={() => handleClickGu(address)} onKeyPress={handleClickSi} role=\"presentation\">\n                    <label>{address.name}</label>\n                  </li>\n                ))}\n              </ul>\n            </details>\n          </City>\n        </SelectWrap>\n      </LocationWrap>\n\n      <LocationText>\n        <span>{addressName} 빵집 랭킹</span>\n      </LocationText>\n\n      <RangkingList>\n        {/* @ts-ignore */}\n        <InfiniteScroll dataLength={breadShopList.length} next={fetchMoreData} hasMore={hasMore} scrollThreshold=\"50px\">\n          <ul className=\"list_wrap\">\n            {breadShopList.map((breadShopData) => (\n              <BreadShopLi shopList={breadShopData} shopSeverLike={breadShopData.like} shopId={breadShopData.id} likeTrue={onBreadShopTrue} likeFalse={onBreadShopFalse} />\n            ))}\n          </ul>\n        </InfiniteScroll>\n      </RangkingList>\n    </HouseRangkingWrap>\n  );\n};\n\nHouseRangking.propTypes = {\n  breadShopList: PropTypes.instanceOf(Array).isRequired,\n  onBreadShopList: PropTypes.func.isRequired,\n  onBreadShopPagination: PropTypes.func.isRequired,\n  onBreadShopTrue: PropTypes.func.isRequired,\n  onBreadShopFalse: PropTypes.func.isRequired,\n  siAddressList: PropTypes.instanceOf(Array).isRequired,\n  onAddressSi: PropTypes.func.isRequired,\n  dongAddressList: PropTypes.instanceOf(Array).isRequired,\n  onAddressDong: PropTypes.func.isRequired,\n  location: PropTypes.instanceOf(Object).isRequired,\n  history: PropTypes.instanceOf(Object).isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadShopList: selectShopList,\n  siAddressList: selectAddress,\n  dongAddressList: selectdongAddress\n});\n\nconst breadShopDispathchToProps = (dispatch) => ({\n  onBreadShopList: (breadShop) => dispatch(setCurrentBreadShop(breadShop)),\n  onBreadShopPagination: (list) => dispatch(setCurrentBreadShopMore(list)),\n  onBreadShopTrue: (trueBreadShop) => dispatch(setShopTrueData(trueBreadShop)),\n  onBreadShopFalse: (falseBreadShop) => dispatch(setShopFalseData(falseBreadShop)),\n  onAddressSi: (addressSi) => dispatch(setSiAddressData(addressSi)),\n  onAddressDong: (addressDong) => dispatch(setDongAddressData(addressDong))\n});\n\nexport default connect(breadStateToProps, breadShopDispathchToProps)(HouseRangking);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_rangking_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detail/breadShopDetail.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_router.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/detail/breadShop_detail.jsx",["402"],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/detail/breadShop_detail_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/review/review.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/comment.jsx",["403"],"/* eslint-disable no-nested-ternary */\n/* eslint-disable no-shadow */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\n\nimport { CommentWrap, CommentBox, MoreButton } from './comment_style';\nimport RegisterComment from './first-commend/first_commend';\nimport axios from '../../../utils/axios';\nimport { errorhandler } from '../../../utils/common';\nimport { setShopDetailComment, setShopDetailCommentMore, setRegisterComment, setCommentModify, setCommentDelete } from '../../redux/comment/bread_breadShopComment.actions';\nimport { selectShopComment, selectShopCommentPagnaition } from '../../redux/comment/bread_breadShopComment.selectors';\n\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\n\nconst limit = 20;\n\nconst Comment = ({ match, onDetailComment, onDetailCommentMore, onRegisterComment, onCommentModify, onCommentDelete, shopDetailComment, shopCommentPagnaition, type, currentUser, history, location }) => {\n  // 댓글등록\n  const [comment, setComment] = useState('');\n  const { breadShopId } = match;\n  const { breadId } = match;\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    async function fetchDetailComment() {\n      try {\n        if (type === 'breadHouseType') {\n          const { status, data } = await axios.get(`/comment/bread/shop/${breadShopId}?page=${page}&limit=${limit}`);\n\n          if (status === 200) {\n            onDetailComment(data.list, data.pagination);\n          }\n        } else if (type === 'breadType') {\n          const { data, status } = await axios.get(`/comment/bread/${breadId}`);\n\n          if (status === 200) {\n            onDetailComment(data.list, data.pagination);\n          }\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchDetailComment();\n  }, []);\n\n  // 댓글 핸들체인지1\n  const handleComment = (e) => {\n    setComment(e.target.value);\n  };\n\n  // 댓글등록\n  const registerSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (type === 'breadHouseType') {\n        const commentObject = {\n          content: comment\n        };\n        const { status, data } = await axios.post(`/comment/bread/shop/${breadShopId}`, commentObject);\n\n        if (status === 201) {\n          onRegisterComment(data.data);\n          setComment('');\n        }\n      } else if (type === 'breadType') {\n        const commentObject = {\n          content: comment\n        };\n        const { status, data } = await axios.post(`/comment/bread/${breadId}`, commentObject);\n\n        if (status === 201) {\n          onRegisterComment(data.data);\n          setComment('');\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 더보기 버튼\n  const moreButtonClick = async () => {\n    try {\n      if (type === 'breadHouseType') {\n        const { status, data } = await axios.get(`/comment/bread/shop/${breadShopId}?page=${page + 1}&limit=${limit}`);\n\n        if (status === 200) {\n          onDetailCommentMore(data.list, data.pagination);\n          setPage(page + 1);\n        }\n      } else if (type === 'breadType') {\n        const { status, data } = await axios.get(`/comment/bread/${breadId}?page=${page + 1}&limit=${limit}`);\n        if (status === 200) {\n          onDetailCommentMore(data.list, data.pagination);\n          setPage(page + 1);\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 비로그인시 comment 클릭시 로그인페이지 이동\n  const loginClick = () => {\n    if (!currentUser) {\n      const comeAddress = encodeURIComponent(location.pathname + location.search);\n      history.push(`/signin?moveAddress=${comeAddress}`);\n    }\n  };\n\n  return (\n    <CommentWrap>\n      <CommentBox>\n        <h2>현재 {shopCommentPagnaition?.totalCount || '0'}개의 댓글</h2>\n        <form onSubmit={registerSubmit}>\n          <textarea placeholder={currentUser ? '댓글을 입력해 주세요.' : '로그인이 필요한 서비스입니다.'} onChange={handleComment} onClick={loginClick} readOnly={!currentUser} value={comment} name=\"comment\" />\n          <button type=\"submit\" className=\"registerButton\">\n            등록하기\n          </button>\n        </form>\n      </CommentBox>\n\n      {shopDetailComment.map((comment) => (\n        <RegisterComment key={`comment-${comment.id}`} comment={comment} onCommentModify={onCommentModify} onCommentDelete={onCommentDelete} breadShopId={breadShopId} type={type} breadId={breadId} />\n      ))}\n      {shopCommentPagnaition ? (\n        shopCommentPagnaition.currentPage !== shopCommentPagnaition.totalPage ? (\n          <MoreButton>\n            <button type=\"button\" onClick={moreButtonClick}>\n              더보기\n            </button>\n          </MoreButton>\n        ) : null\n      ) : null}\n    </CommentWrap>\n  );\n};\n\nComment.defaultProps = {\n  shopCommentPagnaition: null,\n  type: undefined,\n  currentUser: null,\n  history: undefined,\n  location: undefined\n};\n\nComment.propTypes = {\n  match: PropTypes.instanceOf(Object).isRequired,\n  shopDetailComment: PropTypes.instanceOf(Array).isRequired,\n  onRegisterComment: PropTypes.func.isRequired,\n  onDetailComment: PropTypes.func.isRequired,\n  onDetailCommentMore: PropTypes.func.isRequired,\n  onCommentModify: PropTypes.func.isRequired,\n  onCommentDelete: PropTypes.func.isRequired,\n  shopCommentPagnaition: PropTypes.instanceOf(Object),\n  type: PropTypes.string,\n  currentUser: PropTypes.instanceOf(Object),\n  history: PropTypes.instanceOf(Object),\n  location: PropTypes.instanceOf(Object)\n};\n\nconst detailCommentStateToProps = createStructuredSelector({\n  shopDetailComment: selectShopComment,\n  shopCommentPagnaition: selectShopCommentPagnaition,\n  currentUser: selectCurrentUser\n});\n\nconst detailCommentDispatch = (dispatch) => ({\n  onDetailComment: (comment, pagnation) => dispatch(setShopDetailComment(comment, pagnation)),\n  onDetailCommentMore: (comment, pagnation) => dispatch(setShopDetailCommentMore(comment, pagnation)),\n  onRegisterComment: (register) => dispatch(setRegisterComment(register)),\n  onCommentModify: (modify, commentId) => dispatch(setCommentModify(modify, commentId)),\n  onCommentDelete: (commentDelete) => dispatch(setCommentDelete(commentDelete))\n});\n\nexport default connect(detailCommentStateToProps, detailCommentDispatch)(Comment);\n","/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/comment_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/review/review.jsx",["404","405"],"import React, { useState, useRef, useEffect } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport Slider from 'react-slick';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { selectShopReview } from '../../redux/breadshop/review/review.selectors';\nimport { setBreadShopReview, setShopReviewWriting } from '../../redux/breadshop/review/review.actions';\nimport { ReviewWrapBox, ReviewWrap, ReviewText, Register, RegisterReviewWrap, RegisterReview, ImageMap, ImageWrap, CloseWrap, ReviewButton, ReviewSlid, ReviewBox, BoxButton, BoxLeft, Content, UserImage, ReviewModal } from './review_style';\nimport axios from '../../../utils/axios';\nimport { errorhandler, sweetAlert } from '../../../utils/common';\n\nconst Review = ({ match, shopDetailReview, onDetailReview, onDetailReviewWriting }) => {\n  console.log(shopDetailReview);\n  const { breadShopId } = match;\n\n  // 리뷰등록\n  const [writingReview, setWritingReview] = useState({\n    text: ''\n  });\n\n  const [writingImage, setWritingImage] = useState([]);\n\n  // 모달 이미지(매개변수받아옴)\n  const [modalImage, setModalImage] = useState([]);\n\n  // 리뷰 등록시 모달\n  const [openModal, setOpenModal] = useState(false);\n\n  // 등록후 이미지클릭 모달\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const el = useRef();\n\n  const { text } = writingReview;\n\n  useEffect(() => {\n    async function fetchDetailReview() {\n      try {\n        const { status, data: reviewData } = await axios.get(`/review/${breadShopId}`);\n\n        if (status === 200) {\n          onDetailReview(reviewData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchDetailReview();\n  }, []);\n\n  const reviewOpenModal = () => {\n    setOpenModal(true);\n    document.body.style.overflow = 'hidden';\n  };\n  const reviewCloseModal = () => {\n    setOpenModal(false);\n    document.body.style.removeProperty('overflow');\n  };\n\n  // 오픈 모달\n  const opneModal = (reviewImage) => {\n    setModalOpen(true);\n    setModalImage(reviewImage);\n    document.body.style.overflow = 'hidden';\n  };\n\n  // 클로짓 모달\n  const closeModal = () => {\n    setModalOpen(false);\n    document.body.style.removeProperty('overflow');\n  };\n\n  // 리뷰등록\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const imageLists = [];\n      for (let i = 0; i < writingImage.length; i += 1) {\n        imageLists.push(writingImage[i].imageUrl);\n      }\n      const reviewObject = {\n        content: writingReview.text,\n        imageUrl: imageLists\n      };\n\n      const { status, data } = await axios.post(`/review/${breadShopId}`, reviewObject);\n      if (status === 201) {\n        onDetailReviewWriting(data.data);\n        setWritingReview({\n          text: ''\n        });\n        setWritingImage([]);\n        setOpenModal(false);\n        document.body.style.removeProperty('overflow');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const resetButton = (index) => {\n    const deleteImageList = [...writingImage];\n    deleteImageList.splice(index, 1);\n    setWritingImage(deleteImageList);\n  };\n\n  const handleChange = (e) => {\n    setWritingReview({\n      ...writingReview,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // 이미지 핸들체인지\n  const imageHandleChange = async (e) => {\n    try {\n      const { files } = e.target;\n\n      const imageLength = files.length + writingImage.length;\n      if (imageLength > 6) {\n        sweetAlert('이미지를 초과했습니다.');\n      }\n\n      const imageFormData = new FormData();\n      for (let i = 0; i < files.length; i += 1) {\n        imageFormData.append('imgFile', e.target.files[i]);\n      }\n\n      const { status, data: imageData } = await axios.post('/upload/review', imageFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      if (status === 200) {\n        const {\n          data: { imageUrl: newImageUrlList }\n        } = imageData;\n\n        const newimageList = [];\n        newImageUrlList.forEach((image) => {\n          const newImage = {\n            imageUrl: image\n          };\n          newimageList.push(newImage);\n        });\n        setWritingImage([...writingImage, ...newimageList]);\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return (\n    <ReviewWrapBox>\n      <ReviewWrap>\n        <ReviewText>\n          <h1>리뷰</h1>\n        </ReviewText>\n        <Register>\n          <span onClick={reviewOpenModal} aria-hidden=\"true\" role=\"button\">\n            리뷰쓰기\n          </span>\n        </Register>\n      </ReviewWrap>\n\n      <RegisterReviewWrap>\n        {openModal && (\n          <RegisterReview ref={el} aria-hidden=\"true\">\n            <div className=\"review_modal_wrap\" onClick={reviewCloseModal} aria-hidden=\"true\" />\n            <div className=\"review_modal\">\n              <div className=\"title\">\n                지수ㅜ수수수수빵집 <span className=\"title_text\">리뷰를 작성해 주세요</span>\n              </div>\n\n              <div className=\"review_form_modal\">\n                <form onSubmit={handleSubmit}>\n                  <textarea placeholder=\"지수빵집에 대한 분위기와 맛은 어떤가요?\" onChange={handleChange} value={text} name=\"text\" />\n\n                  <ImageMap>\n                    {writingImage.map((imageData, index) => (\n                      // eslint-disable-next-line react/no-array-index-key\n                      <ImageWrap key={`image-${index}`}>\n                        <div>\n                          <img src={imageData.imageUrl} alt={`리뷰 사진${index}`} className=\"review_image\" />\n                          <div className=\"bread_button_wrap\" onClick={() => resetButton(index)} aria-hidden=\"true\">\n                            <CloseWrap>\n                              <div className=\"image_close_container1\">\n                                <div id=\"image_close_menu\">\n                                  <span />\n                                  <span />\n                                </div>\n                              </div>\n                            </CloseWrap>\n                          </div>\n                        </div>\n                      </ImageWrap>\n                    ))}\n                  </ImageMap>\n\n                  <input type=\"file\" id=\"file\" onChange={imageHandleChange} name=\"reviewImage\" multiple />\n                  <button type=\"button\" className=\"file_button\">\n                    <i />\n                  </button>\n\n                  <ReviewButton>\n                    <button type=\"button\" onClick={reviewCloseModal} className=\"reviewButton\">\n                      취소\n                    </button>\n                    <button type=\"submit\" className=\"reviewButton\">\n                      리뷰올리기\n                    </button>\n                  </ReviewButton>\n                </form>\n              </div>\n            </div>\n          </RegisterReview>\n        )}\n      </RegisterReviewWrap>\n\n      <ReviewSlid>\n        {shopDetailReview.length ? (\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          <Slider {...settings}>\n            {shopDetailReview.map((review) => (\n              <ReviewBox key={`review-${review.id}`}>\n                <BoxButton>\n                  <BoxLeft>\n                    <div className=\"button_wrap\">\n                      <div className=\"user_wrap\">\n                        <img src={review.user.imageUrl} alt=\"\" />\n                        <p>{review.user.name}</p>\n                        <p>{moment(review.createdAt).format('YYYY-MM-DD')}</p>\n                      </div>\n                    </div>\n                  </BoxLeft>\n                </BoxButton>\n\n                <Content>\n                  <p style={{ whiteSpace: 'pre-line' }}>{review.content}</p>\n                  {/* html을 바로 넣는 방법 */}\n                  {/* <div dangerouslySetInnerHTML={{ __html: review.content.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />') }} /> */}\n                </Content>\n\n                {review.images.map((reviewImage, index) => (\n                  // eslint-disable-next-line react/no-array-index-key\n                  <UserImage key={`reviewimage-${review.id}-${index}`}>\n                    <button type=\"button\" onClick={() => opneModal(review.images)}>\n                      <img src={reviewImage} alt={`리뷰 이미지${index}`} />\n                    </button>\n                  </UserImage>\n                ))}\n              </ReviewBox>\n            ))}\n          </Slider>\n        ) : (\n          <div className=\"background_wrap\">등록된 리뷰가 없습니다.</div>\n        )}\n      </ReviewSlid>\n\n      <ReviewModal>\n        {modalOpen && (\n          <>\n            <div className=\"Modal-overlay\" ref={el} onClick={closeModal} aria-hidden=\"true\" />\n            <div className=\"Modal\">\n              <div>\n                <p className=\"title\">리뷰 이미지</p>\n              </div>\n              <div className=\"content\">\n                {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n                <Slider {...settings}>\n                  {modalImage.map((images, index) => (\n                    <img src={images} alt={`리뷰사진${index}`} key={`modalImage-${images}`} className=\"modal_image\" />\n                  ))}\n                </Slider>\n              </div>\n              <div className=\"button-wrap\">\n                <button type=\"button\" onClick={closeModal}>\n                  취소\n                </button>\n              </div>\n            </div>\n          </>\n        )}\n      </ReviewModal>\n    </ReviewWrapBox>\n  );\n};\n\nReview.propTypes = {\n  match: PropTypes.instanceOf(Object).isRequired,\n  shopDetailReview: PropTypes.instanceOf(Array).isRequired,\n  onDetailReview: PropTypes.func.isRequired,\n  onDetailReviewWriting: PropTypes.func.isRequired\n};\n\nconst shopReviewStateToProps = createStructuredSelector({\n  shopDetailReview: selectShopReview\n});\n\nconst shopReviewDispatch = (dispatch) => ({\n  onDetailReview: (review) => dispatch(setBreadShopReview(review)),\n  onDetailReviewWriting: (writing) => dispatch(setShopReviewWriting(writing))\n});\n\nexport default connect(shopReviewStateToProps, shopReviewDispatch)(Review);\n","/Users/songjisu/Desktop/bread_service/src/components/common-component/review/review_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/second-recomment/second_recomment.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/second-recomment/second_recomment_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/first-commend/first_commend_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/comment/first-commend/first_commend.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/bread_router.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/detail/bread_detail.jsx",["406"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport Slider from 'react-slick';\n\nimport { errorhandler } from 'utils/common';\nimport { BreadDtail } from './bread_detail_style';\nimport Comment from '../../../../common-component/comment/comment';\nimport { setCurrentBreadList, setBreadDetailTrue, setBreadDetailFalse } from '../../../../redux/bread/detail/breadDetail.actions';\nimport { selectBreadInfo, selectBreadImages } from '../../../../redux/bread/detail/breadDetail.selectors';\n\nimport axios from '../../../../../utils/axios';\n\nconst BreadDetail = ({ match, breadDetailInfo, onBreadDetail, breadDetailImages, onBreadDetailTrue, onBreadDetailFalse }) => {\n  const { breadId } = match.params;\n  useEffect(() => {\n    async function fetchBreadDetail() {\n      try {\n        const { data, status } = await axios.get(`bread/${breadId}`);\n        if (status === 200) {\n          onBreadDetail(data.data);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchBreadDetail();\n  }, []);\n\n  // 하트 클릭\n  const onDetailHeart = async () => {\n    try {\n      if (breadDetailInfo?.like) {\n        const { status } = await axios.delete(`/bread/favorite/${breadId}`);\n        if (status === 200) {\n          onBreadDetailFalse();\n        }\n      } else {\n        const { status: breadStatus } = await axios.post(`/bread/favorite/${breadId}`);\n        if (breadStatus === 200) {\n          onBreadDetailTrue();\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    // autoplay: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return (\n    <BreadDtail>\n      <div className=\"title_wrap\">\n        <span className=\"detail_text\">{breadDetailInfo?.title}</span>\n        <div className=\"heartImage\">\n          <img\n            src={breadDetailInfo?.like ? 'https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/heart.png' : 'https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/spaceheart.png'}\n            alt=\"빈하트 이미지\"\n            onClick={onDetailHeart}\n            aria-hidden=\"true\"\n          />\n        </div>\n      </div>\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <Slider {...settings}>\n        {breadDetailImages.map((images, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <div className=\"image_wrap\" key={`bread-images-${index}`}>\n            <img src={images} alt={`빵사진-${index}`} />\n          </div>\n        ))}\n      </Slider>\n\n      <span className=\"detail_bread_name\">{breadDetailInfo ? breadDetailInfo.title : ''}</span>\n      <p className=\"content_text\">{breadDetailInfo?.content}</p>\n      <Comment match={match.params} type=\"breadType\" />\n    </BreadDtail>\n  );\n};\nBreadDetail.defaultProps = {\n  breadDetailInfo: null,\n  breadDetailImages: null\n};\n\nBreadDetail.propTypes = {\n  match: PropTypes.instanceOf(Object).isRequired,\n  breadDetailInfo: PropTypes.instanceOf(Object),\n  onBreadDetail: PropTypes.func.isRequired,\n  breadDetailImages: PropTypes.instanceOf(Array),\n  onBreadDetailTrue: PropTypes.func.isRequired,\n  onBreadDetailFalse: PropTypes.func.isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadDetailInfo: selectBreadInfo,\n  breadDetailImages: selectBreadImages\n});\nconst breadDetaileDispathch = (dispatch) => ({\n  onBreadDetail: (breadDetailList) => dispatch(setCurrentBreadList(breadDetailList)),\n  onBreadDetailTrue: () => dispatch(setBreadDetailTrue()),\n  onBreadDetailFalse: () => dispatch(setBreadDetailFalse())\n});\n\nexport default connect(breadStateToProps, breadDetaileDispathch)(BreadDetail);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/detail/bread_detail_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/bread_popular.jsx",["407"],"import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport qs from 'qs';\n\nimport BreadLi from '../../../common-component/bread_li_component';\nimport { selectBreadList } from '../../../redux/bread/list/bread.selectors';\nimport { setBreadRankingList, setBreadListMore, setHeartTrueData, setHeartFalseData } from '../../../redux/bread/list/bread.actions';\nimport axios from '../../../../utils/axios';\nimport { errorhandler } from '../../../../utils/common';\nimport { PopularBreadWrap, PopularWrap, BreadList } from './bread_popular_style';\n\n/**\n * @author 송지수\n * @email tndms951@naver.com\n * @create date 2021-04-21\n * @modify date 2021-04-21\n * @desc [bread컴포넌트]\n */\n\nconst limit = 20;\n\nconst PopularBread = ({ breadList, onBreadList, onBreadListMore, onBreadHeartTrue, onBreadHeartFalse, location }) => {\n  // 스크롤시\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    async function fetchbreadData() {\n      try {\n        const { status, data: breadData } = await axios.get(`/bread?page=${page}&limit=${limit}`);\n\n        if (status === 200) {\n          onBreadList(breadData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchbreadData();\n  }, []);\n\n  // 스크롤(pagination)\n  const fetMoreData = async () => {\n    try {\n      const query = qs.parse(location.search, {\n        ignoreQueryPrefix: true\n      });\n      const queryObject = { ...query };\n\n      queryObject.page = String(page + 1);\n      queryObject.limit = String(12);\n      const queryData = qs.stringify(queryObject);\n      const { data, status } = await axios.get(`/bread?${queryData}`);\n\n      if (status === 200) {\n        onBreadListMore(data.list);\n        setPage(page + 1);\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  return (\n    <PopularBreadWrap>\n      <>\n        <PopularWrap>\n          <h1>요즘 인기있는 빵</h1>\n        </PopularWrap>\n\n        <BreadList>\n          {/* @ts-ignore */}\n          <InfiniteScroll dataLength={breadList.length} next={fetMoreData} hasMore scrollThreshold=\"50px\">\n            <ul className=\"list_wrap\">\n              {breadList.map((list) => (\n                <BreadLi breadList={list} likeTrue={onBreadHeartTrue} likeFalse={onBreadHeartFalse} />\n              ))}\n            </ul>\n          </InfiniteScroll>\n        </BreadList>\n      </>\n    </PopularBreadWrap>\n  );\n};\n\nPopularBread.propTypes = {\n  breadList: PropTypes.instanceOf(Array).isRequired,\n  onBreadList: PropTypes.func.isRequired,\n  onBreadListMore: PropTypes.func.isRequired,\n  onBreadHeartTrue: PropTypes.func.isRequired,\n  onBreadHeartFalse: PropTypes.func.isRequired,\n  location: PropTypes.instanceOf(Object).isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadList: selectBreadList\n});\n\nconst breadDispathchToProps = (dispatch) => ({\n  onBreadList: (bread) => dispatch(setBreadRankingList(bread)),\n  onBreadListMore: (bread) => dispatch(setBreadListMore(bread)),\n  onBreadHeartTrue: (trueBread) => dispatch(setHeartTrueData(trueBread)),\n  onBreadHeartFalse: (falseBreadId) => dispatch(setHeartFalseData(falseBreadId))\n});\n\nexport default connect(breadStateToProps, breadDispathchToProps)(PopularBread);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/bread-popular/bread_popular_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/list/bread.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/list/bread.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/list/bread.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/list/bread.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/comment/bread_breadShopComment.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/comment/bread_breadShopComment.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/comment/bread_breadShopComment.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/comment/bread_breadShopComment.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/bread-reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/detail/breadDetail.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/detail/breadDetail.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/detail/breadDetail.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/bread/detail/breadDetail.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/youtube/youtube.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/youtube/youtube.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/youtube/youtube.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/youtube/youtube.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/notice/notice.jsx",["408"],"import React, { useEffect, useState } from 'react';\n\nimport { createStructuredSelector } from 'reselect';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport moment from 'moment';\n\nimport { errorhandler } from 'utils/common';\nimport DownPage from './notice_downPage';\nimport axios from '../../../../../utils/axios';\nimport { NoticeWrap } from './notice_style';\nimport { setNoticeList, setNoticePagination } from '../../../../redux/community/community.actions';\nimport { selectNotice } from '../../../../redux/community/community.selectors';\n\nconst limit = 10;\n\nconst Notice = ({ onNoticeList, noticeList, onNoticePagination }) => {\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [dropDown, setDropDown] = useState(0);\n\n  useEffect(() => {\n    async function fetchNoticeData() {\n      try {\n        const { data, status } = await axios.get(`/notice?page=${page}&limit=${limit}`);\n\n        if (status === 200) {\n          onNoticeList(data.list);\n          setHasMore(data.pagination.currentPage !== data.pagination.totalPage);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchNoticeData();\n  }, []);\n\n  // 스크롤(pagination)\n  const fetMoreData = async () => {\n    try {\n      const { status, data } = await axios.get(`/notice?page=${page + 1}&limit=${limit}`);\n\n      if (status === 200) {\n        onNoticePagination(data.list);\n        setPage(page + 1);\n        if (data.pagination.currentPage === data.pagination.totalPage) {\n          setHasMore(false);\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const handleClick = (listId) => {\n    if (dropDown === listId) {\n      setDropDown(0);\n    } else {\n      setDropDown(listId);\n    }\n  };\n\n  return (\n    <NoticeWrap>\n      <ul>\n        {/* @ts-ignore */}\n        <InfiniteScroll dataLength={noticeList.length} next={fetMoreData} hasMore={hasMore} scrollThreshold=\"50px\">\n          {noticeList.map((list, index) => (\n            <li key={`community-notice-${list.id}`}>\n              <div className=\"notice_title\" onClick={() => handleClick(list.id)} role=\"presentation\">\n                <span className=\"count_number\">{index + 1}</span> <span className=\"notice_content\">{list.title}</span>\n                <div className={dropDown === list.id ? 'arrow_up' : 'arrow_down'} />\n                <div className=\"notice_date\">{moment(list.createdAt).format('YYYY-MM-DD')}</div>\n              </div>\n              {list.id === dropDown ? <DownPage list={list} /> : ''}\n            </li>\n          ))}\n        </InfiniteScroll>\n      </ul>\n    </NoticeWrap>\n  );\n};\n\nNotice.propTypes = {\n  onNoticeList: PropTypes.func.isRequired,\n  noticeList: PropTypes.instanceOf(Object).isRequired,\n  onNoticePagination: PropTypes.func.isRequired\n};\n\nconst communityStateToProps = createStructuredSelector({\n  noticeList: selectNotice\n});\n\nconst communityDispathch = (dispatch) => ({\n  onNoticeList: (list) => dispatch(setNoticeList(list)),\n  onNoticePagination: (list) => dispatch(setNoticePagination(list))\n});\n\nexport default connect(communityStateToProps, communityDispathch)(Notice);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/notice/notice_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/styles/theme.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/community.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/event/event.jsx",["409"],"import React, { useEffect, useState } from 'react';\nimport { errorhandler } from 'utils/common';\nimport { createStructuredSelector } from 'reselect';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport axios from '../../../../../utils/axios';\nimport { EventWrap } from './event_style';\nimport { setEventList, setEventPagination } from '../../../../redux/community/community.actions';\nimport { selectEvent } from '../../../../redux/community/community.selectors';\n\nconst limit = 4;\n\nconst Event = ({ onEventList, eventList, onEventPagination }) => {\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n\n  useEffect(() => {\n    async function fetchEventData() {\n      try {\n        const { data, status } = await axios.get(`/event?page=${page}&limit=${limit}`);\n        if (status === 200) {\n          onEventList(data.list);\n          setHasMore(data.pagination.currentPage !== data.pagination.totalPage);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchEventData();\n  }, []);\n\n  // 스크롤(pagination)\n  const fetMoreData = async () => {\n    try {\n      const { data, status } = await axios.get(`/event?page=${page + 1}&limit=${limit}`);\n      if (status === 200) {\n        onEventPagination(data.list);\n        setPage(page + 1);\n        if (data.pagination.currentPage === data.pagination.totalPage) {\n          setHasMore(false);\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  return (\n    <EventWrap>\n      <ul>\n        {/* @ts-ignore */}\n        <InfiniteScroll dataLength={eventList.length} next={fetMoreData} hasMore={hasMore} scrollThreshold=\"50px\">\n          {eventList.map((list) => (\n            <li key={`event=${list.id}`}>\n              <a href={list.link} target=\"_blank\" rel=\"noreferrer\">\n                <div className=\"box_wrap\" key={`event-${list.id}`}>\n                  <img src={list.imageUrl} alt=\"\" />\n                  {/* <span>{list.title}</span> */}\n                  <p className={list.close ? 'close' : 'going'}>{list.close ? '이벤트 종료' : '진행중'}</p>\n                  <span>\n                    <strong>[{list.title}]</strong> {moment(list.startAt).format('YYYY-MM-DD ')}\n                    {'~'}\n                    {moment(list.endAt).format(' YYYY-MM-DD')}\n                  </span>\n                </div>\n              </a>\n            </li>\n          ))}\n        </InfiniteScroll>\n      </ul>\n    </EventWrap>\n  );\n};\n\nEvent.propTypes = {\n  onEventList: PropTypes.func.isRequired,\n  eventList: PropTypes.instanceOf(Object).isRequired,\n  onEventPagination: PropTypes.func.isRequired\n};\n\nconst eventStateToProps = createStructuredSelector({\n  eventList: selectEvent\n});\n\nconst eventDispathch = (dispatch) => ({\n  onEventList: (list) => dispatch(setEventList(list)),\n  onEventPagination: (list) => dispatch(setEventPagination(list))\n});\n\nexport default connect(eventStateToProps, eventDispathch)(Event);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/community_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/community/community.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/community/community.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/community/community.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/community/community.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/event/event_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/notice/notice_downPage.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/community/notice/notice_downPage_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/breadShop_li_style.jsx",[],{"ruleId":"410","replacedBy":"411"},{"ruleId":"412","replacedBy":"413"},{"ruleId":"414","replacedBy":"415"},{"ruleId":"416","replacedBy":"417"},{"ruleId":"418","replacedBy":"419"},{"ruleId":"420","replacedBy":"421"},{"ruleId":"422","severity":1,"message":"423","line":28,"column":6,"nodeType":"424","endLine":28,"endColumn":8,"suggestions":"425"},{"ruleId":"422","severity":1,"message":"426","line":76,"column":6,"nodeType":"424","endLine":76,"endColumn":8,"suggestions":"427"},{"ruleId":"422","severity":1,"message":"428","line":36,"column":6,"nodeType":"424","endLine":36,"endColumn":8,"suggestions":"429"},{"ruleId":"430","severity":1,"message":"431","line":150,"column":19,"nodeType":"432","messageId":"433","endLine":150,"endColumn":32},{"ruleId":"430","severity":1,"message":"431","line":151,"column":21,"nodeType":"432","messageId":"433","endLine":151,"endColumn":33},{"ruleId":"422","severity":1,"message":"434","line":152,"column":6,"nodeType":"424","endLine":152,"endColumn":8,"suggestions":"435"},{"ruleId":"422","severity":1,"message":"436","line":32,"column":6,"nodeType":"424","endLine":32,"endColumn":8,"suggestions":"437"},{"ruleId":"422","severity":1,"message":"438","line":47,"column":6,"nodeType":"424","endLine":47,"endColumn":8,"suggestions":"439"},{"ruleId":"430","severity":1,"message":"431","line":15,"column":3,"nodeType":"432","messageId":"433","endLine":15,"endColumn":14},{"ruleId":"422","severity":1,"message":"440","line":51,"column":6,"nodeType":"424","endLine":51,"endColumn":8,"suggestions":"441"},{"ruleId":"422","severity":1,"message":"442","line":29,"column":6,"nodeType":"424","endLine":29,"endColumn":8,"suggestions":"443"},{"ruleId":"422","severity":1,"message":"444","line":41,"column":6,"nodeType":"424","endLine":41,"endColumn":8,"suggestions":"445"},{"ruleId":"422","severity":1,"message":"446","line":37,"column":6,"nodeType":"424","endLine":37,"endColumn":8,"suggestions":"447"},{"ruleId":"422","severity":1,"message":"448","line":33,"column":6,"nodeType":"424","endLine":33,"endColumn":8,"suggestions":"449"},"lines-around-directive",["450"],"no-spaced-func",["451"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["452"],"React Hook useEffect has missing dependencies: 'onBreadList', 'onBreadShopList', and 'onEventList'. Either include them or remove the dependency array. If 'onBreadList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["453"],"React Hook useEffect has missing dependencies: 'page' and 'youtubePickList'. Either include them or remove the dependency array. If 'youtubePickList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["454"],"no-console","Unexpected console statement.","MemberExpression","unexpected","React Hook useEffect has missing dependencies: 'location.search', 'onAddressDong', and 'onAddressSi'. Either include them or remove the dependency array. If 'onAddressSi' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["455"],"React Hook useEffect has missing dependencies: 'breadShopId' and 'onShopDetailBread'. Either include them or remove the dependency array. If 'onShopDetailBread' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["456"],"React Hook useEffect has missing dependencies: 'breadId', 'breadShopId', 'onDetailComment', 'page', and 'type'. Either include them or remove the dependency array. If 'onDetailComment' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["457"],"React Hook useEffect has missing dependencies: 'breadShopId' and 'onDetailReview'. Either include them or remove the dependency array. If 'onDetailReview' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["458"],"React Hook useEffect has missing dependencies: 'breadId' and 'onBreadDetail'. Either include them or remove the dependency array. If 'onBreadDetail' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["459"],"React Hook useEffect has missing dependencies: 'onBreadList' and 'page'. Either include them or remove the dependency array. If 'onBreadList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["460"],"React Hook useEffect has missing dependencies: 'onNoticeList' and 'page'. Either include them or remove the dependency array. If 'onNoticeList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["461"],"React Hook useEffect has missing dependencies: 'onEventList' and 'page'. Either include them or remove the dependency array. If 'onEventList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["462"],"padding-line-between-statements","func-call-spacing",{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},"Update the dependencies array to be: [history]",{"range":"485","text":"486"},"Update the dependencies array to be: [onBreadList, onBreadShopList, onEventList]",{"range":"487","text":"488"},"Update the dependencies array to be: [page, youtubePickList]",{"range":"489","text":"490"},"Update the dependencies array to be: [location.search, onAddressDong, onAddressSi]",{"range":"491","text":"492"},"Update the dependencies array to be: [breadShopId, onShopDetailBread]",{"range":"493","text":"494"},"Update the dependencies array to be: [breadId, breadShopId, onDetailComment, page, type]",{"range":"495","text":"496"},"Update the dependencies array to be: [breadShopId, onDetailReview]",{"range":"497","text":"498"},"Update the dependencies array to be: [breadId, onBreadDetail]",{"range":"499","text":"500"},"Update the dependencies array to be: [onBreadList, page]",{"range":"501","text":"502"},"Update the dependencies array to be: [onNoticeList, page]",{"range":"503","text":"504"},"Update the dependencies array to be: [onEventList, page]",{"range":"505","text":"506"},[879,881],"[history]",[2313,2315],"[onBreadList, onBreadShopList, onEventList]",[1333,1335],"[page, youtubePickList]",[4362,4364],"[location.search, onAddressDong, onAddressSi]",[1564,1566],"[breadShopId, onShopDetailBread]",[1888,1890],"[breadId, breadShopId, onDetailComment, page, type]",[1697,1699],"[breadShopId, onDetailReview]",[1130,1132],"[breadId, onBreadDetail]",[1382,1384],"[onBreadList, page]",[1267,1269],"[onNoticeList, page]",[1162,1164],"[onEventList, page]"]