[{"/Users/songjisu/Desktop/bread_service/src/index.js":"1","/Users/songjisu/Desktop/bread_service/src/reportWebVitals.js":"2","/Users/songjisu/Desktop/bread_service/src/components/redux/store.js":"3","/Users/songjisu/Desktop/bread_service/src/App.jsx":"4","/Users/songjisu/Desktop/bread_service/src/components/redux/root-reducer.js":"5","/Users/songjisu/Desktop/bread_service/src/layout.js":"6","/Users/songjisu/Desktop/bread_service/src/utils/common.js":"7","/Users/songjisu/Desktop/bread_service/src/utils/axios.js":"8","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.actions.js":"9","/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content.jsx":"10","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content.jsx":"11","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content.jsx":"12","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread.jsx":"13","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/popular/popular_component.jsx":"14","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.reducer.js":"15","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.reducer.js":"16","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.reducer.js":"17","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.types.js":"18","/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer.jsx":"19","/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header.jsx":"20","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.selectors.js":"21","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.actions.js":"22","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.selectors.js":"23","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.actions.js":"24","/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content_style.jsx":"25","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content_style.jsx":"26","/Users/songjisu/Desktop/bread_service/src/components/common-component/social.jsx":"27","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content_style.jsx":"28","/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_component.jsx":"29","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/popular/popular_style.jsx":"30","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread_style.jsx":"31","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.types.js":"32","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.selectors.js":"33","/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer_style.jsx":"34","/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header_style.jsx":"35","/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.selectors.js":"36","/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.actions.js":"37","/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.types.js":"38","/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.reducer.js":"39","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.types.js":"40","/Users/songjisu/Desktop/bread_service/src/components/common-component/breadShop_li_component.jsx":"41","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_rangking.jsx":"42","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_rangking_style.jsx":"43"},{"size":677,"mtime":1617506186552,"results":"44","hashOfConfig":"45"},{"size":364,"mtime":1612334723393,"results":"46","hashOfConfig":"45"},{"size":382,"mtime":1616310023501,"results":"47","hashOfConfig":"45"},{"size":2165,"mtime":1617506186534,"results":"48","hashOfConfig":"45"},{"size":426,"mtime":1617506186545,"results":"49","hashOfConfig":"45"},{"size":446,"mtime":1616310023510,"results":"50","hashOfConfig":"45"},{"size":1016,"mtime":1616310023511,"results":"51","hashOfConfig":"45"},{"size":277,"mtime":1616310023510,"results":"52","hashOfConfig":"45"},{"size":264,"mtime":1616310023501,"results":"53","hashOfConfig":"45"},{"size":3180,"mtime":1616310023506,"results":"54","hashOfConfig":"45"},{"size":4050,"mtime":1616310023507,"results":"55","hashOfConfig":"45"},{"size":5581,"mtime":1617506186547,"results":"56","hashOfConfig":"45"},{"size":3708,"mtime":1616310023504,"results":"57","hashOfConfig":"45"},{"size":1882,"mtime":1617506186550,"results":"58","hashOfConfig":"45"},{"size":674,"mtime":1616310023501,"results":"59","hashOfConfig":"45"},{"size":1694,"mtime":1617506186541,"results":"60","hashOfConfig":"45"},{"size":1285,"mtime":1617506186539,"results":"61","hashOfConfig":"45"},{"size":118,"mtime":1616310023501,"results":"62","hashOfConfig":"45"},{"size":2074,"mtime":1616310023504,"results":"63","hashOfConfig":"45"},{"size":3844,"mtime":1617506186550,"results":"64","hashOfConfig":"45"},{"size":418,"mtime":1617506186541,"results":"65","hashOfConfig":"45"},{"size":709,"mtime":1617506186540,"results":"66","hashOfConfig":"45"},{"size":179,"mtime":1616520068965,"results":"67","hashOfConfig":"45"},{"size":458,"mtime":1617506186537,"results":"68","hashOfConfig":"45"},{"size":3029,"mtime":1616310023506,"results":"69","hashOfConfig":"45"},{"size":3675,"mtime":1616310023508,"results":"70","hashOfConfig":"45"},{"size":5091,"mtime":1616310023498,"results":"71","hashOfConfig":"45"},{"size":3287,"mtime":1617506186549,"results":"72","hashOfConfig":"45"},{"size":3283,"mtime":1617506186536,"results":"73","hashOfConfig":"45"},{"size":1473,"mtime":1616310023503,"results":"74","hashOfConfig":"45"},{"size":2706,"mtime":1616310023504,"results":"75","hashOfConfig":"45"},{"size":259,"mtime":1617506186542,"results":"76","hashOfConfig":"45"},{"size":178,"mtime":1616310023501,"results":"77","hashOfConfig":"45"},{"size":1322,"mtime":1616310023505,"results":"78","hashOfConfig":"45"},{"size":3398,"mtime":1617506186551,"results":"79","hashOfConfig":"45"},{"size":189,"mtime":1617506186544,"results":"80","hashOfConfig":"45"},{"size":162,"mtime":1617506186543,"results":"81","hashOfConfig":"45"},{"size":99,"mtime":1617506186545,"results":"82","hashOfConfig":"45"},{"size":406,"mtime":1617506186543,"results":"83","hashOfConfig":"45"},{"size":165,"mtime":1617506186539,"results":"84","hashOfConfig":"45"},{"size":1683,"mtime":1617506186534,"results":"85","hashOfConfig":"45"},{"size":9212,"mtime":1617612114899,"results":"86","hashOfConfig":"45"},{"size":4474,"mtime":1617602382042,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"2613yk",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/Users/songjisu/Desktop/bread_service/src/index.js",[],["186","187","188","189","190","191"],"/Users/songjisu/Desktop/bread_service/src/reportWebVitals.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/store.js",[],"/Users/songjisu/Desktop/bread_service/src/App.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/root-reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/layout.js",[],"/Users/songjisu/Desktop/bread_service/src/utils/common.js",[],"/Users/songjisu/Desktop/bread_service/src/utils/axios.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content.jsx",["192"],"import React, { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from '../redux/user/user.actions';\nimport { sweetAlert, isEmailValid, errorhandler } from '../../utils/common';\nimport axios, { setAuthorization } from '../../utils/axios';\n\nimport {\n  SigninAllWrap,\n  InputEmail,\n  InputPassword,\n  LoginButton,\n  SigninLine\n} from './signin_content_style';\nimport Social from '../common-component/social';\n\nfunction Signin({ onUserSet, history }) {\n  const [LoginValue, setLoginValue] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = LoginValue;\n\n  useEffect(() => {\n    const bringUserToken = localStorage.getItem('userToken');\n    if (bringUserToken) {\n      history.replace('/');\n    }\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const signinObject = {\n        email,\n        password\n      };\n\n      if (!email) {\n        sweetAlert('이메일을 입력해주세요.');\n      } else if (isEmailValid(email)) {\n        sweetAlert('이메일 형식을 맞춰주세요.');\n      } else if (!password) {\n        sweetAlert('비밀번호를 입력해주세요.');\n      } else {\n        const { status, data } = await axios.post('/user/signin', signinObject);\n        if (status === 200) {\n          const {\n            data: { token }\n          } = data;\n          setAuthorization(token);\n\n          const { status: signinStatus, data: getData } = await axios.get('/user/current');\n          if (signinStatus === 200) {\n            onUserSet(getData.data, token);\n            history.push('/');\n          }\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    setLoginValue({\n      ...LoginValue,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <SigninAllWrap>\n      <div className=\"login-wrap\">\n        <form className=\"form_wrap\" onSubmit={handleSubmit}>\n          <h3>로그인</h3>\n\n          <InputEmail>\n            <span>이메일</span>\n            <input\n              type=\"text\"\n              placeholder=\"이메일 입력\"\n              onChange={handleChange}\n              name=\"email\"\n              value={email}\n            />\n          </InputEmail>\n\n          <InputPassword>\n            <span>비밀번호</span>\n            <input\n              type=\"password\"\n              placeholder=\"비밀번호 입력\"\n              onChange={handleChange}\n              name=\"password\"\n              value={password}\n            />\n          </InputPassword>\n\n          <LoginButton>\n            <button type=\"submit\">로그인</button>\n          </LoginButton>\n        </form>\n        <SigninLine>\n          <span>또는</span>\n          <hr />\n        </SigninLine>\n\n        <Social />\n      </div>\n    </SigninAllWrap>\n  );\n}\n\nSignin.propTypes = {\n  onUserSet: PropTypes.func.isRequired,\n  history: PropTypes.instanceOf(Object).isRequired\n};\n\nconst userToPropsDispatch = (dispatch) => ({\n  onUserSet: (user, token) => dispatch(setCurrentUser(user, token))\n});\n\nexport default connect(null, userToPropsDispatch)(Signin);\n","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content.jsx",["193","194"],"/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Slider from 'react-slick';\n\nimport { errorhandler } from '../../../../utils/common';\nimport BreadLi from '../../../common-component/bread_li_component';\nimport BreadShopLi from '../../../common-component/breadShop_li_component';\n\nimport { selectShopList } from '../../../redux/breadshoplist/breadShop.selectors';\nimport {\n  setCurrentBreadShop,\n  setShopTrueData,\n  setShopFalseData\n} from '../../../redux/breadshoplist/breadShop.actions';\n\nimport { selectBreadList } from '../../../redux/breadlist/bread.selectors';\nimport {\n  setBreadRankingList,\n  setHeartTrueData,\n  setHeartFalseData\n} from '../../../redux/breadlist/bread.actions';\n\nimport { selectEventSwiper } from '../../../redux/main/main.selectors';\nimport { setEventSwiper } from '../../../redux/main/main.actions';\n\nimport axios from '../../../../utils/axios';\nimport { Main, MainBackground, BreadShopRanking, BreadShopList } from './mainhome_content_style';\n\nconst MainHome = ({\n  breadShopList,\n  onBreadShopList,\n  onBreadShopTrue,\n  onBreadShopFalse,\n\n  breadList,\n  onBreadList,\n  onBreadHeartTrue,\n  onBreadHeartFalse,\n\n  eventList,\n  onEventList\n}) => {\n  useEffect(() => {\n    async function fetchBreadData() {\n      try {\n        const { status, data: breadData } = await axios.get('/rank/bread');\n\n        if (status === 200) {\n          onBreadList(breadData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n\n    async function fetchEventBanner() {\n      try {\n        const { status, data: eventData } = await axios.get('/banner/event');\n        console.log(eventData);\n\n        if (status === 200) {\n          onEventList(eventData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n\n    async function fetchBreadShopData() {\n      try {\n        const { status, data: breadShopData } = await axios.get('/rank/bread/shop');\n        if (status === 200) {\n          onBreadShopList(breadShopData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchBreadData();\n    fetchEventBanner();\n    fetchBreadShopData();\n  }, []);\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    autoplay: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  };\n\n  return (\n    <Main>\n      <div>\n        <MainBackground>\n          <Slider {...settings}>\n            {eventList.map((listData) => (\n              <img src={listData.imageUrl} alt={listData.title} />\n            ))}\n          </Slider>\n        </MainBackground>\n\n        {/* 빵집!!! */}\n        <BreadShopRanking>\n          <h1>빵집 랭킹</h1>\n          <div className=\"all_show\">\n            <span>모두보기</span>\n            <span className=\"triangle\" />\n          </div>\n        </BreadShopRanking>\n\n        <BreadShopList>\n          <ul className=\"list_wrap\">\n            {breadShopList.map((breadShopData) => (\n              <BreadShopLi\n                key={`breadShop_list${breadShopData.id}`}\n                shopList={breadShopData}\n                shopSeverLike={breadShopData.like}\n                shopId={breadShopData.id}\n                likeTrue={onBreadShopTrue}\n                likeFalse={onBreadShopFalse}\n              />\n            ))}\n          </ul>\n        </BreadShopList>\n      </div>\n\n      {/* 빵!!!!! */}\n      <div className=\"breadRankingWrap\">\n        <BreadShopRanking>\n          <h1>요즘 인기있는 빵 랭킹</h1>\n          <div className=\"all_show\">\n            <span>모두보기</span>\n            <span className=\"triangle\" />\n          </div>\n        </BreadShopRanking>\n\n        <BreadShopList>\n          <ul className=\"list_wrap\">\n            {breadList.map((list) => (\n              <BreadLi\n                key={`bread_li_list${list.id}`}\n                dataList={list}\n                likeTrue={onBreadHeartTrue}\n                likeFalse={onBreadHeartFalse}\n                breadId={list.id}\n                breadLike={list.like}\n              />\n            ))}\n          </ul>\n        </BreadShopList>\n      </div>\n    </Main>\n  );\n};\n\nMainHome.propTypes = {\n  breadShopList: PropTypes.instanceOf(Array).isRequired,\n  onBreadShopList: PropTypes.func.isRequired,\n  onBreadShopTrue: PropTypes.func.isRequired,\n  onBreadShopFalse: PropTypes.func.isRequired,\n\n  breadList: PropTypes.instanceOf(Array).isRequired,\n  onBreadList: PropTypes.func.isRequired,\n  onBreadHeartTrue: PropTypes.func.isRequired,\n  onBreadHeartFalse: PropTypes.func.isRequired,\n\n  eventList: PropTypes.instanceOf(Array).isRequired,\n  onEventList: PropTypes.func.isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadShopList: selectShopList,\n  breadList: selectBreadList,\n  eventList: selectEventSwiper\n});\n\nconst breadShopDispathchToProps = (dispatch) => ({\n  onBreadShopList: (breadShop) => dispatch(setCurrentBreadShop(breadShop)),\n  onBreadShopTrue: (trueBreadShop) => dispatch(setShopTrueData(trueBreadShop)),\n  onBreadShopFalse: (falseBreadShop) => dispatch(setShopFalseData(falseBreadShop)),\n\n  onBreadList: (bread) => dispatch(setBreadRankingList(bread)),\n  onBreadHeartTrue: (trueBreadId) => dispatch(setHeartTrueData(trueBreadId)),\n  onBreadHeartFalse: (falseBreadId) => dispatch(setHeartFalseData(falseBreadId)),\n\n  onEventList: (event) => dispatch(setEventSwiper(event))\n});\n\nexport default connect(breadStateToProps, breadShopDispathchToProps)(MainHome);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread.jsx",["195"],"import React, { useEffect } from 'react';\nimport Youtube from 'react-youtube';\n// import { Swiper } from 'swiper/react';\n// import 'swiper/css/swiper.scss';\n\nimport Slider from 'react-slick';\nimport axios from '../../../../utils/axios';\nimport { errorhandler } from '../../../../utils/common';\n\nimport {\n  BreadPickWrap,\n  YoutubePickEvent,\n  StyledSlider,\n  PickBreadTitle,\n  PickBreadImage\n} from './youtube_bread_style';\n\nconst PickBread = () => {\n  useEffect(() => {\n    async function fetchyoutubeData() {\n      try {\n        const { status, data } = await axios.get('/youtube');\n        if (status === 200) {\n          console.log(data);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchyoutubeData();\n  }, []);\n  const opts = {\n    width: '300',\n    height: '300',\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  const onReady = (e) => {\n    e.target.pauseVideo();\n  };\n\n  // 슬라이드\n  const settings = {\n    dots: true,\n    infinite: true,\n    autoplay: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n\n    responsive: [\n      // 반응형 웹 구현 옵션\n      {\n        breakpoint: 1200, // 화면 사이즈 1200px\n        settings: {\n          slidesToShow: 3\n        }\n      },\n      {\n        breakpoint: 1023,\n        settings: {\n          slidesToShow: 3\n        }\n      },\n      {\n        breakpoint: 767,\n        settings: {\n          slidesToShow: 1\n        }\n      }\n    ]\n  };\n\n  return (\n    <BreadPickWrap>\n      <YoutubePickEvent />\n\n      <PickBreadTitle>\n        <span>유튜버들이 선택한 빵을 즐겨보세요</span>\n      </PickBreadTitle>\n\n      {/* <Swiper\n        navigation\n        pagination={{\n          clickable: true\n        }}\n        scrollbar={{\n          draggable: true\n        }}> */}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <Slider {...settings}>\n        <StyledSlider>\n          <PickBreadImage>\n            <div className=\"VideoContainer\">\n              <Youtube\n                className=\"youtubeVideo\"\n                videoId=\"2g811Eo7K8U\"\n                opts={opts}\n                onReady={onReady}\n              />\n            </div>\n            <div className=\"pick_title\">\n              <span>Title</span>\n              <span>Description</span>\n              <button type=\"button\" className=\"show_button\">\n                리뷰 보러가기\n              </button>\n            </div>\n          </PickBreadImage>\n          <PickBreadImage>\n            <div className=\"VideoContainer\">\n              <Youtube\n                className=\"youtubeVideo\"\n                videoId=\"2g811Eo7K8U\"\n                opts={opts}\n                onReady={onReady}\n              />\n            </div>\n            <div className=\"pick_title\">\n              <span>Title</span>\n              <span>Description</span>\n              <button type=\"button\" className=\"show_button\">\n                리뷰 보러가기\n              </button>\n            </div>\n          </PickBreadImage>\n          <PickBreadImage>\n            <div className=\"VideoContainer\">\n              <Youtube\n                className=\"youtubeVideo VideoContainer\"\n                videoId=\"2g811Eo7K8U\"\n                opts={opts}\n                onReady={onReady}\n              />\n            </div>\n            <div className=\"pick_title\">\n              <span>Title</span>\n              <span>Description</span>\n              <button type=\"button\" className=\"show_button\">\n                리뷰 보러가기\n              </button>\n            </div>\n          </PickBreadImage>\n        </StyledSlider>\n      </Slider>\n      {/* </Swiper> */}\n    </BreadPickWrap>\n  );\n};\n\nexport default PickBread;\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/popular/popular_component.jsx",["196","197"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport BreadLi from '../../../common-component/bread_li_component';\nimport { selectBreadList } from '../../../redux/breadlist/bread.selectors';\nimport { setBreadRankingList } from '../../../redux/breadlist/bread.actions';\nimport axios from '../../../../utils/axios';\nimport { errorhandler } from '../../../../utils/common';\nimport { PopularBreadWrap, PopularWrap, BreadList } from './popular_style';\n\nconst PopularBread = ({ breadList, onBreadList }) => {\n  useEffect(() => {\n    async function fetchbreadData() {\n      try {\n        const { status, data: breadData } = await axios.get('/bread');\n        console.log(breadData);\n        if (status === 200) {\n          onBreadList(breadData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchbreadData();\n  }, []);\n\n  return (\n    <PopularBreadWrap>\n      <PopularWrap>\n        <h1>요즘 인기있는 빵</h1>\n      </PopularWrap>\n\n      <BreadList>\n        <ul className=\"list_wrap\">\n          {breadList.map((breadData) => (\n            <BreadLi key={`{bread-list${breadData.id}}`} data={breadData} />\n          ))}\n        </ul>\n      </BreadList>\n    </PopularBreadWrap>\n  );\n};\n\nPopularBread.propTypes = {\n  breadList: PropTypes.instanceOf(Array).isRequired,\n  onBreadList: PropTypes.func.isRequired\n  // onHeartFilled: PropTypes.func.isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadList: selectBreadList\n});\n\nconst breadDispathchToProps = (dispatch) => ({\n  onBreadList: (bread) => dispatch(setBreadRankingList(bread))\n  // onHeartFilled: (filled, heartId) => dispatch(setHeartTrueData(filled, heartId))\n});\n\nexport default connect(breadStateToProps, breadDispathchToProps)(PopularBread);\n","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.reducer.js",["198","199","200"],"import breadShopTypes from './breadShop.types';\n\nconst INITAL_STATE = {\n  breadShopList: [],\n  siAddressList: [],\n  dongAddressList: []\n};\n\nconst breadShopReducer = (state = INITAL_STATE, action) => {\n  switch (action.type) {\n    case breadShopTypes.SET_BREAD_SHOP_LIST: {\n      const { breadShop } = action.payload;\n      console.log(breadShop);\n      return {\n        ...state,\n        breadShopList: breadShop\n      };\n    }\n\n    case breadShopTypes.HEART_LIKE_TRUE: {\n      const { trueBreadShop } = action.payload;\n      const newLike = [...state.breadShopList];\n      const updateTrue = newLike.findIndex((like) => like.id === Number(trueBreadShop));\n      if (updateTrue > -1) {\n        newLike[updateTrue].like = true;\n      }\n      return {\n        ...state,\n        breadShopList: newLike\n      };\n    }\n    case breadShopTypes.HEART_LIKE_FALSE: {\n      const { falseBreadShop } = action.payload;\n      const newFalse = [...state.breadShopList];\n      const updateFalse = newFalse.findIndex((disLike) => disLike.id === Number(falseBreadShop));\n      if (updateFalse > -1) {\n        newFalse[updateFalse].like = false;\n      }\n      return {\n        ...state,\n        breadShopList: newFalse\n      };\n    }\n    case breadShopTypes.SET_ADDRESS_SI: {\n      const { siAddress } = action.payload;\n      console.log(siAddress);\n      return {\n        ...state,\n        siAddressList: siAddress\n      };\n    }\n    case breadShopTypes.SET_ADDRESS_DONG: {\n      const { dongAddress } = action.payload;\n      console.log(dongAddress);\n      return {\n        ...state,\n        dongAddressList: dongAddress\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default breadShopReducer;\n","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.reducer.js",["201","202","203"],"import breadTypes from './bread.types';\n\nconst INITAL_STATE = {\n  breadList: []\n};\n\nconst breadListReducer = (state = INITAL_STATE, action) => {\n  switch (action.type) {\n    case breadTypes.BREAD_LIST_SET: {\n      const { bread } = action.payload;\n      console.log(bread);\n      return {\n        ...state,\n        breadList: bread\n      };\n    }\n\n    case breadTypes.HEART_LIKE_TRUE: {\n      const { trueBreadId } = action.payload;\n\n      const newLike = [...state.breadList];\n\n      const updateLike = newLike.findIndex((like) => like.id === Number(trueBreadId));\n\n      if (updateLike > -1) {\n        newLike[updateLike].like = true;\n      }\n      return {\n        ...state,\n        breadList: newLike\n      };\n    }\n\n    case breadTypes.HEART_LIKE_FALSE: {\n      const { falseBreadId } = action.payload;\n      console.log(falseBreadId);\n      const newLikeFalse = [...state.breadList];\n\n      const updateFalse = newLikeFalse.findIndex((dislike) => dislike.id === Number(falseBreadId));\n\n      if (updateFalse > -1) {\n        newLikeFalse[updateFalse].like = false;\n        console.log(newLikeFalse[updateFalse].like);\n      }\n      return {\n        ...state,\n        breadList: newLikeFalse\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default breadListReducer;\n","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header.jsx",["204"],"/* eslint-disable jsx-a11y/alt-text */\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { Link } from 'react-router-dom';\n\n// import styled from 'styled-components';\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\nimport { setLogout } from '../../redux/user/user.actions';\n\nimport {\n  HeaderWrap,\n  BookMark,\n  LeftBookMark,\n  RightLogin,\n  MyProfile,\n  GroupNav,\n  NaveSearch\n} from './header_style';\n\n/**\n * @author 송지수\n * @email tndms951@naver.com\n * @create date 2021-03-21 15:42:55\n * @modify date 2021-03-21 15:42:55\n * @desc [header컴포넌트]\n */\n\nconst Header = ({ currentUser, onLogout }) => {\n  const [myProfileBox, setMyProfileBox] = useState(false);\n  console.log(myProfileBox);\n\n  return (\n    <HeaderWrap>\n      <BookMark>\n        <div className=\"bookmarkWrap clearfix\">\n          <LeftBookMark>\n            <span>즐겨찾기</span>\n            <span>입점신청</span>\n            <span>\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/Vector+1.png\"\n                alt=\"아래화살표\"\n              />\n            </span>\n          </LeftBookMark>\n          <RightLogin>\n            {currentUser ? (\n              <div\n                className=\"login_after\"\n                onClick={() => {\n                  setMyProfileBox(!myProfileBox);\n                }}\n                aria-hidden=\"true\">\n                <span className=\"userName\">{currentUser.name}</span>\n                <span className=\"userimage\">\n                  <img src={currentUser.imageUrl} alt={`${currentUser.name}의 이미지`} />\n                </span>\n                {myProfileBox ? (\n                  <MyProfile>\n                    <span>내가 찜한 빵/빵집</span>\n                    <span>내 정보 수정</span>\n                    <span onClick={onLogout} aria-hidden=\"true\">\n                      로그아웃\n                    </span>\n                  </MyProfile>\n                ) : null}\n              </div>\n            ) : (\n              <div className=\"login_wrap\">\n                <Link to=\"/signin\">\n                  <span className=\"login\">로그인</span>\n                </Link>\n\n                <Link to=\"/signup\">\n                  <span className=\"signUp\">회원가입</span>\n                </Link>\n              </div>\n            )}\n          </RightLogin>\n        </div>\n      </BookMark>\n      <GroupNav className=\"clearfix\">\n        <Link to=\"/\">\n          <h1>\n            <img\n              src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/Meokppang.png\"\n              alt=\"먹방로그\"\n            />\n          </h1>\n        </Link>\n        <ul>\n          <Link to=\"/rank/bread-house\">\n            <li>빵집 랭킹</li>\n          </Link>\n          <Link to=\"/rank/bread\">\n            <li>요즘 인기있는 빵</li>\n          </Link>\n          <Link to=\"/youtube-bread\">\n            <li>유튜버 픽빵</li>\n          </Link>\n          <li>커뮤니티</li>\n        </ul>\n        <NaveSearch>\n          <div className=\"headerSearch\">\n            <span />\n          </div>\n          <input type=\"text\" placeholder=\"빵집을 찾아보세요.\" />\n        </NaveSearch>\n      </GroupNav>\n    </HeaderWrap>\n  );\n};\nconst userProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nHeader.propTypes = {\n  currentUser: PropTypes.instanceOf(Object),\n  onLogout: PropTypes.func.isRequired\n};\n\nHeader.defaultProps = {\n  currentUser: null\n};\n\nconst logoutToPropsDispatch = (dispatch) => ({\n  onLogout: () => dispatch(setLogout())\n});\n\nexport default connect(userProps, logoutToPropsDispatch)(Header);\n","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/social.jsx",["205","206"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport KakaoLogin from 'react-kakao-login';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\n\nimport axios, { setAuthorization } from '../../utils/axios';\nimport { errorhandler } from '../../utils/common';\nimport { setCurrentUser } from '../redux/user/user.actions';\nimport { SosalLogin, GoogleWrap, FacebookWrap, KakaoWrap } from '../sign-in/signin_content_style';\n\n// 소셜 로그인\nconst kakaoToken = process.env.REACT_APP_KAKAO_KEY;\nconst facebookToken = process.env.REACT_APP_FACEBOOK_KEY;\nconst googleToken = process.env.REACT_APP_GOOGLE_KEY;\n\nconst Social = ({ onUserSet, history }) => {\n  // 카카오\n  const onSuccess = async (userData) => {\n    try {\n      const { access_token: accessToken } = userData.response;\n\n      const socialObject = {\n        token: accessToken,\n        type: 'kakao'\n      };\n\n      const { data } = await axios.post('/user/social/signup', socialObject);\n\n      const {\n        data: { token }\n      } = data;\n\n      setAuthorization(token);\n\n      // 서버에서 누구인지 받아오는곳\n      const { status, data: getData } = await axios.get('/user/current');\n      if (status === 201) {\n        onUserSet(getData.data, token);\n        history.push('/');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 구글\n  const responseGoogle = async (response) => {\n    try {\n      if (!response.error) {\n        const { accessToken: googleAccessToken } = response;\n\n        const socialObject = {\n          token: googleAccessToken,\n          type: 'google'\n        };\n\n        const { data } = await axios.post('/user/social/signup', socialObject);\n\n        const {\n          data: { token }\n        } = data;\n\n        setAuthorization(token);\n\n        // 서버에서 누구인지 받아오는곳\n        const { status, data: getData } = await axios.get('/user/current');\n        if (status === 201) {\n          onUserSet(getData.data, token);\n          history.push('/');\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 페이스북\n  const responseFacebook = async (response) => {\n    try {\n      const { accessToken: facebookAccessToken } = response;\n\n      const socialObject = {\n        token: facebookAccessToken,\n        type: 'facebook'\n      };\n\n      const {\n        data: {\n          data: { token }\n        }\n      } = await axios.post('/user/social/signup', socialObject);\n\n      setAuthorization(token);\n\n      // 서버에서 누구인지 받아오는곳\n      const { status, data: facebookData } = await axios.get('/user/current');\n      if (status === 201) {\n        onUserSet(facebookData.data, token);\n        history.push('/');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  return (\n    <SosalLogin className=\"clearfix\">\n      <GoogleWrap>\n        <GoogleLogin\n          clientId={googleToken}\n          render={(renderProps) => (\n            <button onClick={renderProps.onClick} disabled={renderProps.disabled} type=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/google.png\"\n                alt=\"구글 로그인\"\n              />\n              <span>구글</span>\n            </button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy=\"single_host_origin\"\n        />\n      </GoogleWrap>\n\n      <FacebookWrap>\n        <FacebookLogin\n          appId={facebookToken}\n          callback={responseFacebook}\n          fields=\"name,email,picture\"\n          render={(renderProps) => (\n            <button onClick={renderProps.onClick} type=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/socalfacebook.png\"\n                alt=\"페이스북 로그인\"\n              />\n              <span>페이스북</span>\n            </button>\n          )}\n        />\n      </FacebookWrap>\n\n      <KakaoWrap>\n        <KakaoLogin\n          token={kakaoToken}\n          onSuccess={onSuccess}\n          onFail={console.error}\n          onLogout={console.info}\n          render={({ onClick }) => (\n            <div onClick={onClick} aria-hidden=\"true\" role=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/ico_kakaotalk.png\"\n                alt=\"카카오톡 로그인\"\n              />\n              <span>카카오톡</span>\n            </div>\n          )}\n        />\n      </KakaoWrap>\n    </SosalLogin>\n  );\n};\n\nSocial.propTypes = {\n  onUserSet: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.object).isRequired\n};\n\nconst userToPropsDispatch = (dispatch) => ({\n  onUserSet: (user, token) => dispatch(setCurrentUser(user, token))\n});\n\nexport default connect(null, userToPropsDispatch)(Social);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_component.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/popular/popular_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshoplist/breadShop.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header_style.jsx",[],["207","208","209","210","211","212"],"/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/main/main.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/breadShop_li_component.jsx",["213"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport axios from '../../utils/axios';\nimport { errorhandler } from '../../utils/common';\n\nconst BreadShopLi = ({ shopList, shopImage, shopSeverLike, likeTrue, likeFalse, shopId }) => {\n  const changeShopHeart = async () => {\n    try {\n      if (shopSeverLike) {\n        const { status } = await axios.delete(`/bread/shop/favorite/${shopId}`);\n        if (status === 200) {\n          likeFalse(shopId);\n        }\n      } else {\n        const { status: shopStatus } = await axios.post(`/bread/shop/favorite/${shopId}`);\n        if (shopStatus === 200) {\n          likeTrue(shopId);\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n      console.log(err);\n    }\n  };\n\n  return (\n    <li>\n      <img src={shopImage} alt={`${shopList.title}의 이미지`} />\n      <img\n        src={shopSeverLike ? 'https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/heart.png' : 'https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/spaceheart.png'}\n        alt=\"좋아요하트이미지\"\n        className=\"heart_image\"\n        aria-hidden=\"true\"\n        onClick={changeShopHeart}\n        // active=\"true\"\n      />\n      <dl>\n        <dt>{shopList.address}</dt>\n        <dd>{shopList.title}</dd>\n      </dl>\n    </li>\n  );\n};\n\nBreadShopLi.propTypes = {\n  shopList: PropTypes.instanceOf(Object).isRequired,\n  shopSeverLike: PropTypes.bool.isRequired,\n  likeTrue: PropTypes.func.isRequired,\n  likeFalse: PropTypes.func.isRequired,\n  shopId: PropTypes.number.isRequired,\n  shopImage: PropTypes.string.isRequired\n};\n\nexport default BreadShopLi;\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_rangking.jsx",["214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235"],"import React, { useEffect, useState } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport qs from 'qs';\n\nimport BreadShopLi from '../../../common-component/breadShop_li_component';\n\nimport axios from '../../../../utils/axios';\nimport { errorhandler } from '../../../../utils/common';\n\nimport { selectShopList, selectAddress, selectdongAddress } from '../../../redux/breadshoplist/breadShop.selectors';\nimport { setCurrentBreadShop, setShopTrueData, setShopFalseData, setSiAddressData, setDongAddressData } from '../../../redux/breadshoplist/breadShop.actions';\n\nimport { HouseRangkingWrap, ShopRangking, Location, SelectWrap, City, CurrentLocation, RangkingList } from './breadShop_rangking_style';\n\n// eslint-disable-next-line no-unused-vars\nconst HouseRangking = ({ breadShopList, onBreadShopList, onBreadShopTrue, onBreadShopFalse, siAddressList, onAddressSi, dongAddressList, onAddressDong, location, history }) => {\n  console.log(dongAddressList);\n  console.log(location);\n\n  const [siList, setSiList] = useState({\n    id: -1,\n    name: '시.도'\n  });\n  console.log(siList);\n  const [guvalue, setGuvalue] = useState({\n    id: 0, // -1은 설정이 되어있어있어서 0으로 바꿈 0빼고 나머지 숫자는 다 true 이기때문에 0은 false\n    name: '구'\n  });\n\n  useEffect(() => {\n    // 쿼리 연습용 거의확정!!\n    async function fetchShopData() {\n      try {\n        const { status, data: breadShopData } = await axios.get(`/bread/shop${location.search}`);\n        console.log(breadShopData);\n        if (status === 200) {\n          onBreadShopList(breadShopData.list);\n        }\n      } catch (err) {\n        console.log(err);\n        errorhandler(err);\n      }\n    }\n\n    fetchShopData();\n  }, [location.search, onAddressSi, onBreadShopList]);\n\n  useEffect(() => {\n    const query = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    });\n    async function fetchSiAddress() {\n      try {\n        console.log(query);\n        const { status, data } = await axios.get('/util/address/si');\n        console.log(data);\n\n        if (status === 200) {\n          onAddressSi(data.list);\n          if (query.si_code) {\n            console.log(query.si_code);\n            const ValueId = data.list.find((value) => value.id === Number(query.si_code));\n            console.log(ValueId);\n            if (ValueId) {\n              setSiList(ValueId);\n            }\n          }\n        }\n      } catch (err) {\n        errorhandler(err);\n        console.log(err);\n      }\n    }\n\n    async function fetchGuAddress(siCodeId) {\n      console.log(siCodeId);\n      try {\n        const { status, data } = await axios.get(`/util/address/gu/${siCodeId}`);\n        console.log(data);\n        if (status === 200) {\n          onAddressDong(data.list);\n        }\n\n        if (query.gu_code) {\n          console.log(query.gu_code);\n          const ValueId = data.list.find((value) => value.id === Number(query.gu_code));\n          if (ValueId) {\n            setGuvalue(ValueId);\n          }\n        }\n      } catch (err) {\n        errorhandler(err);\n        console.log(err);\n      }\n    }\n    fetchSiAddress();\n    if (query.si_code) {\n      fetchGuAddress(query.si_code);\n    }\n  }, []);\n\n  const handleClickSi = async (address) => {\n    console.log(address.id);\n    const query = qs.parse(location.search, {\n      ignoreQueryPrefix: true\n    });\n    const queryObject = { ...query };\n    delete queryObject.gu_code;\n    queryObject.si_code = address.id;\n\n    const queryData = qs.stringify(queryObject);\n    setSiList(address);\n    setGuvalue({\n      id: 0,\n      name: '구'\n    });\n    history.push(`/rank/bread-house${queryData ? `?${queryData}` : ''}`);\n    try {\n      const { status, data } = await axios.get(`/util/address/gu/${address.id}`);\n      console.log(data);\n      if (status === 200) {\n        onAddressDong(data.list);\n      }\n    } catch (err) {\n      errorhandler(err);\n      console.log(err);\n    }\n  };\n\n  const handleClickGu = async (address) => {\n    console.log(address);\n    try {\n      const query = qs.parse(location.search, {\n        ignoreQueryPrefix: true\n      });\n      const queryObject = { ...query };\n      queryObject.gu_code = address.id;\n      const queryData = qs.stringify(queryObject);\n      history.push(`/rank/bread-house${queryData ? `?${queryData}` : ''}`);\n      console.log(queryObject);\n      setGuvalue(address);\n      console.log(address.id);\n      console.log('aaa');\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // const handleChange = (e) => {\n  //   setTitle(e.target.value);\n  // };\n\n  // 빵집입력할때 연습용\n  // const handleSearch = (e) => {\n  //   e.preventDefault();\n\n  //   const queryObject = {};\n  //   if (title) {\n  //     queryObject.title = title;\n  //   }\n  //   const queryData = qs.stringify(queryObject);\n  //   history.push(`/rank/bread-house${queryData ? `?${queryData}` : ''}`);\n  // };\n\n  // 과외때 시,구 위에 쿼리 찍히게하기!!\n  // const handleSearch = (e) => {\n  //   e.preventDefault();\n\n  //   const queryObject = {};\n  //   if (siList.id) {\n  //     queryObject.si_code = siList.id;\n  //   }\n  //   if (guvalue.id) {\n  //     queryObject.gu_code = guvalue.id;\n  //   }\n\n  //   const queryData = qs.stringify(queryObject); // 쿼리를 자기스스로 만들어줌\n  //   history.push(`/rank/bread-house${queryData ? `?${queryData}` : ''}`);\n  // };\n\n  return (\n    <HouseRangkingWrap>\n      <ShopRangking>\n        <h1>빵집 랭킹</h1>\n      </ShopRangking>\n\n      <Location>\n        <SelectWrap>\n          <City>\n            <details className=\"custom-select\">\n              <summary className=\"radios\">\n                <input type=\"radio\" name=\"city\" id=\"default\" title={siList.name} checked />\n              </summary>\n              <ul className=\"list\">\n                {siAddressList.map((address) => (\n                  <li key={`siAddress${address.id}`} onClick={() => handleClickSi(address)} onKeyPress={handleClickSi} role=\"presentation\">\n                    <label>{address.name}</label>\n                  </li>\n                ))}\n              </ul>\n            </details>\n          </City>\n\n          <City>\n            <details className=\"custom-select\">\n              <summary className=\"radios\">\n                <input type=\"radio\" name=\"dong\" id=\"default\" title={guvalue.name} checked />\n              </summary>\n              <ul className=\"list\">\n                {dongAddressList.map((address) => (\n                  <li key={`dongAddress${address.id}`} onClick={() => handleClickGu(address)} onKeyPress={handleClickSi} role=\"presentation\">\n                    <label>{address.name}</label>\n                  </li>\n                ))}\n              </ul>\n            </details>\n          </City>\n          {/* <City>\n            <form onSubmit={handleSearch}>\n              <div className=\"col-sm-8\">\n                <input type=\"title\" className=\"form-control form-control-lg\" placeholder=\"빵집을 입력해주세요\" value={title} onChange={handleChange} />\n              </div>\n              <button type=\"submit\">검색</button>\n            </form>\n          </City> */}\n        </SelectWrap>\n\n        <CurrentLocation>\n          <button type=\"button\">\n            <img src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/search.png\" alt=\"\" />\n            <span>현재 위치로 설정</span>\n          </button>\n        </CurrentLocation>\n      </Location>\n\n      <RangkingList>\n        <ul className=\"list_wrap\">\n          {breadShopList.map((breadShopData) => (\n            <BreadShopLi key={`bread_shop_list${breadShopData.id}`} shopList={breadShopData} shopImage={breadShopData.image} shopSeverLike={breadShopData.like} shopId={breadShopData.id} likeTrue={onBreadShopTrue} likeFalse={onBreadShopFalse} />\n          ))}\n        </ul>\n      </RangkingList>\n    </HouseRangkingWrap>\n  );\n};\n\nHouseRangking.propTypes = {\n  breadShopList: PropTypes.instanceOf(Array).isRequired,\n  onBreadShopList: PropTypes.func.isRequired,\n  onBreadShopTrue: PropTypes.func.isRequired,\n  onBreadShopFalse: PropTypes.func.isRequired,\n  siAddressList: PropTypes.instanceOf(Array).isRequired,\n  onAddressSi: PropTypes.func.isRequired,\n  dongAddressList: PropTypes.instanceOf(Array).isRequired,\n  onAddressDong: PropTypes.func.isRequired,\n  location: PropTypes.instanceOf(Object).isRequired,\n  history: PropTypes.instanceOf(Object).isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadShopList: selectShopList,\n  siAddressList: selectAddress,\n  dongAddressList: selectdongAddress\n});\n\nconst breadShopDispathchToProps = (dispatch) => ({\n  onBreadShopList: (breadShop) => dispatch(setCurrentBreadShop(breadShop)),\n  onBreadShopTrue: (trueBreadShop) => dispatch(setShopTrueData(trueBreadShop)),\n  onBreadShopFalse: (falseBreadShop) => dispatch(setShopFalseData(falseBreadShop)),\n  onAddressSi: (addressSi) => dispatch(setSiAddressData(addressSi)),\n  onAddressDong: (addressDong) => dispatch(setDongAddressData(addressDong))\n});\n\nexport default connect(breadStateToProps, breadShopDispathchToProps)(HouseRangking);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadShop-rangking/breadShop_rangking_style.jsx",[],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":31,"column":6,"nodeType":"250","endLine":31,"endColumn":8,"suggestions":"251"},{"ruleId":"252","severity":1,"message":"253","line":62,"column":9,"nodeType":"254","messageId":"255","endLine":62,"endColumn":20},{"ruleId":"248","severity":1,"message":"256","line":85,"column":6,"nodeType":"250","endLine":85,"endColumn":8,"suggestions":"257"},{"ruleId":"252","severity":1,"message":"253","line":24,"column":11,"nodeType":"254","messageId":"255","endLine":24,"endColumn":22},{"ruleId":"252","severity":1,"message":"253","line":18,"column":9,"nodeType":"254","messageId":"255","endLine":18,"endColumn":20},{"ruleId":"248","severity":1,"message":"258","line":27,"column":6,"nodeType":"250","endLine":27,"endColumn":8,"suggestions":"259"},{"ruleId":"252","severity":1,"message":"253","line":13,"column":7,"nodeType":"254","messageId":"255","endLine":13,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":46,"column":7,"nodeType":"254","messageId":"255","endLine":46,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":54,"column":7,"nodeType":"254","messageId":"255","endLine":54,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":11,"column":7,"nodeType":"254","messageId":"255","endLine":11,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":36,"column":7,"nodeType":"254","messageId":"255","endLine":36,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":43,"column":9,"nodeType":"254","messageId":"255","endLine":43,"endColumn":20},{"ruleId":"252","severity":1,"message":"253","line":32,"column":3,"nodeType":"254","messageId":"255","endLine":32,"endColumn":14},{"ruleId":"252","severity":1,"message":"253","line":150,"column":19,"nodeType":"254","messageId":"255","endLine":150,"endColumn":32},{"ruleId":"252","severity":1,"message":"253","line":151,"column":21,"nodeType":"254","messageId":"255","endLine":151,"endColumn":33},{"ruleId":"236","replacedBy":"260"},{"ruleId":"238","replacedBy":"261"},{"ruleId":"240","replacedBy":"262"},{"ruleId":"242","replacedBy":"263"},{"ruleId":"244","replacedBy":"264"},{"ruleId":"246","replacedBy":"265"},{"ruleId":"252","severity":1,"message":"253","line":23,"column":7,"nodeType":"254","messageId":"255","endLine":23,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":19,"column":3,"nodeType":"254","messageId":"255","endLine":19,"endColumn":14},{"ruleId":"252","severity":1,"message":"253","line":20,"column":3,"nodeType":"254","messageId":"255","endLine":20,"endColumn":14},{"ruleId":"252","severity":1,"message":"253","line":26,"column":3,"nodeType":"254","messageId":"255","endLine":26,"endColumn":14},{"ruleId":"252","severity":1,"message":"253","line":37,"column":9,"nodeType":"254","messageId":"255","endLine":37,"endColumn":20},{"ruleId":"252","severity":1,"message":"253","line":42,"column":9,"nodeType":"254","messageId":"255","endLine":42,"endColumn":20},{"ruleId":"252","severity":1,"message":"253","line":56,"column":9,"nodeType":"254","messageId":"255","endLine":56,"endColumn":20},{"ruleId":"252","severity":1,"message":"253","line":58,"column":9,"nodeType":"254","messageId":"255","endLine":58,"endColumn":20},{"ruleId":"252","severity":1,"message":"253","line":63,"column":13,"nodeType":"254","messageId":"255","endLine":63,"endColumn":24},{"ruleId":"252","severity":1,"message":"253","line":65,"column":13,"nodeType":"254","messageId":"255","endLine":65,"endColumn":24},{"ruleId":"252","severity":1,"message":"253","line":73,"column":9,"nodeType":"254","messageId":"255","endLine":73,"endColumn":20},{"ruleId":"252","severity":1,"message":"253","line":78,"column":7,"nodeType":"254","messageId":"255","endLine":78,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":81,"column":9,"nodeType":"254","messageId":"255","endLine":81,"endColumn":20},{"ruleId":"252","severity":1,"message":"253","line":87,"column":11,"nodeType":"254","messageId":"255","endLine":87,"endColumn":22},{"ruleId":"252","severity":1,"message":"253","line":95,"column":9,"nodeType":"254","messageId":"255","endLine":95,"endColumn":20},{"ruleId":"248","severity":1,"message":"266","line":102,"column":6,"nodeType":"250","endLine":102,"endColumn":8,"suggestions":"267"},{"ruleId":"252","severity":1,"message":"253","line":105,"column":5,"nodeType":"254","messageId":"255","endLine":105,"endColumn":16},{"ruleId":"252","severity":1,"message":"253","line":122,"column":7,"nodeType":"254","messageId":"255","endLine":122,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":128,"column":7,"nodeType":"254","messageId":"255","endLine":128,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":133,"column":5,"nodeType":"254","messageId":"255","endLine":133,"endColumn":16},{"ruleId":"252","severity":1,"message":"253","line":142,"column":7,"nodeType":"254","messageId":"255","endLine":142,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":144,"column":7,"nodeType":"254","messageId":"255","endLine":144,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":145,"column":7,"nodeType":"254","messageId":"255","endLine":145,"endColumn":18},"lines-around-directive",["268"],"no-spaced-func",["269"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["270"],"no-console","Unexpected console statement.","MemberExpression","unexpected","React Hook useEffect has missing dependencies: 'onBreadList', 'onBreadShopList', and 'onEventList'. Either include them or remove the dependency array. If 'onBreadList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["271"],"React Hook useEffect has a missing dependency: 'onBreadList'. Either include it or remove the dependency array. If 'onBreadList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["272"],["268"],["269"],[],[],[],[],"React Hook useEffect has missing dependencies: 'location.search', 'onAddressDong', and 'onAddressSi'. Either include them or remove the dependency array. If 'onAddressSi' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["273"],"padding-line-between-statements","func-call-spacing",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},"Update the dependencies array to be: [history]",{"range":"282","text":"283"},"Update the dependencies array to be: [onBreadList, onBreadShopList, onEventList]",{"range":"284","text":"285"},"Update the dependencies array to be: [onBreadList]",{"range":"286","text":"287"},"Update the dependencies array to be: [location.search, onAddressDong, onAddressSi]",{"range":"288","text":"289"},[816,818],"[history]",[2313,2315],"[onBreadList, onBreadShopList, onEventList]",[969,971],"[onBreadList]",[3207,3209],"[location.search, onAddressDong, onAddressSi]"]