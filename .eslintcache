[{"/Users/songjisu/Desktop/bread_service/src/index.js":"1","/Users/songjisu/Desktop/bread_service/src/reportWebVitals.js":"2","/Users/songjisu/Desktop/bread_service/src/components/redux/store.js":"3","/Users/songjisu/Desktop/bread_service/src/App.jsx":"4","/Users/songjisu/Desktop/bread_service/src/components/redux/root-reducer.js":"5","/Users/songjisu/Desktop/bread_service/src/layout.js":"6","/Users/songjisu/Desktop/bread_service/src/utils/common.js":"7","/Users/songjisu/Desktop/bread_service/src/utils/axios.js":"8","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.actions.js":"9","/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content.jsx":"10","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content.jsx":"11","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content.jsx":"12","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/breadhouse_rangking.jsx":"13","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread.jsx":"14","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/popular/popular_component.jsx":"15","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.reducer.js":"16","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.reducer.js":"17","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.types.js":"18","/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer.jsx":"19","/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header.jsx":"20","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.selectors.js":"21","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.actions.js":"22","/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content_style.jsx":"23","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content_style.jsx":"24","/Users/songjisu/Desktop/bread_service/src/components/common-component/social.jsx":"25","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content_style.jsx":"26","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/breadhouse_rangking_style.jsx":"27","/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_component.jsx":"28","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/popular/popular_style.jsx":"29","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread_style.jsx":"30","/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.types.js":"31","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.selectors.js":"32","/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer_style.jsx":"33","/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header_style.jsx":"34","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/detaile/breadhouse_detaile.jsx":"35","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/breadhouse_router.jsx":"36","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/detaile/breadhouse_detaile_style.jsx":"37","/Users/songjisu/Desktop/bread_service/src/components/common-component/breadShop_li_component.jsx":"38","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/bread-shop-reducer.js":"39","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.reducer.js":"40","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detaile/breadShopDetaile.reducer.js":"41","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detaile/breadShopDetaile.types.js":"42","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.types.js":"43","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detaile/breadShopDetaile.actions.js":"44","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detaile/breadShopDetaile.selectors.js":"45","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.selectors.js":"46","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.actions.js":"47"},{"size":590,"mtime":1617804793063,"results":"48","hashOfConfig":"49"},{"size":364,"mtime":1612334723393,"results":"50","hashOfConfig":"49"},{"size":382,"mtime":1616310023501,"results":"51","hashOfConfig":"49"},{"size":2278,"mtime":1617804793044,"results":"52","hashOfConfig":"49"},{"size":352,"mtime":1618022618176,"results":"53","hashOfConfig":"49"},{"size":446,"mtime":1616310023510,"results":"54","hashOfConfig":"49"},{"size":1016,"mtime":1616310023511,"results":"55","hashOfConfig":"49"},{"size":277,"mtime":1616310023510,"results":"56","hashOfConfig":"49"},{"size":264,"mtime":1616310023501,"results":"57","hashOfConfig":"49"},{"size":3180,"mtime":1616310023506,"results":"58","hashOfConfig":"49"},{"size":4050,"mtime":1616310023507,"results":"59","hashOfConfig":"49"},{"size":3715,"mtime":1618023210074,"results":"60","hashOfConfig":"49"},{"size":7005,"mtime":1618023175395,"results":"61","hashOfConfig":"49"},{"size":3708,"mtime":1616310023504,"results":"62","hashOfConfig":"49"},{"size":1878,"mtime":1617804793061,"results":"63","hashOfConfig":"49"},{"size":674,"mtime":1616310023501,"results":"64","hashOfConfig":"49"},{"size":570,"mtime":1617804793047,"results":"65","hashOfConfig":"49"},{"size":118,"mtime":1616310023501,"results":"66","hashOfConfig":"49"},{"size":2074,"mtime":1616310023504,"results":"67","hashOfConfig":"49"},{"size":3256,"mtime":1617804793062,"results":"68","hashOfConfig":"49"},{"size":179,"mtime":1616520068965,"results":"69","hashOfConfig":"49"},{"size":291,"mtime":1617804793047,"results":"70","hashOfConfig":"49"},{"size":3029,"mtime":1616310023506,"results":"71","hashOfConfig":"49"},{"size":3675,"mtime":1616310023508,"results":"72","hashOfConfig":"49"},{"size":5091,"mtime":1616310023498,"results":"73","hashOfConfig":"49"},{"size":2037,"mtime":1617804793059,"results":"74","hashOfConfig":"49"},{"size":4677,"mtime":1617804793056,"results":"75","hashOfConfig":"49"},{"size":869,"mtime":1617804793046,"results":"76","hashOfConfig":"49"},{"size":1473,"mtime":1616310023503,"results":"77","hashOfConfig":"49"},{"size":2706,"mtime":1616310023504,"results":"78","hashOfConfig":"49"},{"size":119,"mtime":1617804793048,"results":"79","hashOfConfig":"49"},{"size":178,"mtime":1616310023501,"results":"80","hashOfConfig":"49"},{"size":1322,"mtime":1616310023505,"results":"81","hashOfConfig":"49"},{"size":3348,"mtime":1617804793063,"results":"82","hashOfConfig":"49"},{"size":4720,"mtime":1618022244356,"results":"83","hashOfConfig":"49"},{"size":552,"mtime":1617951574719,"results":"84","hashOfConfig":"49"},{"size":3877,"mtime":1617804793058,"results":"85","hashOfConfig":"49"},{"size":1808,"mtime":1617804793045,"results":"86","hashOfConfig":"49"},{"size":293,"mtime":1618019472641,"results":"87","hashOfConfig":"49"},{"size":429,"mtime":1618022438199,"results":"88","hashOfConfig":"49"},{"size":677,"mtime":1618021776857,"results":"89","hashOfConfig":"49"},{"size":135,"mtime":1618019245376,"results":"90","hashOfConfig":"49"},{"size":105,"mtime":1618018009877,"results":"91","hashOfConfig":"49"},{"size":221,"mtime":1618021661993,"results":"92","hashOfConfig":"49"},{"size":223,"mtime":1618023245529,"results":"93","hashOfConfig":"49"},{"size":213,"mtime":1618022983250,"results":"94","hashOfConfig":"49"},{"size":181,"mtime":1618022590419,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"1tayil7",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"98"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"98"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"/Users/songjisu/Desktop/bread_service/src/index.js",[],["200","201","202","203","204","205"],"/Users/songjisu/Desktop/bread_service/src/reportWebVitals.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/store.js",[],"/Users/songjisu/Desktop/bread_service/src/App.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/root-reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/layout.js",[],"/Users/songjisu/Desktop/bread_service/src/utils/common.js",[],"/Users/songjisu/Desktop/bread_service/src/utils/axios.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content.jsx",["206"],"import React, { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { setCurrentUser } from '../redux/user/user.actions';\nimport { sweetAlert, isEmailValid, errorhandler } from '../../utils/common';\nimport axios, { setAuthorization } from '../../utils/axios';\n\nimport {\n  SigninAllWrap,\n  InputEmail,\n  InputPassword,\n  LoginButton,\n  SigninLine\n} from './signin_content_style';\nimport Social from '../common-component/social';\n\nfunction Signin({ onUserSet, history }) {\n  const [LoginValue, setLoginValue] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = LoginValue;\n\n  useEffect(() => {\n    const bringUserToken = localStorage.getItem('userToken');\n    if (bringUserToken) {\n      history.replace('/');\n    }\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const signinObject = {\n        email,\n        password\n      };\n\n      if (!email) {\n        sweetAlert('이메일을 입력해주세요.');\n      } else if (isEmailValid(email)) {\n        sweetAlert('이메일 형식을 맞춰주세요.');\n      } else if (!password) {\n        sweetAlert('비밀번호를 입력해주세요.');\n      } else {\n        const { status, data } = await axios.post('/user/signin', signinObject);\n        if (status === 200) {\n          const {\n            data: { token }\n          } = data;\n          setAuthorization(token);\n\n          const { status: signinStatus, data: getData } = await axios.get('/user/current');\n          if (signinStatus === 200) {\n            onUserSet(getData.data, token);\n            history.push('/');\n          }\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  const handleChange = (e) => {\n    setLoginValue({\n      ...LoginValue,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <SigninAllWrap>\n      <div className=\"login-wrap\">\n        <form className=\"form_wrap\" onSubmit={handleSubmit}>\n          <h3>로그인</h3>\n\n          <InputEmail>\n            <span>이메일</span>\n            <input\n              type=\"text\"\n              placeholder=\"이메일 입력\"\n              onChange={handleChange}\n              name=\"email\"\n              value={email}\n            />\n          </InputEmail>\n\n          <InputPassword>\n            <span>비밀번호</span>\n            <input\n              type=\"password\"\n              placeholder=\"비밀번호 입력\"\n              onChange={handleChange}\n              name=\"password\"\n              value={password}\n            />\n          </InputPassword>\n\n          <LoginButton>\n            <button type=\"submit\">로그인</button>\n          </LoginButton>\n        </form>\n        <SigninLine>\n          <span>또는</span>\n          <hr />\n        </SigninLine>\n\n        <Social />\n      </div>\n    </SigninAllWrap>\n  );\n}\n\nSignin.propTypes = {\n  onUserSet: PropTypes.func.isRequired,\n  history: PropTypes.instanceOf(Object).isRequired\n};\n\nconst userToPropsDispatch = (dispatch) => ({\n  onUserSet: (user, token) => dispatch(setCurrentUser(user, token))\n});\n\nexport default connect(null, userToPropsDispatch)(Signin);\n","/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content.jsx",["207","208"],"import React, { useEffect } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { errorhandler } from '../../../../utils/common';\n\nimport { selectShopList } from '../../../redux/breadshop/list/breadShop.selectors';\nimport { setCurrentBreadShop } from '../../../redux/breadshop/list/breadShop.actions';\n\nimport { selectBreadList } from '../../../redux/breadlist/bread.selectors';\nimport { setBreadRankingList, setHeartTrueData } from '../../../redux/breadlist/bread.actions';\n\nimport axios from '../../../../utils/axios';\nimport { Main, MainBackground, BreadShopRanking, BreaShopList } from './mainhome_content_style';\n\nconst MainHome = ({ breadShopList, onBreadShopList, breadList, onBreadList, onHeartFilled }) => {\n  console.log(onHeartFilled);\n\n  useEffect(() => {\n    async function fetchBreadData() {\n      try {\n        const { status, data: breadData } = await axios.get('/rank/bread');\n\n        if (status === 200) {\n          onBreadList(breadData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    async function fetchBreadShopData() {\n      try {\n        const { status, data: breadShopData } = await axios.get('/rank/bread/shop');\n        if (status === 200) {\n          onBreadShopList(breadShopData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchBreadData();\n    fetchBreadShopData();\n  }, []);\n\n  return (\n    <Main>\n      <div className=\"breadShopWrap\">\n        <MainBackground>\n          <img src=\"\" alt=\"\" />\n        </MainBackground>\n\n        <BreadShopRanking>\n          <h1>빵집 랭킹</h1>\n          <div className=\"all_show\">\n            <span>모두보기</span>\n            <span className=\"triangle\" />\n          </div>\n        </BreadShopRanking>\n\n        <BreaShopList>\n          <ul className=\"list_wrap\">\n            {breadShopList.map((breadShopData) => (\n              <li key={breadShopData.id}>\n                <img src={breadShopData.image} alt={breadShopData.title} />\n                <dl>\n                  <dt>{breadShopData.address}</dt>\n                  <dd>{breadShopData.title}</dd>\n                </dl>\n              </li>\n            ))}\n          </ul>\n        </BreaShopList>\n      </div>\n\n      <div className=\"breadRankingWrap\">\n        <BreadShopRanking>\n          <h1>요즘 인기있는 빵 랭킹</h1>\n          <div className=\"all_show\">\n            <span>모두보기</span>\n            <span className=\"triangle\" />\n          </div>\n        </BreadShopRanking>\n\n        <BreaShopList>\n          <ul className=\"list_wrap\">\n            {breadList.map((breadData) => (\n              <li key={breadData.id}>\n                <img src={breadData.image} alt=\"\" />\n                <dl>\n                  <dd>{breadData.title}</dd>\n                </dl>\n              </li>\n            ))}\n          </ul>\n        </BreaShopList>\n      </div>\n    </Main>\n  );\n};\n\nMainHome.propTypes = {\n  breadShopList: PropTypes.instanceOf(Array).isRequired,\n  onBreadShopList: PropTypes.func.isRequired,\n  breadList: PropTypes.instanceOf(Array).isRequired,\n  onBreadList: PropTypes.func.isRequired,\n  onHeartFilled: PropTypes.func.isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadShopList: selectShopList,\n  breadList: selectBreadList\n});\n\nconst breadShopDispathchToProps = (dispatch) => ({\n  onBreadShopList: (breadShop) => dispatch(setCurrentBreadShop(breadShop)),\n  onBreadList: (bread) => dispatch(setBreadRankingList(bread)),\n  onHeartFilled: (filled) => dispatch(setHeartTrueData(filled))\n});\n\nexport default connect(breadStateToProps, breadShopDispathchToProps)(MainHome);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/breadhouse_rangking.jsx",["209"],"import React, { useEffect } from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n// import { Link } from 'react-router-dom';\n\nimport BreadShopLi from '../../../common-component/breadShop_li_component';\n\nimport axios from '../../../../utils/axios';\nimport { errorhandler } from '../../../../utils/common';\n\nimport { selectShopList } from '../../../redux/breadshop/list/breadShop.selectors';\nimport { setCurrentBreadShop } from '../../../redux/breadshop/list/breadShop.actions';\n\nimport {\n  HouseRangkingWrap,\n  ShopRangking,\n  Location,\n  SelectWrap,\n  City,\n  CurrentLocation,\n  RangkingList\n} from './breadhouse_rangking_style';\n\n// 하트 액션\nimport { setHeartTrueData } from '../../../redux/breadlist/bread.actions';\n\nconst HouseRangking = ({\n  breadShopList,\n  onBreadShopList,\n  onBreadShopTrue,\n  onBreadShopFalse,\n  onHeartSpace\n}) => {\n  useEffect(() => {\n    async function fetchShopData() {\n      try {\n        const { status, data: breadShopData } = await axios.get('/bread/shop');\n        if (status === 200) {\n          onBreadShopList(breadShopData.list);\n          onHeartSpace(breadShopData.like);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchShopData();\n  }, []);\n\n  // const changeHeart = () => {\n  //   alert('하투하투');\n  // };\n\n  return (\n    <HouseRangkingWrap>\n      <ShopRangking>\n        <h1>빵집 랭킹</h1>\n      </ShopRangking>\n\n      <Location>\n        <SelectWrap>\n          <City>\n            <details className=\"custom-select\">\n              <summary className=\"radios\">\n                <input type=\"radio\" name=\"city\" id=\"default\" title=\"시.도\" checked />\n                <input type=\"radio\" name=\"city\" id=\"city1\" title=\"서울특별시\" />\n                <input type=\"radio\" name=\"city\" id=\"city2\" title=\"경기도\" />\n                <input type=\"radio\" name=\"city\" id=\"city3\" title=\"대전광역시\" />\n                <input type=\"radio\" name=\"city\" id=\"city4\" title=\"대구광역시\" />\n                <input type=\"radio\" name=\"city\" id=\"city5\" title=\"부산광역시\" />\n              </summary>\n              <ul className=\"list\">\n                <li>\n                  <label htmlFor=\"city1\">서울특별시</label>\n                </li>\n                <li>\n                  <label htmlFor=\"city2\">경기도</label>\n                </li>\n                <li>\n                  <label htmlFor=\"city3\">대전광역시</label>\n                </li>\n                <li>\n                  <label htmlFor=\"city4\">대구광역시</label>\n                </li>\n                <li>\n                  <label htmlFor=\"city5\">부산광역시</label>\n                </li>\n              </ul>\n            </details>\n          </City>\n\n          <City>\n            <details className=\"custom-select\">\n              <summary className=\"radios\">\n                <input type=\"radio\" name=\"dong\" id=\"default\" title=\"동\" checked />\n                <input type=\"radio\" name=\"dong\" id=\"dong1\" title=\"서교동\" />\n                <input type=\"radio\" name=\"dong\" id=\"dong2\" title=\"압구정동\" />\n                <input type=\"radio\" name=\"dong\" id=\"dong3\" title=\"신림동\" />\n                <input type=\"radio\" name=\"dong\" id=\"dong4\" title=\"창전동\" />\n                <input type=\"radio\" name=\"dong\" id=\"dong5\" title=\"성산동\" />\n              </summary>\n              <ul className=\"list\">\n                <li>\n                  <label htmlFor=\"dong1\">서교동</label>\n                </li>\n                <li>\n                  <label htmlFor=\"dong2\">압구정동</label>\n                </li>\n                <li>\n                  <label htmlFor=\"dong3\">신림동</label>\n                </li>\n                <li>\n                  <label htmlFor=\"dong4\">창전동</label>\n                </li>\n                <li>\n                  <label htmlFor=\"dong5\">성산동</label>\n                </li>\n              </ul>\n            </details>\n          </City>\n\n          <City>\n            <details className=\"custom-select\">\n              <summary className=\"radios\">\n                <input type=\"radio\" name=\"bread\" id=\"default\" title=\"빵 종류\" checked />\n                <input type=\"radio\" name=\"bread\" id=\"bread1\" title=\"소보루빵\" />\n                <input type=\"radio\" name=\"bread\" id=\"bread2\" title=\"식빵\" />\n                <input type=\"radio\" name=\"bread\" id=\"bread3\" title=\"단팥빵\" />\n                <input type=\"radio\" name=\"bread\" id=\"bread4\" title=\"바게트빵\" />\n                <input type=\"radio\" name=\"bread\" id=\"bread5\" title=\"샌드위치\" />\n              </summary>\n              <ul className=\"list\">\n                <li>\n                  <label htmlFor=\"bread1\">소보루빵</label>\n                </li>\n                <li>\n                  <label htmlFor=\"bread2\">식빵</label>\n                </li>\n                <li>\n                  <label htmlFor=\"bread3\">단팥빵</label>\n                </li>\n                <li>\n                  <label htmlFor=\"bread4\">바게트빵</label>\n                </li>\n                <li>\n                  <label htmlFor=\"bread5\">샌드위치</label>\n                </li>\n              </ul>\n            </details>\n          </City>\n        </SelectWrap>\n\n        <CurrentLocation>\n          <button type=\"button\">\n            <img\n              src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/search.png\"\n              alt=\"\"\n            />\n            <span>현재 위치로 설정</span>\n          </button>\n        </CurrentLocation>\n      </Location>\n\n      <RangkingList>\n        <ul className=\"list_wrap\">\n          {breadShopList.map((breadShopData) => (\n            <Link to={`/rank/bread-house/detail/${breadShopData.id}`}>\n              <BreadShopLi\n                key={`bread_shop_list${breadShopData.id}`}\n                shopList={breadShopData}\n                shopImage={breadShopData.image}\n                shopSeverLike={breadShopData.like}\n                shopId={breadShopData.id}\n                likeTrue={onBreadShopTrue}\n                likeFalse={onBreadShopFalse}\n              />\n            </Link>\n          ))}\n        </ul>\n      </RangkingList>\n    </HouseRangkingWrap>\n  );\n};\n\nHouseRangking.propTypes = {\n  breadShopList: PropTypes.instanceOf(Array).isRequired,\n  onBreadShopList: PropTypes.func.isRequired,\n  onBreadShopTrue: PropTypes.func.isRequired,\n  onBreadShopFalse: PropTypes.func.isRequired,\n  onHeartSpace: PropTypes.bool.isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadShopList: selectShopList\n});\n\nconst breadShopDispathchToProps = (dispatch) => ({\n  onBreadShopList: (breadShop) => dispatch(setCurrentBreadShop(breadShop)),\n  onHeartSpace: (heart) => dispatch(setHeartTrueData(heart))\n});\n\nexport default connect(breadStateToProps, breadShopDispathchToProps)(HouseRangking);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread.jsx",["210"],"import React, { useEffect } from 'react';\nimport Youtube from 'react-youtube';\n// import { Swiper } from 'swiper/react';\n// import 'swiper/css/swiper.scss';\n\nimport Slider from 'react-slick';\nimport axios from '../../../../utils/axios';\nimport { errorhandler } from '../../../../utils/common';\n\nimport {\n  BreadPickWrap,\n  YoutubePickEvent,\n  StyledSlider,\n  PickBreadTitle,\n  PickBreadImage\n} from './youtube_bread_style';\n\nconst PickBread = () => {\n  useEffect(() => {\n    async function fetchyoutubeData() {\n      try {\n        const { status, data } = await axios.get('/youtube');\n        if (status === 200) {\n          console.log(data);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchyoutubeData();\n  }, []);\n  const opts = {\n    width: '300',\n    height: '300',\n    playerVars: {\n      autoplay: 1\n    }\n  };\n\n  const onReady = (e) => {\n    e.target.pauseVideo();\n  };\n\n  // 슬라이드\n  const settings = {\n    dots: true,\n    infinite: true,\n    autoplay: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n\n    responsive: [\n      // 반응형 웹 구현 옵션\n      {\n        breakpoint: 1200, // 화면 사이즈 1200px\n        settings: {\n          slidesToShow: 3\n        }\n      },\n      {\n        breakpoint: 1023,\n        settings: {\n          slidesToShow: 3\n        }\n      },\n      {\n        breakpoint: 767,\n        settings: {\n          slidesToShow: 1\n        }\n      }\n    ]\n  };\n\n  return (\n    <BreadPickWrap>\n      <YoutubePickEvent />\n\n      <PickBreadTitle>\n        <span>유튜버들이 선택한 빵을 즐겨보세요</span>\n      </PickBreadTitle>\n\n      {/* <Swiper\n        navigation\n        pagination={{\n          clickable: true\n        }}\n        scrollbar={{\n          draggable: true\n        }}> */}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <Slider {...settings}>\n        <StyledSlider>\n          <PickBreadImage>\n            <div className=\"VideoContainer\">\n              <Youtube\n                className=\"youtubeVideo\"\n                videoId=\"2g811Eo7K8U\"\n                opts={opts}\n                onReady={onReady}\n              />\n            </div>\n            <div className=\"pick_title\">\n              <span>Title</span>\n              <span>Description</span>\n              <button type=\"button\" className=\"show_button\">\n                리뷰 보러가기\n              </button>\n            </div>\n          </PickBreadImage>\n          <PickBreadImage>\n            <div className=\"VideoContainer\">\n              <Youtube\n                className=\"youtubeVideo\"\n                videoId=\"2g811Eo7K8U\"\n                opts={opts}\n                onReady={onReady}\n              />\n            </div>\n            <div className=\"pick_title\">\n              <span>Title</span>\n              <span>Description</span>\n              <button type=\"button\" className=\"show_button\">\n                리뷰 보러가기\n              </button>\n            </div>\n          </PickBreadImage>\n          <PickBreadImage>\n            <div className=\"VideoContainer\">\n              <Youtube\n                className=\"youtubeVideo VideoContainer\"\n                videoId=\"2g811Eo7K8U\"\n                opts={opts}\n                onReady={onReady}\n              />\n            </div>\n            <div className=\"pick_title\">\n              <span>Title</span>\n              <span>Description</span>\n              <button type=\"button\" className=\"show_button\">\n                리뷰 보러가기\n              </button>\n            </div>\n          </PickBreadImage>\n        </StyledSlider>\n      </Slider>\n      {/* </Swiper> */}\n    </BreadPickWrap>\n  );\n};\n\nexport default PickBread;\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/popular/popular_component.jsx",["211"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport BreadLi from '../../../common-component/bread_li_component';\nimport { selectBreadList } from '../../../redux/breadlist/bread.selectors';\nimport { setBreadRankingList, setHeartTrueData } from '../../../redux/breadlist/bread.actions';\nimport axios from '../../../../utils/axios';\nimport { errorhandler } from '../../../../utils/common';\nimport { PopularBreadWrap, PopularWrap, BreadList } from './popular_style';\n\nconst PopularBread = ({ breadList, onBreadList, onHeartFilled }) => {\n  useEffect(() => {\n    async function fetchbreadData() {\n      try {\n        const { status, data: breadData } = await axios.get('/bread');\n        if (status === 200) {\n          onBreadList(breadData.list);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchbreadData();\n  }, []);\n\n  return (\n    <PopularBreadWrap>\n      <PopularWrap>\n        <h1>요즘 인기있는 빵</h1>\n      </PopularWrap>\n\n      <BreadList>\n        <ul className=\"list_wrap\">\n          {breadList.map((breadData) => (\n            <BreadLi breadData={breadData} onHeartFilled={onHeartFilled} />\n          ))}\n        </ul>\n      </BreadList>\n    </PopularBreadWrap>\n  );\n};\n\nPopularBread.propTypes = {\n  breadList: PropTypes.instanceOf(Array).isRequired,\n  onBreadList: PropTypes.func.isRequired,\n  onHeartFilled: PropTypes.func.isRequired\n};\n\nconst breadStateToProps = createStructuredSelector({\n  breadList: selectBreadList\n});\n\nconst breadDispathchToProps = (dispatch) => ({\n  onBreadList: (bread) => dispatch(setBreadRankingList(bread)),\n  onHeartFilled: (filled, heartId) => dispatch(setHeartTrueData(filled, heartId))\n});\n\nexport default connect(breadStateToProps, breadDispathchToProps)(PopularBread);\n","/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-in/signin_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/sign-up/signup_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/social.jsx",["212","213"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport KakaoLogin from 'react-kakao-login';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\n\nimport axios, { setAuthorization } from '../../utils/axios';\nimport { errorhandler } from '../../utils/common';\nimport { setCurrentUser } from '../redux/user/user.actions';\nimport { SosalLogin, GoogleWrap, FacebookWrap, KakaoWrap } from '../sign-in/signin_content_style';\n\n// 소셜 로그인\nconst kakaoToken = process.env.REACT_APP_KAKAO_KEY;\nconst facebookToken = process.env.REACT_APP_FACEBOOK_KEY;\nconst googleToken = process.env.REACT_APP_GOOGLE_KEY;\n\nconst Social = ({ onUserSet, history }) => {\n  // 카카오\n  const onSuccess = async (userData) => {\n    try {\n      const { access_token: accessToken } = userData.response;\n\n      const socialObject = {\n        token: accessToken,\n        type: 'kakao'\n      };\n\n      const { data } = await axios.post('/user/social/signup', socialObject);\n\n      const {\n        data: { token }\n      } = data;\n\n      setAuthorization(token);\n\n      // 서버에서 누구인지 받아오는곳\n      const { status, data: getData } = await axios.get('/user/current');\n      if (status === 201) {\n        onUserSet(getData.data, token);\n        history.push('/');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 구글\n  const responseGoogle = async (response) => {\n    try {\n      if (!response.error) {\n        const { accessToken: googleAccessToken } = response;\n\n        const socialObject = {\n          token: googleAccessToken,\n          type: 'google'\n        };\n\n        const { data } = await axios.post('/user/social/signup', socialObject);\n\n        const {\n          data: { token }\n        } = data;\n\n        setAuthorization(token);\n\n        // 서버에서 누구인지 받아오는곳\n        const { status, data: getData } = await axios.get('/user/current');\n        if (status === 201) {\n          onUserSet(getData.data, token);\n          history.push('/');\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  // 페이스북\n  const responseFacebook = async (response) => {\n    try {\n      const { accessToken: facebookAccessToken } = response;\n\n      const socialObject = {\n        token: facebookAccessToken,\n        type: 'facebook'\n      };\n\n      const {\n        data: {\n          data: { token }\n        }\n      } = await axios.post('/user/social/signup', socialObject);\n\n      setAuthorization(token);\n\n      // 서버에서 누구인지 받아오는곳\n      const { status, data: facebookData } = await axios.get('/user/current');\n      if (status === 201) {\n        onUserSet(facebookData.data, token);\n        history.push('/');\n      }\n    } catch (err) {\n      errorhandler(err);\n    }\n  };\n\n  return (\n    <SosalLogin className=\"clearfix\">\n      <GoogleWrap>\n        <GoogleLogin\n          clientId={googleToken}\n          render={(renderProps) => (\n            <button onClick={renderProps.onClick} disabled={renderProps.disabled} type=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/google.png\"\n                alt=\"구글 로그인\"\n              />\n              <span>구글</span>\n            </button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={responseGoogle}\n          onFailure={responseGoogle}\n          cookiePolicy=\"single_host_origin\"\n        />\n      </GoogleWrap>\n\n      <FacebookWrap>\n        <FacebookLogin\n          appId={facebookToken}\n          callback={responseFacebook}\n          fields=\"name,email,picture\"\n          render={(renderProps) => (\n            <button onClick={renderProps.onClick} type=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/socalfacebook.png\"\n                alt=\"페이스북 로그인\"\n              />\n              <span>페이스북</span>\n            </button>\n          )}\n        />\n      </FacebookWrap>\n\n      <KakaoWrap>\n        <KakaoLogin\n          token={kakaoToken}\n          onSuccess={onSuccess}\n          onFail={console.error}\n          onLogout={console.info}\n          render={({ onClick }) => (\n            <div onClick={onClick} aria-hidden=\"true\" role=\"button\">\n              <img\n                src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/ico_kakaotalk.png\"\n                alt=\"카카오톡 로그인\"\n              />\n              <span>카카오톡</span>\n            </div>\n          )}\n        />\n      </KakaoWrap>\n    </SosalLogin>\n  );\n};\n\nSocial.propTypes = {\n  onUserSet: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.object).isRequired\n};\n\nconst userToPropsDispatch = (dispatch) => ({\n  onUserSet: (user, token) => dispatch(setCurrentUser(user, token))\n});\n\nexport default connect(null, userToPropsDispatch)(Social);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/main/mainhome_content_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/breadhouse_rangking_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/common-component/bread_li_component.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/popular/popular_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/youtube-pick/youtube_bread_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadlist/bread.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/user/user.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/footer/footer_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/header/header_style.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/detaile/breadhouse_detaile.jsx",["214","215","216","217","218","219"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport {\n  HouseDetaile,\n  Grade,\n  ShopImage,\n  Information,\n  Review,\n  ReviewBox,\n  BoxButton,\n  BoxLeft,\n  BoxRight,\n  Content,\n  UserImage,\n  OtherBreadShop,\n  BreadShopList\n} from './breadhouse_detaile_style';\nimport axios from '../../../../../utils/axios';\nimport BreadShopLi from '../../../../common-component/breadShop_li_component';\nimport { selectShopListDetaile } from '../../../../redux/breadshop/detaile/breadShopDetaile.selectors';\nimport { setCurrentBreadShopDetaile } from '../../../../redux/breadshop/detaile/breadShopDetaile.actions';\n\nimport { errorhandler } from '../../../../../utils/common';\n\nconst ShopDetaile = ({ ShopDetaileList, onShopDetaileList, match }) => {\n  console.log(match);\n  console.log('디테일');\n  console.log(ShopDetaileList);\n  console.log(onShopDetaileList);\n\n  useEffect(() => {\n    async function fetchDetailData() {\n      try {\n        const { breadShopId } = match.params;\n\n        const { status, data } = await axios.get(`/bread/shop/${breadShopId}`);\n        console.log(data);\n        if (status === 200) {\n          onShopDetaileList(data.data);\n          // ShopDetaileList(data.id);\n        }\n      } catch (err) {\n        errorhandler(err);\n      }\n    }\n    fetchDetailData();\n  }, []);\n  return (\n    <HouseDetaile>\n      <Grade>\n        <h1>\n          빵집 이름 <span className=\"text_color\">(평점)</span>\n        </h1>\n        <img\n          src=\"https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/spaceheart.png\"\n          alt=\"빈하트 이미지\"\n        />\n      </Grade>\n      <ShopImage>\n        <span />\n\n        <Information>\n          <div>주소</div>\n          <p>Description</p>\n        </Information>\n        <Information>\n          <div>전화번호</div>\n          <p>010-0000-0000</p>\n        </Information>\n        <Information>\n          <div>음식종류</div>\n          <p>Description</p>\n        </Information>\n        <Information>\n          <div>가격</div>\n          <p>Description</p>\n        </Information>\n        <Information>\n          <div>주차</div>\n          <p>Description</p>\n        </Information>\n        <Information>\n          <div>영업시간</div>\n          <p>Description</p>\n        </Information>\n        <Information>\n          <div>홈페이지</div>\n          <p>www.naver.com</p>\n        </Information>\n      </ShopImage>\n\n      <Review>\n        <h1>리뷰</h1>\n      </Review>\n\n      <ReviewBox>\n        <BoxButton>\n          <BoxLeft>\n            <img src=\"\" alt=\"\" />\n            <p>User</p>\n            <p>2020.12.29</p>\n          </BoxLeft>\n\n          <BoxRight>\n            <button type=\"submit\">좋아요</button>\n            <button type=\"submit\">별로예요</button>\n          </BoxRight>\n        </BoxButton>\n\n        <Content>\n          <p>어쩌구저쩌구~~어쩌구저쩌구~~어쩌구저쩌구~~어쩌구저쩌구~~123445566778900</p>\n          <p>어쩌구저쩌구~~어쩌구저쩌구~~어쩌구저쩌구~~어쩌구저쩌구~~123445566778900</p>\n          <p>어쩌구저쩌구~~어쩌구저쩌구~~어쩌구저쩌구~~어쩌구저쩌구~~123445566778900</p>\n        </Content>\n\n        <UserImage>\n          <img src=\"\" alt=\"\" />\n          <img src=\"\" alt=\"\" />\n          <img src=\"\" alt=\"\" />\n          <img src=\"\" alt=\"\" />\n          <img src=\"\" alt=\"\" />\n        </UserImage>\n      </ReviewBox>\n\n      <OtherBreadShop>\n        <h1>빵집 랭킹</h1>\n        <div className=\"all_show\">\n          <span>모두보기</span>\n          <span className=\"triangle\" />\n        </div>\n      </OtherBreadShop>\n\n      <BreadShopList>\n        <ul className=\"list_wrap\">\n          {ShopDetaileList.map((breadShopData) => (\n            <BreadShopLi\n              key={`bread_shop_list${breadShopData.id}`}\n              shopList={breadShopData}\n              shopImage={breadShopData.image}\n              shopSeverLike={breadShopData.like}\n              shopId={breadShopData.id}\n            />\n          ))}\n        </ul>\n      </BreadShopList>\n    </HouseDetaile>\n  );\n};\n\nShopDetaile.propTypes = {\n  ShopDetaileList: PropTypes.instanceOf(Array).isRequired,\n  onShopDetaileList: PropTypes.func.isRequired,\n  match: PropTypes.func.isRequired\n};\n\nconst breadShopStateToProps = createStructuredSelector({\n  ShopDetaileList: selectShopListDetaile\n});\n\nconst breadShopDetaileDispathch = (dispatch) => ({\n  onShopDetaileList: (DetaileList) => dispatch(setCurrentBreadShopDetaile(DetaileList))\n});\n\nexport default connect(breadShopStateToProps, breadShopDetaileDispathch)(ShopDetaile);\n","/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/breadhouse_router.jsx",[],"/Users/songjisu/Desktop/bread_service/src/components/service-main/contents/breadhouse-rangking/detaile/breadhouse_detaile_style.jsx",[],["220","221","222","223","224","225"],"/Users/songjisu/Desktop/bread_service/src/components/common-component/breadShop_li_component.jsx",["226","227","228","229"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport axios from '../../utils/axios';\nimport { errorhandler } from '../../utils/common';\n\nconst BreadShopLi = ({ shopList, shopImage, shopSeverLike, likeTrue, likeFalse, shopId }) => {\n  console.log(shopList);\n  console.log(shopImage);\n  const changeShopHeart = async () => {\n    try {\n      if (shopSeverLike) {\n        const { status } = await axios.delete(`/bread/shop/favorite/${shopId}`);\n        if (status === 200) {\n          likeFalse(shopId);\n        }\n      } else {\n        const { status: shopStatus } = await axios.post(`/bread/shop/favorite/${shopId}`);\n        if (shopStatus === 200) {\n          likeTrue(shopId);\n        }\n      }\n    } catch (err) {\n      errorhandler(err);\n      console.log(err);\n    }\n  };\n  console.log(shopList.title);\n  return (\n    <li>\n      <img src={shopImage} alt={`${shopList.title}의 이미지`} />\n      <img\n        src={\n          shopSeverLike\n            ? 'https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/heart.png'\n            : 'https://s3.ap-northeast-2.amazonaws.com/image.mercuryeunoia.com/images/web/jisu/+common_icon/spaceheart.png'\n        }\n        alt=\"좋아요하트이미지\"\n        className=\"heart_image\"\n        aria-hidden=\"true\"\n        onClick={changeShopHeart}\n        // active=\"true\"\n      />\n      <dl>\n        <dt>{shopList.address}</dt>\n        <dd>{shopList.title}</dd>\n      </dl>\n    </li>\n  );\n};\n\nBreadShopLi.propTypes = {\n  shopList: PropTypes.instanceOf(Object).isRequired,\n  shopSeverLike: PropTypes.bool.isRequired,\n  likeTrue: PropTypes.func.isRequired,\n  likeFalse: PropTypes.func.isRequired,\n  shopId: PropTypes.number.isRequired,\n  shopImage: PropTypes.string.isRequired\n};\n\nexport default BreadShopLi;\n","/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/bread-shop-reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detaile/breadShopDetaile.reducer.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detaile/breadShopDetaile.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.types.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detaile/breadShopDetaile.actions.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/detaile/breadShopDetaile.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.selectors.js",[],"/Users/songjisu/Desktop/bread_service/src/components/redux/breadshop/list/breadShop.actions.js",[],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":31,"column":6,"nodeType":"244","endLine":31,"endColumn":8,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":18,"column":3,"nodeType":"248","messageId":"249","endLine":18,"endColumn":14},{"ruleId":"242","severity":1,"message":"250","line":44,"column":6,"nodeType":"244","endLine":44,"endColumn":8,"suggestions":"251"},{"ruleId":"242","severity":1,"message":"252","line":49,"column":6,"nodeType":"244","endLine":49,"endColumn":8,"suggestions":"253"},{"ruleId":"246","severity":1,"message":"247","line":24,"column":11,"nodeType":"248","messageId":"249","endLine":24,"endColumn":22},{"ruleId":"242","severity":1,"message":"254","line":26,"column":6,"nodeType":"244","endLine":26,"endColumn":8,"suggestions":"255"},{"ruleId":"246","severity":1,"message":"247","line":150,"column":19,"nodeType":"248","messageId":"249","endLine":150,"endColumn":32},{"ruleId":"246","severity":1,"message":"247","line":151,"column":21,"nodeType":"248","messageId":"249","endLine":151,"endColumn":33},{"ruleId":"246","severity":1,"message":"247","line":28,"column":3,"nodeType":"248","messageId":"249","endLine":28,"endColumn":14},{"ruleId":"246","severity":1,"message":"247","line":29,"column":3,"nodeType":"248","messageId":"249","endLine":29,"endColumn":14},{"ruleId":"246","severity":1,"message":"247","line":30,"column":3,"nodeType":"248","messageId":"249","endLine":30,"endColumn":14},{"ruleId":"246","severity":1,"message":"247","line":31,"column":3,"nodeType":"248","messageId":"249","endLine":31,"endColumn":14},{"ruleId":"246","severity":1,"message":"247","line":39,"column":9,"nodeType":"248","messageId":"249","endLine":39,"endColumn":20},{"ruleId":"242","severity":1,"message":"256","line":49,"column":6,"nodeType":"244","endLine":49,"endColumn":8,"suggestions":"257"},{"ruleId":"230","replacedBy":"258"},{"ruleId":"232","replacedBy":"259"},{"ruleId":"234","replacedBy":"260"},{"ruleId":"236","replacedBy":"261"},{"ruleId":"238","replacedBy":"262"},{"ruleId":"240","replacedBy":"263"},{"ruleId":"246","severity":1,"message":"247","line":8,"column":3,"nodeType":"248","messageId":"249","endLine":8,"endColumn":14},{"ruleId":"246","severity":1,"message":"247","line":9,"column":3,"nodeType":"248","messageId":"249","endLine":9,"endColumn":14},{"ruleId":"246","severity":1,"message":"247","line":25,"column":7,"nodeType":"248","messageId":"249","endLine":25,"endColumn":18},{"ruleId":"246","severity":1,"message":"247","line":28,"column":3,"nodeType":"248","messageId":"249","endLine":28,"endColumn":14},"lines-around-directive",["264"],"no-spaced-func",["265"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["266"],"no-console","Unexpected console statement.","MemberExpression","unexpected","React Hook useEffect has missing dependencies: 'onBreadList' and 'onBreadShopList'. Either include them or remove the dependency array. If 'onBreadList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["267"],"React Hook useEffect has missing dependencies: 'onBreadShopList' and 'onHeartSpace'. Either include them or remove the dependency array. If 'onBreadShopList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["268"],"React Hook useEffect has a missing dependency: 'onBreadList'. Either include it or remove the dependency array. If 'onBreadList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["269"],"React Hook useEffect has missing dependencies: 'match.params' and 'onShopDetaileList'. Either include them or remove the dependency array. If 'onShopDetaileList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["270"],["264"],["265"],[],[],[],[],"padding-line-between-statements","func-call-spacing",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},"Update the dependencies array to be: [history]",{"range":"281","text":"282"},"Update the dependencies array to be: [onBreadList, onBreadShopList]",{"range":"283","text":"284"},"Update the dependencies array to be: [onBreadShopList, onHeartSpace]",{"range":"285","text":"286"},"Update the dependencies array to be: [onBreadList]",{"range":"287","text":"288"},"Update the dependencies array to be: [match.params, onShopDetaileList]",{"range":"289","text":"290"},[816,818],"[history]",[1477,1479],"[onBreadList, onBreadShopList]",[1338,1340],"[onBreadShopList, onHeartSpace]",[970,972],"[onBreadList]",[1405,1407],"[match.params, onShopDetaileList]"]